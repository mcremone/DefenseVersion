%!PS-Adobe-2.0
%%Creator: dvips(k) 5.95a Copyright 2005 Radical Eye Software
%%Title: thesis.dvi
%%Pages: 42
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: CMR17 CMR12 CMTI12 CMR10 CMBX12 CMBX10 CMTI10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o thesis.ps thesis
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2010.02.12:1121
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 70 /F put
dup 76 /L put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7B00AD58FAF645
1297991B5D01701E82228D0313FC7C66B263BC79ACDDF9AAC48A3CBF42B96E38
583E1D059953076D68148DC8B6C9527B3A74CE7DEF788A11531F44120BDF0F61
0B2F3ED94EEBCDE4ACD23834C242AA4314B9EF98E4BE72DB76EBDD0A028CEA9D
B4C38C1F2D24B8FDE686832FE96204552C820E45B6BAF0C3308742AE291AA921
6F981063948FBA78EAA663E7C1319CBBC4973E867C64567C9DE59CA766767BA4
8318AC1826F3832746D934863392146A0B0B03A73776F8342A2E65DF2F8B1A1E
F7D6075BEEBF61CCBAD11C2E4203DFA06B86FA228C160F74372815B7FFACB497
241D118E966A9E2DDDCCB3293D08E752CED49DF9AB2082CFC9155F21932C527F
9EF44A63B95DCF9B8E9561118D1BBD370F2305FD7074E1EB9E698665B9C8BDA0
DAC66588F4FDC26A06502B1C703DC72706D9DB5B26F28B4B1C4A509574910036
8F76CA681EFFC462AE43CE7CEBCE036D79C872ED6023A2F193AE294B1661C974
7FAA817F4FF9397539AE5DE9314D2D80779B9A01E3891833141D29DA65AF7A70
85A7301135BFD62BAE9FCE1FED4C575C5B9F73E5DF61B16808C0BE1E185A2C74
9AA34746C3DC3E663977CC8C8C50BA18071132FFC30D260956B40F788D1E20DD
9E2D098BA4F10EFAAC3BA7A4C2A280B53B1DFF3B52174DB0DBF41F7B46BFDF67
24DA79C7B8EFFEEEDD051F6F81604E1D29157FBA3FF97121B37EC28B9FA261B4
5CD23FBFB8EDC8A313E437DBCF754CA7F1F6B18817B4A075681C254065DB43E3
431286B563CC9ECDEDEA294E49937C2A663177F5C181A0EA7CBB0F1562BA8DE7
7919EC07C4D4685AFBF55026A4E51AA8C05B6CA2E984092E169D44AE2E18567F
6810530EC06631FFF4405AE9315192FCFF9B68A9091582842EC702F1AF8855B2
16A553327C8D262B80B58BA80F547F87A76E83DC1B5C1F03450F0A6CA8D3F29C
52D9B5A84CB30AAC8E71C33527190644E442CB5D8EFF239164A4C61BABC6C720
760308D38D73377D64620D67B2E2E33E665639E7EA21C94DCDB471004C2C2D56
24B7EA7EF3D0AB889D5FBDDE9E45578A1C112EDD1AD862CEC3B59E6BD4B2859E
9B6FC8AAE8CAAE0E887E56C3DFE719AF735502EDF3CDB02A8FB1E5373D818F53
48F74160A3210C923845B97C1A49B06D5DC7A1283D5244DA823359E754C07F13
492C9E8E40B4F201C4540081276CAFA7E905BACF864E36E74566FC670F5DAE1D
F1384A1AAB259F9EC6B611C92625C36DF6B3E557EAF3706CE1CF24EF40940B46
7C10C59416ECEB2476A7E493F8AA3B1D9AE05465929BCDDF691E1F9325CB0616
40A661E96F736726F75E005226CD26F7F6CFE579B9333EE42FCEBD221657E9AE
706912269C591799F67E45FEE5A243FAE5E6D09BD18CDD5F0F2752F2185EF973
17A62685D93247686C7790747C44F5D99245B9F0775BC867CD9D452A9D29731B
BD562E91483397EF8EDED36D93B021BB08B8A37B736CA3D75B46D146ED619C69
643FA9D44532356E9239883BC4ADF9558AB3C8CD0ED862A526CF30CA0503CF20
93B46D600D5887E74555759DB3C87F82751739C82708D76F67D1D903BE659F53
082B3A9CEDD456EC71F396F7A27D5D8619C555AB6885A5E5709F9E7E1E15D7E3
C29609BDBC6F03C28DA07EB3256B844070AFD4D5421121364E302AA41D847AB7
71B5785C32FEE55FCE5A2CB72AD1B7553667487E4F21006604D13603367258C8
B743B9A165151E5935E4B35E0E11566E4EFC95494BCC9A4A879535F5E631643A
393F4C945E9E7E855FC371159F6247B0418D9FB51337C75611042D157D43EF59
BB166D5D0A78CC90F3B0242C15C393380ED6790D9747EA194A6BA4D32A8A9806
173FACACACBBBA849A9D68CBF0BE96619C28670426C1D639545B8D6D44A4AB13
895D858103CD8DEB169881E283FC47ABC740C38ADE5E117AE77D1AF3C9B20346
CCA99D1D9DA49E6745674814278D0B22ECBEABA4FB88A3C7511931938F251631
B254FF7B305C33CC4976B31AB12C497EAD55FC6BAC4A66CFFB6162AB6E014F9E
616EAB34AE206837AFEE0B1D5242CECF86787EACA533A2A382E2D3EDEE5CCC16
9799B55F30B2E31EFB75CAD042A7793C1B5FC736B8D6CEA3964E81AC5DA99854
B18C20EBF61C8DC6B6A474B302657062506BD3753F7EAB60B0D5F3A4496CCC7D
1851FF02EC210E4E1827FF3DC19B03F1AC63C5B133FE24E539C48F42F472D51F
4ACA9300073AE092BFCB41E51B7928CCAF2AB2761014E508D8D63255A2EAD481
304827B96C68E1BA1BB259BCE4A267034FD1428A88D7C7B0BEE1FCA75801D466
C874148A9DA8ADC3AC7ED08DC4D3F9719333DBE04D9A5F7E5EA9A43D9B214BA8
6115621E12BFF4DD6AB5B267247FA7ADCB919F0EAD14A3818B0CF48D248FF2DB
F08C510EF9ED734429A5BC4BD592BA122656146BA183C690964281FADE0ED030
FA17EDA98E600E3344D75D691B65BFBB6804CD608CBF64475668BB8570EE908B
E420F25A5DF8A56D0B0AE20128C3B96BE44C830DB12CB6FF55928504F09A0B0C
7A66D433F68976E8928A05284C71912BD09A6F4486F4EB31ED57916C53AAB77A
E82AC5B434E81D83C618A31670B1CA9562F4E5BC7C4DF117CAC74DC9C49E154E
4A15DA719298D4E035BA0F141EAC37581841E41C8343E335E2F4BCF0BD6B4D1D
A6E939EDF1D3C002EB6074CD669B606471F35D00F85893D8E380578EA81BC404
95F07CD856ACAE4AC5846E29C2F4355E31AF47FDD1724AA5E10F15C41E84DF4C
15DC61372AA2197BB6FB3DA1330EA03D51F3530A5BFCEF7B344898F5D372BCD6
39A841CEAACD5DACB03EFC4891AD3419609BFDCED4E5848C31CBA9E00FD6B57C
98EE143AE6275E3032BE94916D5EB045A898A6D642E325E604BD7B2352EAD9E1
3767E5705063633DE93B42AF418067D265FB0EB769BCB27BE7FA54DA39E3D058
40D2A53AB6A3272C2F93C756A31A2E3C7AE829074FE2A8A6B17BE1EEF05AF9CE
D43BD285582793A6E5C277543D6A05012040909393914B23C2D17E7433D91535
9D8E9F8B0408419946A0DAFACB322C9B20BF63315695C67F42B1E7CBCBD2FF9B
48E0DEA534616CED3857E8FABE1E0BB60FC8EA3FC73502645CF5C8D2EA733022
0A2A2CE4205FA8A1A9EF528234C06D5DF51277E99B0D486CDF12D28F0EF22485
02379D0B19CA7A36F6A0D34DE21020F897B7C764B0F70AC20A5604048419DB3B
25AAB44EF62D4A588FF4A44E76C266E39628DFCCCC4CBDC7F58163E9333D0B01
CA4AF666BED3C0CA231384AF0A2BC283C537B9D76FB108A5C48A4F0691F14B8F
68167598BBA8D99ED0899776BE04E7861988DECA3DD25167169C67798C080E48
738A83654BADE6320730610DAA6B08E73F0CBB7076F50A147A3D3609D3E91844
C2472C3D857EF2FB0B3C08C40A6A47A21D7CAB22905E440D480D20C6BF4864C2
83B6645789D57ACF95AB894A324C49038FED50D1D217A35DCC8C94FAC64E1BB3
1428EC5B185452898D1AC30F01930CECC84DC1DA587EE625AA1DB4D582B6A328
541A0811C76EFE2FDA89B9F2F7D0938698319D39C08729D822F9002047914543
5673568781C787DE10D2A0B124E46A48F281D0C5CF6D8B610CB2AA1D94A23C67
EE7C7D4D6CD25A4BEA3355A57A2390C881C3137F12FB843C741CF84A2D161EAD
660A42E082BAA86CC8494A5DC53E10ABA0DA6F7B846CFDD8E71B0F31613CD79B
3BC9566A1D991C0423B4E7C5419A53F019C4835A69D7A1563B82F48A25962B6C
A5F534FBA415C413EA903A30CEEAE61F9F8ECAEF7730909D2CB292A037E712C7
2DCF4C68D5F93FA0318E155CEAEA29EC37FB4B2608578A57C448D7B9AE3A7CFE
1DB97E9C12893F7C001BE9686015CE729C01BF5FE2FF9B10AC5466E10F01903C
D626E0FF859C468CDA5BEE9B399F0D3BA3D5EEB95B48CCBF24978079ABEAEEDD
ADA605E50E2857DFDCE52DA498560843A65DDFF833F1C55F3E695F7474138669
6A7A1D72598AA6C6E672E2022D8BF47C319EB7E1458BEF642F31D2D5F5AE19D9
9E4E1D14A43FFCE54F27FBC1EE74915E0D684C92007DB44F2B598247CE8660FA
88B3DF1F9415878D7FA8360E04ED0477354F9517CFBC701D3B63F1AD54F4C4C7
0D88E2ECA4231B35066DCBD74B3B1D2B71F46B65E02350078D7306705B19E233
470EA06FD6BD63EE2F46568CA599E0AB443A6F18130362FD49DCF5B845A28828
93567C615A5A6C5FA4C37B62125D0F5F28C5AEC19B300119FD194FE6124F4A61
B3B700990B46080DD2EF5DBAD6BD4F7D3B57C8AB07A05435723EB47004C9A2A7
2D60D97FF5FF3E678D627AC887CE99AF58E7057E11923A68EF217067EF93D2BF
C6EA45C7572E0247E2DA262AC29D3EB58B4B52970425DC6245EF546CCB1F63E9
D36173C00605F53762B14139537ADF66087F41433F176B13660E60FF92236BB9
AC075379AA55B512C5FD594F90A3DF54D2AA589C60A2E631F0C0FA6C66E7CE54
3E001F93DA1EB8FD870287E7C57F6A1B31743196601158438C8E796854E202F9
0B065F6F2128B7D76B5D5454F5F041EF0F738F682AF08F65B1BB371BFB2E5849
2E9E449AD3B6BE12E41349FB9C5A80B439197064368A47F4B9A00C33193C27EA
F31E0B24B2806368580D30BBA5940BFF208F50D60DFDDE5262EEE8DB380F67E2
DDE4B16184C34021261D17B008DC0CCCD87F8C70AE1DB3FF5AD4A49C3F833926
3AF20B3A98DDDBF5F7AFFBDBADACEAF84AC69B0F0BAE4A6A869FE7953A711914
DF302F0650A29940095F8C8DA6B80CD0E4313BA0120E8E9A0C97C91B6DDE8CF5
5F9C6A4C6930B55D08A73B948F9F8980AFD695F1F665AC485EE69274C9DCAF44
7F1DD47F317C0CF99F6487CA78AB34D877980D238F3F87DD2BBF0B5AD34F040B
E0677536B757A57D14BD50606102F9457E4A26048503C92CEE45B13BEA285D1A
5A3B437369171DA6C3CC2368D6B89ABEF6947B6B5C263943F62D7C9461040988
25DEBA6C9C0BE79B6A712FB1A1B10F2646B6FEB0CF035D66F05E9AB25C42B46B
D8425BEAC256E2E204C44D2BC8B16FF210F1FCEF25578D46CDC8C08D1970F1C0
7DAB8CBA8B03053E847D3E430F61EA635B08463DC5831495F1C822EBAF2275F1
54610F9EAF0A4BAB6DBEA039BA55E960F191790FEBD74F92852520E14D03C3E3
53F883A02AAA8C73EE4C87D1B221042FDC98265D8751366B13BE91B8F0A319E9
04C404443B062E58E05F940ABE96572B10ACCDEE408ECD1144B481FEC203B9CE
1BA36AA5CD421928667D5A6E2D473140D9740A9357F2D2D2007548BFB970EE95
A5EAA85D07D3BFF905D4B56A23A3D9479CFC47E4A74A9A29CA1EE26E597F0516
FD6C2AB355DB68094B8A4091C9C5409B9A97A9CB3B6DC524545A55DF3AF2F607
2DAF48473EDDE5A2487AEA8414048BA119FE1673B2DF79A6DA68F4E881750713
ED3ACD3202107FC0EEF2C6FD75FCEF0D8E402988A5C6B7B7A61D4C895A05FD0E
257D9A601C69E747CA9BFE0B8475DD42D4FB136D8D2E6AA82E84660A9CA86BD0
3E61FD9A3319AA2E491EBABE27F6359B34CB34E2AA080D83D45DCB4CA75D8BAE
04537FBC84E78459D93249B675BC4F517B5F1649803382B7368D4AA5BF4240D6
F7A22F4BC2541F31DD6666677011CA637BC195A71CCF08D809A41F91AB2A97B9
D800A8EDAEA3F95490C316170DD7BEC0602EB00D5C4E461359B38E971A86614D
766CFBD05196940F32C94D5B6594347A1712DC7C5C3360867EABC736C7282E44
258459EDFBAA6E39386E56B94579FD9BFD76F6B3B7AB67E50B34C7997CA9E5D4
B53E530951EC221EEC9E4DD58ECCBDFEFD02C54C5EBCB89DD53297796525603B
6FC767CD36FAEA51C95F4CB6D41247AE8A48B30F5251E4F5F83B9C7B2C5C0C53
B18252324952451E1B39777AEDB5370760FDA089C916459094479E08E94995C0
C79D13742799355B4BBD606AB61A8BE84941133DFB7755717EDF06DCE7A1E889
C0DDEB28DD1B215D8F823E974F33C41354EE817FE3C838C47C655D34A9A06225
181DE72C4175B82EE8423BC1A81786C2D73894A2DC9D731491F5E0FBF3747A97
37FB2A08A13B4157A41306B6741EB86D708B3D8AD400BE6F741559D860618252
A70D23B3CC7375AE8956A44A56DA1CCEB8BE25227F287CA7319F783554B93FB1
4887F54A5A9709037DBA87BA3DBF8839A90526E264B50A8196CDFD1E20E53D86
FEC8A4D110105CD778E9FCFFDA39E14B27BEF5257CDE918E0A1124FBF1B533C8
FCF16BF1A5A744B02C966933475199FB74AD73DA09307FC547D8CA1962176F56
992AD92760A0D84E73B8070265571867CCF2192536CC4FB27FA2B1A656FA0665
08A0AC9C839BE80773F68BEB7561F85488D26AAC5F5266AF3B8CB3C4F8B0C4B6
EC5DB18DF6946EB6DCA4F49A86C976E7BB4DAC174CA0321602EA42967ADA020B
226533CE27995B89F1AD73068F5A929B8DE9C846DF1AD514F72984D34F81651B
DE90CC04428E454B86D4E70D51AE6E4B6C8C6B46752A98B51462B78BD8128013
58420427AF216C7DDF9990DB71C41EB808B4FF5DC855C78EC499EBD99A79E144
007BC203CF1F9B28FBB144F0F8D8D84BA4A8B10A68AC0A02F49576207D467683
E74C376264FD711FE29BA653F178B52933991C68FF9887DDA15E06168473F696
E74C2A4AB19504977ACCE90F1EBF283B7BA9AFA46444F83240605A8F422D7EC5
C3B25EC5D37725151F5F61F94B2E928003B25666DB1D7E968583DCB5FD0099C1
A84A9FF84D0F3AB838354AB45147F89C52A10637FF008FACF90674049B76E8AA
48FB534D6B368E404FE2E6BE6909DF150BB60A80144D8BFE8195006F6BEFE117
39E1F5842EE6F9474CB5EC7C8C87E986DEC921DB6008BC09C8B1B041596DF70C
BD29A00C88F9E74D14448C5C417A72646A705FC87F8C41186C02A539081C9182
918037D8301DFA3AE34752EE894CC4440C379C262555EEB0157BD141B66843D0
751C3AD124F873C850C16FEEBB23AC9E7F5955BC97883870D4A11959365F43EC
41D49664DFFA0E253289767B276057492775D41AFE8F9BEE6E65F23149C55571
666F50B803ABEFB8795867460C08CBFE70DFF3BA157200D942471E70920BF6AE
772C590A832F08078B171562418D51A48F12E70E82C110D9B5A0AC5D3EF6F867
89862B2B3D86710C3AFFD5DB5DDC40EBB590D19D7FF3A58CA7E3DB85C07BFA9C
0D0DAE0785D03B4CB40774E9DDF60DC5CEC9652F08788D73A26D02325065ACA2
FF4DE2FBD982462E68473507C0B5351768837E4EF76006D9FE2221F9449D8E7E
7B437C80FCD06E2F1EDFF5A59BDDC9A6E874336FE2EAC60496D8EE8F878FE6EC
EB2569AA44F56F0978FFB98742F443FE564805370FA7E6A1D86E4F9C2A00D470
1E04E4C1AFB1D03A532E7D02638DF7E369811A291C8237CB5024F392C0C59774
EA835A6EFF3A49291EF48AD1F73A30B9898696DC2C8A91ABE79C9DC4F586BE72
CC7648A9B476C8BF73AFE43EB349E821F553E2AEA00C9CE71A1B8C366EDE852D
E2312BFB09D047C100F2002E5CF6A1713639D09F4A78F85F88C17525E48AD885
DEF9D95C9836EFD8AE8375FEB2607A7ABF273333CC2588C03510DB53B207490E
BD3A0FB8EC1357A2A15EC913718759FEC4C1AE13CF78332C73EDE0BD75134DE9
352DF3C329E0569919FDE09FF7AF32F6E0BE7C6442241626BE671FC215ECD533
5051634432E671DE051A95155C526EB0B60EAF6211CCFA5AA58C6FC66468F8C5
1DE2D9A7B6E0243593BEF0621568276D8D9C9BFA13CC9E7EE18545D17020E987
DC14971266CB57CC15C1C8C7ED9CBB0B4093CA9AE7D30A457CD66DB55F25B295
7B89D1CB584205D888657405FE6BBB3B2D3CEDDDB7A57182BCF8AD62686626AF
B29A9DD57DA9B987555C9EBAB2616D41E266950B4FA8BEE12B94132DE2FDF6BD
89DFD2A6EA65F84DE5FA525C6CD4038DFA0081D9736F89B7DE6F982C4D212804
6048B968C764CE20465B1AEAFBADE0741FFDDDA4473D678AB872C60218A99ADF
86F0F831D8BA5670434DD74759DFFB842EF62D737973392F4E872191023BF067
3E7771F77BAA285B676309F0C0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.1: CMTI10 1.00B
%%CreationDate: 1992 Feb 19 19:56:16
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 76 /L put
dup 79 /O put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 97 /a put
dup 98 /b put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
readonly def
/FontBBox{-163 -250 1146 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E3948FFB0B4E70F212EC976D65099D84E0D37A7A771C3101D6AD26A0513378F
21EC3643079EECE0C9AB54B4772E5DCA82D0D4ACC7F42FB493AA04A3BF4A1BD6
06ECE186315DBE9CFDCB1A0303E8D3E83027CD3AFA8F0BD466A8E8CA0E7164CF
55B332FAD43482748DD4A1CB3F40CB1F5E67192B8216A0D8FE30F9F05BF016F5
B5CC130A4B0796EE065495422FBA55BEE9BFD99D04464D987AC4D237C208FA86
0B112E55CE7B3782A34BC22E3DE31755D9AFF19E490C8E43B85E17ECE87FA8B9
1485831624D24F37C39BF9972D74E6EC4784727AC00B9C4A3AD3DA1C22BD6961
7E0ADAF55422F22ACA5E4DCD4DF9FCD187A566B7FB661D0530454D0DD6C6C50A
7A3875C6CBF8EC7769F32A1F3F7FC1C072BADEC97794D4E90E0035282A170402
356E5A9CD9ABD80AC4342A5283E458A7269252F4541CBB6452B39ED54D336D0B
19928E9CD1AB26AD83EB209E2EC75011A2643813053B5DBB0246097C4821B5F2
C92554E9140BE35B2DBFCD98809A8EC9FC910FDE9E0D86457C70ACB056EBF90F
244DC0A5BBD455E15D6E3180311D52CF50B0BF7D0A7F64F3A1821E0AEDBC2E7B
AEB549FE1D51088C153799C6E089B5D5D65E1C4E2D2B430CDF1FFA23CCB25D95
5C43C8942435D0AAA3D9055FF808F2C3C887A3C469BBD98F026D0A59E26BA9F9
C2144CFE49A9AD892D4D31764F0AE3A10644AE3966B0A790684B14D11FA49785
EC5565D2B2E584CBFD85125F3FAC133338DE35361943DCE9AF05FCF2840CE512
998D42CBEC52B57B79DD63F00985881E8463396ADA47189A94DDF951A78866F0
B8A3D9197E39335277EF2294308DA70065D910943A34F7D5F2090FB4AA42ED70
CBA469A9F64B95A6FBA4BC89DBC93765E3AE4723162DF3F9D6BDE77DD5870ADE
C8900D6346957B84C3CE88A8F9A12D46B8FCA50DF4433B0B8AED6A63B3DA102B
6DF94E62408E24154BAAC66B2B249C695BC0FA37A28699D9C0F3EE94AA32E3C5
8F8D7F803B5D25014D43A353D719B14B247A87898A960DF68C0C0BAF70C83917
6E9F7B3ACC64DBAEF3FDCD3A80C0AB907EE34500182EAB8A05F5426A2F9AE8B5
F49023C4EB52D58BC449B85998ED156A0881303EB6FE91A21F78FB92A8D777E7
C9F4E3DF67AD861E0F58D417F49CDB9215C5A7306B6D86834FA116640359081A
40B44AB3ED422706B229E7DC780B4CE471A37963ACC67A05D0AA0FC5EF576B1D
E985A8C151B0D9CE308852FE82C58C258551931A917D4A84F6654C29A6FF53B9
077DC381786781EA164A68BA1DACFA9F8DF59F16683B0BBF6DE5115E770973AD
E35B77A8A1299601F6AF98F814AF4D4ECC71C371BBE5A92CD023B7A166A021C4
24CFC98B95DDB02522F458222EF16EA7A537FB7949AB30952FCAFA876813DCFA
D951CAD5E3BFA1565F6C6DC7AAFA69D2EDF045A51D4114056EEF9D6ECC9E9D16
F7BEE187D5A0C1AA9B685A9BF2E36995CC7627A8247D3144ACC5B2F165EADD95
15C3B21956E9FCAA63FD216B57C92D5E94C0971A84AFB196AD2BDCA38AAC408D
56E3AA3B1689742C946DEB45F6596E3DA71B5ACF963B68CAA80DB238E4B3BA1A
2676D8C2240532C02A93197455C2925022416BAAB41B2EB2E93A73064D084FED
965B9E7236A380F427A051865F616473185BAF9BBCD755D911C7BC7371F40AA3
77E26AE00F75307643B9E8C3CDFF99349C855D3FFD0D9314A3CF98DEFDAFA60A
5D3CA5D044ECFCAAA273ACCE65567A3A5EEC25746D637999B819B36AEC21DD95
EFD4E8A72D75E879F1DC6CDB8F554A547B4AAD5BE2D27CE2454C689F3AB7550B
0A0286600A3F8D9A64557743E3C8C50AA9592F08063E9DA251E05E2B4C58CD55
60F98CA681EDD47E0A798D71FFA234E5D119BCECD7F33064035D566BD7133A1D
C5C823F2CA506FD7A576BA566BC2227E56BC7A8FBCE1FB2E950A2D14729CF9B4
8C7430CA6109C7DB2BECAF64A56A5DABAFDD1CF551657FC4353D8C1BEDF69533
44D6D681D6362C1084DD0F411AEA5C3C3DA98F6A0894DA8999D57649128B9028
792CA6589E78583395AA59B426A873F6F9E65E6A91A4267ADC9CC06290D0583E
E340FDEDBADF7BBEF714E2DE3D4AE1514EA842C317CE90BD0EA7C472624BFE31
CC385B8047575EF0111DEAA3C7ED89B78AF233DE2682328F5A85F1F85D8E8B83
08C156DF523A8228893DFBB0AA452593166D12A5FCA76AB80B014CCD1B2817D9
8E56C6F5CAECAB40ADCD4E8BF7823F038378F0BE1A8BEC129B727B7FBC8B47FD
0E9B4F5FBD7B6E53EA18479C3128F2BEB6EDE28DCEDA729262776ED298655100
72CDAE45E0922E8DCCAF0B928FFE52BFC95DE37E8F9ED945C10EC2202AD82379
6FFDC11C3C30D0563DCB87A82AE53913CCDA057FA48262DB02E8A3CF61BFC457
4FD8D8C7540BD75C264F2E38D86B1004BAA41A6B5DF798ABBDAC319BB4284E77
3521EB544ABA79F9BEA4E5FB17CC0F1E124E9DCB6CE44CCECD88872ABFEF4135
3AEF414C05EE5B3C3900CDBAC927D81BB99B417F96CF6253EE3ABC2C9F870902
99CF172C8A9891CB6B3185A4898B21F8491674EA647FAB82B1D480ED4B0D201A
E28E1470874C0EF91AFA8F177911744B38615DE2DE9CE56ABE8F5F60ABEF3CF2
4A84EB5223DA528421317B95F66532A50EBB68DDE0BC16FCAB514A600BCE691F
92BF377DBE37C0E3DDEE6EC688150D82EECC357485B783A90E03BD4EC04D4254
9D1DBA44CF961A60A99DEB43FD9B33578C5F53B6A4779560B1D28048C606D194
EE4F48BA0961D4C9AD98AF750FA8C1E6669F2C1E292A801EB7A65DCDDD89A71C
B15135C7CA82F6987A55760F0211F3D7A237F33EF5325CD41F278CC9448D6DC2
C046407B8BA6C9D3E70312A8F0521524EA20F96F4E43A498C033744CBCA63A77
FF6CBDE5F4C8E49F4BF1605CE3DE6D936B5E1F2C00031DC3BCFD5D00BA05C26A
297EBFD600B528A015F7E0252A963B248380CDD1FDCF6B924A7C5882AC1BE86D
47BFDDD8B69254B4224388F1456FBA69C06C83C94D9627E219B384E931715A6D
5C428579E5D52E8CE45D20BFADCB7209E9D7EF7E5388568E7CFDD31D6D6BA38A
CE04736446A3B2E27678380E83A30909885478EEBFE2035E98AD58C33149D416
5CF9AE3DB72F215DB9A6A70A85D15B79F45AF41E293F8C5521ED4512EC7CD812
8682CCB8A5674604A5673AC972A86FAC7900A634AE8D6785C0F3178108580E46
D9501BB91B03927E1E83AB34098FF87BB019850B1CD82FE41AD4AC4886321DEC
9B8DFDF8ACC4DC1ECFC953BEEAB23E0317AEB06CB42AA6B1363A4B77FFB437F2
CB945A9405D3E789D8D899B80794767354BB2416CABABABFC6120DED8AEA656D
586DE475C84165762D0C454DDE7B3B59CCA885FD7EDAFD0228F3C7019A2C5510
2E994BA8684D00048F6D8A5C774A4113D8C40EA9D73E73FBBBBE4BE0EF47EF31
C209F18F57466000278A0C4DE8C297CCC3F9174EA573F4B8F793905A4636D754
CFA913EFA9BF9C76E91648F0A57BE9177C6B0947A30345305D445F0716941B84
42696F2930303C2C50323EDBF6890723AE3B26FFDF67DC999E6AFC0E047CC071
51EA1E212F59600DF69B5800B2361C859E386F603F4B37A64D6EFB688CDD6398
68029082E294CD15763DC3445903DEB7D9EDD45FF245364F7D7094AE66A2ED09
46E9177DE35624905ED91BE16210115060438C6019BB54C6AC4AF3EFA51E8390
50EA2AB125D4A3155AFB3307D0A024712E9F333C2BF62651A04834439539EBBD
653887820E4DF084529795D5A86F00CDAD921EDFFB9C5B09F0D051210B710956
A2A81B388FE54CD863FC136C5CA31403E932DF0B230D042EBB7E496BCE3F95A6
AEDE9FC1BC2185EAA5FBF15591B21CB4E085BA8FB5639FDA72E1DC5526D38979
1A4C6FA0ABD7E219CAF8E5DEAF9F692AAAA88F39B88960C48F0CCC2B92D9F90F
F6B972BD1BC0D659BE14161F88FCB0B8D8083E08041F2B0AC2437250505A52EE
DCD2682BAA8D2EF5015777762382AE2CF263F5D69C4FED2642491FD1AECE532C
B585559DBC1869CB5E46392AA1E52CA8BF1BE2AC9CA9A489AB80880DBA253D70
FECF1A50D4DE9F6472122026701898DD30625F411B29D8DC512861FC2E7C0558
E11ADAE2CF83E1E5A616142CEA2FE086B6D098057BDDCAC0D21562CC8AC58A37
867A453DFB06F496FB8164EF4E0DDB9126795DDC1CB77B246EF53ACE3D890972
CAA460C8286812EA88FF5D21812D58BAA0F968E76DF7D2D15354482FAA5A67A1
D62B04C1FC11B63E5935A37A533295A42C294C1D3EF1B5386E997475633F85DF
ACAE1B45EA6E103E08D459519B55A5CE8ED1A687089ECA98A38822EBF8FDCCFF
AB790D0A35F87A5276A04113779C0BA1E32A57E2E5E5B11F905A73CA1462B7CE
18501450AEE51B407502647A32C40B43DA852131425E4FBB9EEDC4FE2457C1C4
A88E88C1ACD371C6F787ACC6189C902247C724D631DE0EB9D0451949787D8714
56EE5B79BC3AF7F1423FDB29C32CB7956ABBE25775EB1E7A5827F908FF381F96
F51EA87DBDDCCE223B626F222108B5AE3AF66C66F4590F91A2E11666A0284CCF
1FB9289C88645A60FE98EAC32F8A4674FE9F116B263A44940029D4DFD2B019CA
89DE5350C8232A513BC9C74EF64D60249BC1670872FE074C50B237449920138E
E6D3387F404212ABC156E53F6BB961E99D2937DAFD08C8625ED2BE90AFBF0423
5F5070111469D8A3AC0282D2163911B567BF6B7884557DA6704D644248A896A1
923D0A34651B5588F2120ED228B4438204C76F1BFF63332AB2907B5CF0AB84FA
B6AE38158A00B2EDBE7217F7D59EA687E9D8ACA1200A65106E2FCAA596A0DE16
A3191155AE4AA1B355321C40AE97D82695CABD9D31C9351F0EBCD105650D196C
A12F7DC2E17FE5D737F3E40C21B78BD009AD28C7BF632611382698ABCB4A0E00
3091B1AD9592BB6010D34A553DA2950A9616A5EEBE7CB86ABFFE7D10647CEA69
63C6320EF73794943B78E76E78B08A7476556E2DD3C66C0DBBB46ABEBF7D2180
E4AA5CDB85431A0C05FBC80C44F8E49A3E6F0C4102CA925C8F02D9B2AC7C1CBC
4B400A563CDBF599F266596588259A0B91AC0CDDF6A32E26655ACF6E2DE2AB11
5684B507AB41738A2411475F847AF19723135F9EBB3D0412F1C583276ED07A10
20CD29D0B136364AC11D11377D80E38FD34B374F475668509E9A85B01A336B79
62AE75D41A0D0E1889E04CFA24DE3B6D3E8AAE71A7DEDB15D2B8889FAE6BA85F
B91F353329BED68CB0F691E2221AF8B9D43C4B536FBBE5258AF9C7B43DD0B9B3
64FE5D342899314C76EFBE988F3E878C2F0FC27A68F552B5547F016884C875B6
B4DC3C69D4F9743B2F77E2CCF9C8D831CE37D38FB12E71EDF82668AF22540E7D
5A85C59046BFC02EC917A7B92FA5E1345EDB2546F43B94055330A2ED8A71732D
2E0671374E26B6EE6B01E750D6EBADB2FBD3C66CC2E1E5729D1BB4B8DBEBD2FB
7AE261473FB302A6475D753AB1C3FAE47AB2FD7F5EB9E0F5F7D6E81D04B5B90C
740B11A91B8A0050B242A5AE87B81196B079E4D61A056969FF52B6BF70400838
1CE9582515FF55765C6064CD0881EBA4E62FF175C8EF77FB2A38A760B603FF12
E6D7F58603406BB627633E9007ECF080B0EC7FBFEFD7A592B6395322FF0C7056
8DBB204FBFB05ED1561C5C1A49272CA186907235410D97615E6F6D9D4CD42F7B
ED5AEF38299CC0FB4879D3838ACC7D813D683205A7980A8784701C560887731D
8327937DAB9BC3929C9BC590E468F797E2D026DC0056AF37474F78BE5A26655B
3C9ADF449450737E637D2B05E5EEB0BF6510BB6A12A38D5AEE7609B2E04ABACB
9696DCC1F2D5730E3B8D64EAA621FC5DE9B3350BB156193C643DAA9CC4DA8B97
D5987E8824C2BB3DEE0CE17E352F3C93A1CAD53A8970816510C1F4476C70F823
FABE294F822F5EC3EE8011C386B41F6F417E5E1B1C708B319B35561634B24D7E
72C5DE38AB00F26315047C5F70DD8B8D1F2E4DD8F27F29C72ADE54D003B40091
ACB203F40097DAF0606F870FA82F9B45000C7CAFA09AF43A0EB727EABCFA71AE
2048FD7340895149740EED04252515236506C32075247550C34DA9464155E621
29B47CC1B3B136DBCB000B713F4F7A44516DF8DE0A1D0F223B9CAA156B277368
A84D353B8547D3A8910C191FA18D9860CC901332067C8E3FD43BD5017D5146DC
540D136452E1B7D30EFE894B6FEB8062BDE1DBBEF7B04126382EC34DCBACBA94
A64E41E3BEABA6EE43433E366C6FA578864757079A002FD947A7CF6F5D8499F1
BB087FCE7675B84BDC9D4835771A35DA4A110C03FE961074F40D8F44F6AE3040
5793B6E3F823F071B09226564A0B4A43537EF57D89FB923EF574862E6900F65C
26B3A463CA8D76C6A1D5FF636AF53B9B5016C0B80B5A2B8B56124C223CBFEC22
90F04808EBC8715DFFC26936AA734CE0AD6DFB58B781C15D5EA7034810FD0F5C
C755DA66D741B4C6582F8EA1BD7AF32EE3D858ED0A35253D263018062BA782AE
3523ABEA66E2EB87C303439C416B65D636A32929FA7EE11FC6A2C612A1EDDE2D
220BF386552AADB7D95A59EF3A8AEE49D2C189DC0A1CD97B8FC9F4243F6CBE6C
1F041510B7A3878F47719803967B140272A20B1AACEA573FFAA41262984A81AA
A6C05348FBF78C39186FB4E75242605D4563D6AA9DA8085DE6E9256BFACBFD73
7F466AFD460BF099B9F2B7D3DD15DF5234701758DFC1AEEBCB9F580BAB975FA1
D167F69AE0B09F500248D54D8DFB5E5574273131E98F0B64D20AD9D2DF950368
748DB47ED55F721CE237EC7206C33DA58C2CCE2570DC8178496E1B62D15582FE
619043D09B33A4F573FC015AB9AA62F03D0E9CF996465F2AED45F0682B0F5A9C
02FA8449D6E99C6225ECA398B14B9BB83F312E09D5C7EC96E7902FC3DFF8E8C1
DE995CF133A3884E30DA3EDC8EF357E170E64770506C13259856608EDEAB6F63
44CF3CBE93E5CA63E507A25504F13F210795A83AC750DAB6F10AFF97C8562610
1B177B5C11625C9DABCCBAA0120E23F30B394F50C8C4BF702BE5808AC72D6B31
117A5B9B594783654071F685E0C0EAFA868C5B034C0DE28F976FE8D3EB6C8828
9846C0B780571315886691AA49648B16C253E9EFF149D97CD8A66C082D0AE64C
4A3A5CF79E1F79B4C558937D7AC03DE47D401431AA000DB9C7D15E7185F9261F
F8234A52488E31AB41DCD0D1E3CB942ED43646B33893F72E5F276929405134C2
2DE6D934143BB5E8D0512CCDD3EF134CF76580C5ACCB0228038A5D6106B0E2D2
F1B51F231F24BF0C36091E0B185A8477EB29CE16FD1892A97F5A165AC68EF040
CCFF1E3A7C4CA8E1FCC45576FCA95B4C08A43290BB50F7D74F9A8B16B7A90BD9
A8244A9A2CDB24265DDDDE96A7A0F02E5385CE69BC613CC8611BDD66766BC160
6AF3A435347CEA07838B89807677B3EABD190B9F19F72B4F08ACD3E5DBED7862
F79011CF3F1BF02423A5B867EDEDD1F739E4623843DB34829C24E283201EEC8C
B2DB262EA229D8550124D55685918EE629C3CB6F1D38B88ADADAE58FD91314FF
4D2FB5C393BF95F607B1F0343C3DD3B246305FE1A9D833E202926B7BB56F4883
23BAE21EAA9CC2AD9C16D59BF7AAA76B8D7BA591630169727AADB3F787555D9E
B48DC4A137272A85F4C56417BF33DCE769AF9687B5245C9E3218DB61F8F38264
2E66C8CC7D99B6F67A40A9DB0113A99EB4F012E45A051F619A84F5DBC91B4132
93CC93FB4E2AEAFE32B49D9622898D77345B5FC6B5B82D31BDC4A77449DDDD8C
90EFA0D9DA629600C4AA4E1965337336B870A7B72285AF456104D72385A6616E
D8D21F7D4DAEE4D75E52D427F2502E080F9FFF112C616558E124A7000E15B4EE
8AB73441B7C0EAE0F4AF0D38E734A588F1615C90389A257BEE7FF25CB74FAF0E
E3B95849E0116B0F26A7D48B35A63620C07E74D486F9CA142BF25EDD43248CD5
710A6E70C04C27DC0AEEC52A0FA7340120720D4C2934FB7E50D0CD30ACE64FC6
7F5588D93CA888D5F58556A296A127A6889F078B29643C985BAD9DD07B513919
130B1803120D24F4EAF82F98F5A90D850C0B9F96C62EC3444360813B6B730655
9F00DE5C278C1636B91FD98B34AD35B677C773A7E379A7285B289E102306BA10
71577FC4B3168B6C9F212C074564F0C716B661D6FB739EBE59C78DC32EFA71F6
2587A015C43A9C64EA1329409A4FB998D410FCCDCF69CA1BA3BA736CA9CF4F76
C7E6240E3BD5A951A5992776CBB8E5FCBEA14DAC809C6AEE06A253F94C5D5379
C842D0A448C8572437500E3B2E1BB0A775340A48CB026C2245677763633A0716
8521CC9343C21F9E8C665DF9A3FC1FD62E771C604384C1998EC86FFBE452F636
8AB71A8C702110ED813F13A13C800AC4D45ADC6C0622205A194541AC765F69B6
1FD47E6564225DFAAE3E6D5266EA6762046C7E06A0B9447F9277C5E0AB26B556
5FD191F80C17535977EC00235EAB5D615BEFAD40EF94719AD38BDA04C90C3997
334CAD3796B5B746EE18A2C5CA48154B09F80964CDE77E2F1E36F780B1FA2974
7BA022EC03A842301E89F6A37EEA6C2B4F22BDE32CAB59DF26957268217DFE2C
A24704BAD22B77F065E338DADAB6432814501586B81B00D5810D8CE34A8FE8AD
7CA7297C73ED6AA6CF7B06278380AB4F92771A82FAA624BAE16DC003D6CD0BDB
F1D6F51AC4DF07E01E38D8B62991CDFD0EACF2F1B44CE2D0ECB5FABE78C0FC6E
633EBB2F1C5524F24F93A03CEB1B536EC8DF9F49A0D4CC8D74F4AF80C703E320
32E5A112DA9D993AB2FE489DB375E056E68A83B35C9BDF140890F2A71EB42AC5
3903BE815AB58E2FB29D24808B7769EB25CE29E10773D27A919216B45BC7B84E
818AC44F7BE5DB581D1E885D811528F2CF4BE2687D8F7CBBB7135EA014266DE9
91732075F0B0722FE7D10C397E75057C9CC892A200AE7CF488F42C9AF0D61162
CA9EEC8A3D5999D49E58D6F9FE5270CA73DE2ECEAAD2533C5DE6A89D7EA8A910
3BA089A8B95146231DE8DB5904226C180376AF780320524CCADE8E6614D3AB9C
C7422C88D9E12FA8A883AF098CAD990B81D455B80BCE8482D4721FEB99E2D1F7
F23AF248D6AB8293E3CBCBCB6145A9C4F9981ACD889757B918F5BCDF0863CB69
A1E9FAFF7911DC809456470EE5FA0714C163E814F235828A0699C99B42FB1B33
25F177F11CDA2B1AF943308450738A2C2C876C595AC1A34824FB9F564C135E8B
E398025D69B2FA68A8B339D9C565BB8211E9338CAE07D0440994F72565B35CC1
4FAE98D3779DF58B0E72C15E0474571FA8C8D8B2798A660CA0A792FFFFFD6E27
F6C23B9557C45813FBC7996BD6012B77B141039D4D86154D078A87A7B04FB00A
8A56A7165CAF7DA70A74BAAAC0B12C70B7AE0C1A3B2C667DE22DD6B4BC36CE9D
53E37F877428D1AD61138F6C54A2C73D6E982B21BC216C1D40B5C3D163DD5F1C
F4CFCF29DE01C4246EBF9A5919841DE85798FF4635CC4FA63ECB0DB47BFF0A3C
F92CFB4FCAA7ABF8D71FCE02F2F8DB02C17F8911D5A958DF4F5DE1D80B6C297D
1146E1A54B881C301E3DA6A5D79DC9109F74A3F4758778E3DF43DD4D21CC3911
0479011523EA8E3B14BBADEF63264663AE5165AE3A6392E51ED6816D683A5578
ACC9A4CA5860E03DCD91B0F55E5622F035533625ED36BC122EBB22381C72EF17
5FC3C230B19A91AFB490CE663CEDCD0EDD3C79F7058E39F6FAFA43980AB91848
D1305FAD4A7A6161C4C59EB82AC98A96915CF1ACBA67DDED908894A8478A9F69
CFD2A570D459E101DFBA4285EBB8893A1348A4AAB44A5CFB4A4DDC4E320C95FF
E2023E3D1C089D9B97D8B2F92C46124A3DD68A58F42F5DCF57E2D2AAF11BBAA8
BC48A61A72B770719857F077CFAE696E271B0DD5AE028F42EABAB947258EFC63
303F109DAF675A051DCDC152AD0D333890794E27941B8257A80FB7A555FC498A
94AD443364B861BB548174CCD22EE06C85CAC7CEBB26EC9D270EEBA0378894A5
53C0539B0E92E6B431B68C63CBDA2B5F9FA1716E87C37CBADA81D11490F41F5F
5C1DB41A9253756CAB58C0F74F28E2994509A1FE2277B310038C42CEFCAC241F
58436495B5E3F674C5988C4D3A774FF89D81ED345ABC42814F731DD3040443BF
05EE12356DA3DF1CD0E75A46D60A92DA517DC19EA931E5090B0942CB660847DA
E139AB3D19A57B80C82C26D4AE9654616B5082195F67D915B4C857030B5846A7
203594E12877DBA92610E85A7562FC278F0B0993875FBBE840A70980868191E8
41C9FBDE6C3C266A32B05187D64801DECCDBC08F32FA649806F569BA11A03FDF
2AB7C2DC7140692C5E3BC5C3F0D4D85E831C08902A4B9D3D392E7D1CD00A4A7F
9CE773C288EF2C31A4D1BD6AC281B52E9725FFF79D1D28EDD0AF5C97AEDDA101
64B1A0BD76052BE8B434B95FA3D9770CF45C6C3A726A5C309B6671CE3C6099AE
7695C1F2DCCAD5442AFF4D4466E39611DDB3930BAA24679E1181EC27C726F63F
DFDDB26F7B98B86316793A7BEF56E13B901E74C2D8E9AB1F1BCF79EB29F3D38B
DF5E25D95177013865835182AB063790C3B8CEC6C38FA3F741F10145BEF48B33
C672B08084B2FB8DABBC711F69EFD315C078C51371DF8E0995FA1AE6422919B0
8FA6E3D3B05307ACAB338AD518BE19103EF4442019A5BB507F682165964F57B2
9A37E7ED9E7431ADAB6FFF010D872F27E7B06DB2F9ADC93999CD5B1751E64D3D
91CB67C6FDAD573E5F5F9DBD3D992FE15CCB60438B534227F9DB8DF990578936
DE09B98DD4596AD27EB23A24A4CFCD69F10FA6BF2A4E8F5D453EF07C67F6A99F
90895DF16CB12395C9797B8E18C1DD348F446E7D9250DD601D039ED81FD835AC
96E74351DD0D171078D347543E9DA843BB581C856D8F1BE7E6B6220BCF437237
61408894BDBC1712D38E8F1863FEE3DE2CCD358BFE30AF330B7732CE2C333A27
87458623DB53103DA9E52796E51E954023FD59D96BCB596254107F614D1AD1EB
8A0AE79EC44FBED0A0302683BEBB37DDC6EE53286921616D2FD271555DBCF8FA
A3FF31D323C47832B78E2EB8C50804F377B37F325F529AE8220D5C7FAF433B45
BE6BA354B9F2EB05695D7529EEA6E37A91D47367CA0FFA0661B2A31CFCE45CB1
4366C710C2848A9EBD97E0BB1680F7CFBFA641DA933A97BB7849C9D55BA848F7
30877635DD2481746AD331AD37F12850340136D6C27E3C0E700963408C2D5DE2
D94D843477D4788FE4DC2045BDA673D0B5273DDF1A2211B597A09BBB3214C1E1
2F9ABF2B3B9AA86F5B9D197BBF2BFD26CB8E8D604BA6E6B49878180233FF88F5
ED0B5DC7786B51A53BD8B25DDB3346D4602B4EF0530C1BF53B9CBAD2DC460B2B
4CB68D658076E7957127E9A590F8769F2803454C01DCC86EF1FECACCD5977275
583215D86426C6C61F5D26CFCB1E5DB58E8CE926B9B12202E61DB10DE639EF0B
76404AF5BC35D053E88A9114BB492B25AED5489770680D2B4EBB6CCA4817DF0B
9B4A59AA361885102BD4A861FCB6F785492896FA5BEB4C1A6C6AE9621FF10E87
D7211E021E111979E077516863C568603E4A3652729117D02ACA3CBA2B4CD7C4
FF582FAB4051ADDF13AF68F48162B9BDC27E4C527E523DF826FE76F8606E8CE0
2E6ADFFBD2C2871CC7B6943CD17BCE0DBB6D1374B69FCF42F231186160E69E6E
988755C0C78FB8AB7A5FAB8985852A414EEE3B90CF4B0FEE89A05E20B43BA522
13B7CB89BB448BD7E9A1FB574E5C3066A154BB8DF8EED92834F93CC327D288C6
CFE415ADC0E3BF6C40876138753F7E6933AFD7CF58951B4C3DDDAC50E32F5CD1
D4D405F63040330241517156B511CA08D0C2B4976BDA9BFA9B1663E808E244CC
5E1348BC3136FE130EA1F1E81A3F02FD516D8AF2AB1EFFBAFB777C700040E494
AD3619D7B36F8D6B027187475C2AE59A7B74704AC73A7D64FCC2C1DEF292074C
8577DB56F39F502BA3D7304C66392D1C406A4E324CEE11E0CA936688091A8103
16FFDF0187B27CA204C75A232F8D28036C244FB293D3FC856CEB9464177AD143
528403E5A3D51EA8AC77920053C6F130D7463BA7FCD1C2BCA6E9A33813757BB9
7EE272210827CE81A0E25CAF3281217119F615C9BA0504EFDE28B76A320086D8
6983827A7A2201F146FD889EDB0F489FF4D01DDBD14AC775F848C4CD0405A7BA
D72D865EE60BAFF5A511504186F922243851A2335FE4E24BC950DB6ECC818CF4
964EFC17E845B904EFAF71A836BB5843BBA2475BCB9935108B8E5FBAEDE0B233
E7E87BA63FDECD5960B84F613BA15BF95C9A007E6DFCA1755D78B60F285680FA
0C426EC87C4545D56127E825983DC93C68DA2FE5A1DC74D170178E81434B85C9
A8B5DCC63C7ECE69C3B36B1B4C35E10836B137E2B9C32D5D724119C070754AF2
5607C8D78C2982ACF77E8FDCCBACD3837FC8FF7923F73BDCD62209B7D0904504
9D3309BF3E052BA9D5F7355CA34CE50715CA3C78E52B8264E0FD97BC2D0B91D6
BC8875324A20BA4C0194CFDC5A79A30066B998252E23C24BC764032B3396241B
EC6A9A88CA84CF875502CC662089FBAD6FB8549CB18D31DF6ADE4AEF53B534DB
A8511E967B1B89B5BD89F83B3C8D39BE42E1C1AF6083E37D13E01C49E82D2D89
95FF3EABDC07DD1D08094C2B8CCB51B6815EEF33FF8BCF86DEF7CB94BAEA6E1B
2DC29E36447E972DAF6C57810C5824CB708D1217120CE4D9A3EE4E7DBC0950A4
A80E522E7054A0BAE7C66DFB5F6796DACC7EF2B7AC8F70198ECFEA12CE747482
8B88C199BD476BE8FD4C5A5165FE9F426D27B1B8C49F687D7760D56EC04DF3F4
A1619F051F977E751E78ECA48862C0ADABF238D825AF59EEC2EA92CC435CE3E2
D5AE9BA46AAF1B3420A1E50046EA8C5EA6376EECC29E668790B2472B94F856A3
7A993423E95FBC76B1A79D363D0914AF0B5ECCCC956AE0E00D38A7E5BC9D4230
55C4920CC2B7125AAC2A48B94ABF4B79A48F9EB6E88D037BB5E5BB832DCB8E8E
9357B9201F597885B379D433A9A0F650BC2DAAF9901101321CAF4432266F9E97
005CD6D9F47925D5522BD6BD0F1578AEB18F89B1291DF34B5B6C745B5CF9EB37
A6916434A225ABE69796348A7202D44F1B43169DE56F2517C5D4EB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 70 /F put
dup 76 /L put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA6209615BC08173FF
1805BDFCCA4B11F50D6BD483FD8639F9E8D0245B463D65A0F12C26C8A8EE2910
757696C3F13144D8EA5649816AAD61A949C3A723ABB585990593F20A35CD6B7E
0FA0AD8551CEE41F61924DC36A464A10A1B14C33FAFB04862E30C66C1BC55665
6D07D93B8C0D596E109EE2B1AAB479F7FAA35279ADB468A624BE26D527BFF5ED
E067598E1B8B781EB59569E3D0D54D8EFAE0F3EDE26279776ABA15341E42E636
6E02817082BE6FE0B04249A4840C11F95F8ADEFF72173E9A5F2AB2F62C427E5B
DC010E18641EAC906A5EF0F9BC2108062134A7F10956219C5847C0D82F0E8663
12D963E012DF0DD899911EC5D8096F80B49CA3444CF1294FBFAB57DFACC9D01C
46F3BA2F3D1C14EC30CBF83E5729F1C074D4F1665405C9AAFADB8BE41EEE43AA
16966E2C0CCC853C4C09F245ABFD4603C4AA55EADC0A59AA6E9F5895FAF3D3FA
83EDC6E2540417530AE7DDA8EF33DEB81444316FB3F93EF944D9FB06745BACE4
848398BEB747E58310BBA39C64E341185C82CB77E9D4439EC15BEFF1335F22F8
F036517C436225F4125ED67ACA7A84230D4E2B6CA713FD6B3CA54BEB540D4604
D58A8335BC20052440C4903786FE3E335E331CCE36A13F05F71126F680077AAD
ECAE10CB7C057C2D55F384723D58EF3AAE83E9E0B39D6A522667CC5B3257DAFA
AC1C3C981B9415967F7F4DECD492A52D35BDFF8A83E40438B3B35576A12BE3AD
BAB149D495329FFE2ED1F3587EB4BF6B7C1209F279EC564EB9E63BE5CD767D04
E2D4193954C813AC49CEB1E84CE72CCAEEC6FEE3C2E374A2F9BDAA5DB3CE37C1
09585F829065A21C7A4F56C391CC4105490C90F3EDF580FFF16F3C96BF68C5A9
4732BE0FCB9BFF90C4C783DD983579A30AADC3CDC1212D0C80BE2F454A7D8613
D0CF64AC5BCC782FEE059687FE5220B6547F10E5C09F9E499346B2E0D11F46C1
AAF015B999F7277DBF66689ECEF591E7A6B31D874916D955B0E270A54F0DE906
46E7AB730E5E08A67C8C903571EAAE5796EA64A2C171FD8DA5CC501EDDD3A795
05D942779ACE67F06E07EBDBC6F9BC74ACE0DC7F539FB7804826F52144B52FC9
B11E867050E514E8397B216E317D16BA3F66741F359B651D48580A044E853AC4
96C7E487A867ACD7B268C1448C4C2A1D7F67CCC7354FA4C6695592724B1420BB
B25F1EA20776E33F70E16FFAE04EE03C0E76B1BAD2CFDCA32BC100017D383161
3D9F45C61614934B23A5C5C87D078FD41E368934502D030A8BDD1D2244E6E4BE
5AB69267737E2C942032F194F409417E8D70E6B9048F39400D20A82C5A2D8DB7
DA2131E4FB833B825319542D43E5F3FD7E215E119544929202AA5CBAE5285A58
8084DFFCBAADFE1AF8356BCEEEBDF0605A719EDF2D5267D426490071462F24E9
823DD5AC2A249D44E6BCD04102E568DFC9326B499854BCB7C7CBCD9F9988D3CB
2424FC6896E2D42B010AC5B7741BC6314EEBE5EC41E156B02D809A3727F4B65D
8545035652127B62785E4CCB051A2F490078EC63A9033349CA1F49D700FCFBE9
73A94824147E06435BB2940232816B4E34DC85646396AA84DF28CF38994138E0
F4E0A568DC7B78D5B013F3A72BC5467167C5B3BA0079ED8A6405B13ED437364D
5679D2432045BCBDFE957A988A3E513A556233C17A515BC2E2EFED13269316AF
523634178134AB38B5B3BDC9B6196F8BA5E8E4DF667D5D41A39BD9D2A4E3C001
F185A8D842EEC0436D7F25D07BF67EECB56248D8920703F893D40E8F60D0E38A
AA2BC414501785B486C9B9EC37AADC2074E41B893DFB7B73D915AE83A2F7A191
4DF3E5080B685FA752853B4C39A71145FD55D9E8C928166EFD87D29697DB2BCC
F2D5A0F5E65FCDE9CB2F70DD323E0FA817DEBB548CDA24FBE84EAE8BE8CA891A
BBA9C5434E8A618D20E794FA0F471095A1592E0B70C573552A79CBC861DE0A1E
030B66FE7ADE572F0DFF12D06A704006898E9BF5823713F493AB3B816F9EC55E
5A3C3695C1908E7ACE4EACBD5C407B8F69F4B8D5F06FBD24D73E237762BAA575
908C99AF34E908CC1ECFE1C03CDE75BB67D4002D989C542DDE15EAC9FE30232A
A0A136FC532378CCC840DE37500637169594A71C1821A0F39027158F4CCED958
1435D24A21BF5E5BAD87EF16D8759F51AF57F0B98B090E1D3DD339DD5277A6BA
03904B57687455A5E0776A6223FA79111D77FE2B81FAE731012B0CE002B585E7
DA86D5F8AFA7BD0AB41AF594BD2CF62F64A4BF98B4BD1FB4D6EB90AC30BCE922
575F8ACB382DB733BECE467A8E0A4C1BE9452CD272527ABE68178E8C6B55BB86
0FDFAFCBD0C932144D53DC17BA36933273E0A10E64F2D03C6377EA1CF7E66539
CE0A092354AD00BA2C966D37092554229A681F80CDAF0933073A24C4996589C4
890A5FF721650DEE792CC53B757B468482CAF876E8F650724F7666A3D0172A87
95BFBB34E17503FC942C261D1C2A20328C80863CF7203FAD82EA4B54A32EF1AA
9D17B9E8125EDC68F405423431471FCD0DCAB6565FFB4A300010DB1493314DC9
6FC823C8BFD5732FC44F3171ADB03EED5E14DD100416304C1FC403AD81489742
DDCA05C0AB39D9815DD7216C509B80068F0C62A4319F06711E405F1FCF7E462E
98C3CDF50D3EF59715E8E4B80C2D1826D08B156DA2988648930B493239FC068F
8B206BD8D89C741C45BD9F3BDB5A66D26728C906F323D5D2CC4B9AA5C130CAD1
5069EAE63E820744A3690A9317E9A2F24A891C7A1775BE9CE872690C09D00AC5
62BFD823CE53AF45FF70354A7F275332D27162535A82233CE102E78C1EAA70D4
1C59E114143FAFEE88BC38152B418AC4F99593FB763D470993E1524996106312
3CED38B5809F628E749A061BF3C8C91ADF35E3ADD763B3CA01AF03FB44459AE0
8FC6BB778FAE0CF475F585C1B4A0A99E87A95935F1CE09D13C44DE48EDEB97EE
346C4E02E1B60810B27EF670297EDAC4E420B0B5E359FE06C11C220ADA0712F8
5D3FE380E4BB0943FD15B7676E8485C8EFA289FC3FE01404180930D4B9BC3E8F
819718C037263FEC32B16D4AD12804198CE2F970C42774CFB2C5A5BD281D5393
1DF818A6280A51CD542D7BD71F63879DFC25A4CACD41D52A7D85BA8306AF4F4F
F64F04A51BB9FDB3DC091D727BB8F4D2B7B26524DDFDFD17E1DCE02ADD6C8815
AA5610C84A480B761C2A05F11811D4E9663012FBD3015CE9F2A21759135B26D2
6D68400FF833293C113105F547B05F9BF09308FD52669C649988A6C330D51A63
427756ED1E5646D797CBFA5343E005124E073E62FFA9AB0ACC12D7A42B5F7602
C245B84E1EAB73262E3A931D8ECC75050D0FCCC4C2DC6AC51D8569206B65CD8D
373EA36F1D582D295935B9B3E1230DDF604B19FD46AD00EF3724DDDB9FBFD688
B88D7B1D45FE22271289C7B2D249AB7F801CBFB6CEAE5C49F246E17F3794EE4C
2389DE4353444C6AFE17D66ED7545F4FEDD42AEE20283D77817A97F42519ECDA
474F55D7ECBEF88834F18A9B99ED6D9293CA8FDFC01D057AE3B070FAD5546F51
9B2060C5B99694BAF7B000278956D1A809FBD25F85A5FD1B7E70D4295B86363E
719C145C41872E60230B946FDAF2DCF1E915B51879EB3271C5A17D5E5FFF7B8B
586A418C69418E7381190C13345C0A2F94FF6B0B3376A7FD05488ECC1C0C9228
092DEDA4C0E492A2562939F32339C470AAD6C066BA293B2C640ABD4E94B90A33
B826EDBCB9E0FB6424C8CF374C2AD6970A409FDA4D10A49C25F0DD1A0D4F2515
394B89C78675E7E790709D675C5F9543E2C78F17A6A2F4E838EC5E06374620F1
2A11A09EC54B60D2F9F50EE04D1CA3B793346B5F17DEE0E84D14C299C3D7017F
8848495F4E0F7E9732A6BA508F464803BB939ED9CF0BDF0BFEEBE92795431538
30C609A37C7DB36ADEAD362D76CFB2B41DAB30C28F7938EC3EFC4EFB385669D3
BC4241BD4034C686B958B6004980545C2B4CB72B9DDF1A898125562F62FD983E
D21915E9F37F2DBB0A7505DA13F0F20941F3E3FAE49A909EBECE32AE687AB671
9DC3302B32DDD0FAEB04195C4618EF66D1A5D8A3CC0C8F2F3166572CCE59563D
99FA2EF0B358DCEC49656A5AF2B0DC7E62FBC763DCF8B99E5EA3A390253CBA68
A5B2D0831FE362E02C2787F03BDCF53779550C90303614C3186CBAB7CD602968
D26FECD1493DEFCEEC59400E94C2FA527583373DDC55C65138C7FC0772602DAC
87382FBCAE9B25E23370DD3819C04F41164F1B2AD9064958C83CF2720D65B2C6
74707779A766C453A34FDC7449FE42E97EEF04A012092E6224ACBF001A0A1973
660A286628BC0CD335F9072E03ADD13DF33657C17D67A1BFECEAA6AFD73CFCFD
51F507D128B692B9502967A10BACD482C1C722E6A07EDD3806F7C21755C5DF6C
8B2FA774AAF7A94C4DB2DAA9A38D61A2312224FB0671CD96258F0F8B1BFF1AC7
EE37A4DC29E99DCB1983CF2408DED24D789DB5172C914491FC35F963C7C27172
2A80CE62775B8EB2BFAA9E42243FA381CBB6576ADCDA49F7E472C97DF2047C3F
22842C3E5B8742182B61C7650922F270AEE9E677DD9163EF89F83B51CD56C6A4
43A2D93BA37A0A06AFBF7314A8546101C8924530E0E0367C908D403D0C4E091A
67040AF8DE9FE9BE95E07A61C0BB44BE0BB67B8850D9789731E80D7504ABC5A9
4FD888E317CC0278999AFBE120E3F7E56B7366FA271F0E984EF6D2B968674420
491D0B985E008508C7E4E7725BA4C7A2635EA1D9E2A822D34AAF6A7D0A9CD13D
BB0E9881FE9DF084D194A8D301E7E8783C177231A5323F690ED8F307E2930C81
7614E566983614B7ABB7AFDE056E44C7B274BAE5D99B43D8B251E80B253095DD
77F1EB997DBEB34782D6B75B0907BD90A20626B51C6073E317CEF3806088EF7A
C7B40042D575DECCEC07FBF16D77C91B6C117F96303687AA0C3F8E188AEB107B
A1319D9C0E8339B9C7B12CE0FC1B00AC37CA9E761B393A124E50D715FFFAB2F2
EA6FD7328CAF2E7F828299AF16E4BABFC3CC1567FF70A834DFB67C0397EDA9E2
98231DC9D6832BE2DF2E8385C793FAEC9EC5C1CA7FE965229440A8E5EE4EF0E5
2BD99CDD521C586DDB5935535FB42B5A79060F15B68C280DD677E024C73844A2
CA72B3EE671077828AB2DDF41158865B782E4786C856B0C0083AE69085B92DC1
5A6F7D63C8A92194255A9806309CE8D780C93F44BF05ED92A031865EF75A7873
3FC2BCE07F68AE74C8F334E56136E55FE0EE7C24FB3E105E4530849855F75ED6
BB71D238E88BF3F88458CE27CAA2B037FA9FC141DB4178BFF6760D67DCF48096
A0B30D8B9F2DEBBD7D96F92F0D7A64A127815C58DF49664C86FD7E2CCEFCC1CE
23EE154EF0B26B1E79FC5758C233CB76645C8C4F06C01335631EF5AC9F5DC195
76856CCBAA170C39A4F993A711E1D44DF06949D856DC1D455E674DA0401EC879
92280400056208BF3016D2B8F8497453A6E5AC242EBBC045C3EF16AFB144334E
8F62F15607BB982C6A29BE8954B44021A1400204838FB6425D438E67E93EB136
C8769D10E628CD2FA709E10B0320E01C88475C8D5269FFE0DBFE5FBE24B969DA
DB891CE5C0F7BD104318402ECA9D84DB7FA8DE5B6B9587EDCCF4D1EA38379D7C
A27A580DA17FE85CF4C445BDD5AF694C976EF7BBF3E1135C05796693482D01C9
B31F2E8C74C4635CD57228776FB69690843CE6CB4C591CB8E2A5EB2AB45D04A0
B278EF216BCE648D3527E82E2BC030B1727D40032541291727BD66DAE77F2F32
CAFF043C4A32CD5C484C1FF9CE87A8D9412523CCE27A1651AA73B89F46CE9C60
326BC5931A50AB8EFB5EC808A4DAEE41A2D3CE29AE7DC4AB191507E654493D63
DD832C33BCA1CA9A739DDBD6F7AFF85C638B19E9E30C358C70EB561BF1A68447
DFF89892225E26A251B24F23876DCB37EC9E47FCA36DC7532B8B1ACD15DEE93D
1A0A41B9655C92850DA427DB917AE49E3E9F82BF2D04C9E793A4108A3730BD67
33EDEC7759E56B8E7E7FB465D6C1CE3F4AE4D9872B5FF08C4243DBA3BA6F7518
FA2FAC3BCBF7CC94F57393647878F2D924C8D2675CBAB3E4F2CA4E14C6986EAD
043550A2C81868CA615DC3E1D95BC4067C656A9AAD6EEB12F702D08D59955C59
BFF4E6D62DAB04F0E563A9D34125A141370CCADAA2561197A2EFDA0DE74BBEEA
F66D8A730E2891FF06AECB5AF1EA49E9FE0FC863EA0EEA94170653BB3ED1D916
38AD18091A2AD9D7BF16D93A18BFF7AFAD570A79877E7391B07A197A5814956A
AE8CF7655CBADC8E3775C0B17662185F5F3C475861ACC646C683EE8CDE6D2CFD
B8B5A526191DFD64CB95B6158E78887551FF591617443D2AB171B0E4C98BE443
383340A3F713ACC79DB77DAC0CD6FEB7F31CC82B6A293A24504F23911DC28A6D
B0061663487C9A8ADA35E82CD3CCA13EE7E8E2B92D1416DABCBFF01E61D8ADE8
7AAC8A3E60DFBD0BB08D067E0B1AC51A8ED734C906EC7DA154670A0B454F5AF5
B807EA825944135D00061C8B907E656FE92EDF2DD21BDD18EA16F0FDB0ED2E8D
499337E6A070D34E2D77A30F550EF4787120B9AA87534C8F5302CDEB9FD5FBB2
3117B55B797AB71B795A3A27324A233FD4ADBE4605F5D890B3D3A4180E627F49
CDFCD6F99D5B03B6F93BAEDCAB1CDFD1CD433B2E301D8869E8A1C1013AF6556E
6DE056CEFE519A875FE0FB25335EBE5A5169590C249A50C7A67CE6CA65E43363
638D8EF29C3E5EF9378971D7BCE665BC27575A8804DECED118A0CE305882FEC5
43552DA19EB91559EA0E980AE4AF87CB71584D3FFCA4EA625C42602AA3A9875E
3F983CD6ED19575833C7A0D7C3DF67B591DB598F96BBF34B21BFA139ECEAFCAA
12789990F98872B052A1B020FF0409A972E30CB0E1E2D2671CB25951F2BAC4DC
498B7ABD9FFB04A1F3655CB14EEA539ECCCE060A94FA84F414C8D7E0FB725974
6D9DE776EBD047A01F3B5AF96660B53F0DB8D13E8A91572B2E71DCA504DF0EBC
85718DAEA09C97A834105699FF91B2E6242917DFE483C4C8FF3413D5EB5EAE3A
1563DB1CEAC14B985928AD5EEA299BDDD5F4E30F3ABD5BCC7262F7096580A01C
A795FD22142C966BDBD5B9631406EA7D570DD75A4699F183DB88E5C68884E468
F7C25AB26C8300660C66FD8A53A6FD714473407E7611DD347BA2C14DF08A3870
0FCC868F86A3CB28CD45DCB8AB70453BD0E0609739A6B965955E67896E706DF2
89162CA409B202CE07B2772060DA84A942E6A90A49D38627F639E07FDCB53301
6832C7B46B63FAEFAAACCEEF2684A8BEFE8F2BDAE9726C771D7056EE809E9A6A
C86E38A53D98F4A0FD747104B9B465482BF38565557C6BF589FF4C809D57A5DD
86E6B1308E935D915DFE26957268216FB4319DC2F0AD50204B51B577E184CA35
888E3B49009C8BAD886097C12C546ED9120BC24747E40D8B510C89016B88B34A
4FD652E02EC6C2137F8CED124D3F7A1F0916243479C6B65D83C93D0EC3E2C223
0E7EDB692DB47C811F0FE9B5E09CF87625DA28DFAE297F856E92CDFF9FB57966
01053D43CA2E65C1C98A9540A20AF4DCDE3A90201AE8B8B3F70BB2B3CB4F6D75
6B8AEAC5EE3C3523DE01509B4064775538F1DCF8EA3D538A218C958DCFE74A25
10AD7CE0F529BBCBBB9825045B9A0337E5F6BE11A7F71C0405AE0284AA4F1361
45CCA1F43112410AED18EF068283B6E739F12485D8BDF8C28C20968CC216D388
576EC2F6E06A2EA91578EC92B61666E8E46BAF6BF944076601CD894B94AC2B2C
60F31843152845412A7FD136BC6F1F76637BDD8E90E24A3856FEF405C0BF6FC5
64A8FD7E650456D5D77A2401B81C116B02BC4158CC892E22962CF5173FB2044D
B191AA7C4990467F64A70907FF71356F08BC957C6AECD2B4B9932D13605A5FB3
F490E6F78D19E12644ACE1A8A5071E97DD4D2E78753EDBF5E3AC77945551135B
833C8D20EFB2AE1D79E8276BA038ABB562085DFDFCEE38A641D0BC92895BFCF1
EC9BDC80988BA2AD736087DBC077709A674A3E1DC3D3D6F8BC7FB5A93CE80A89
27DE68EBCE028C402E4ADBA812F19C1C08D167FFC6676A9DF917A43883C23618
428A711F74ABD11CE56CB77C0419A0B2A5A6D91FBACED1761F0E47138FCE9071
BDBAE7038503C5230F7052FA9560C25744DE6D12B2366F61B5C35E028282990A
56DDAF58BF7B30ED6767A49D88D2FB652F4879F712D79CAEDFEA1BF5EB918165
94A402742E8CCDFB148BDEAE549E5F120E5790DABF3223FB117E1333107AEC78
ABADF43392BB463D82971BEC1EF73F34031FD0EDB50827F9B57B6D4209B4CA0D
5FA31AA5D9CE243D28AB64C64EDBB5CBCF3F5D2F73B0D925082D0447224AA28C
278291CC39F19BBE06B908FE7D826EA0DB68AF69E7F16BA62B418A035891D16D
6849FF97FDE0DE925E96B1258866A2A450519E628E977D3EA67DCB518A1B8E2E
B15C3A7C8D1027F00884FF26E3B08D7831520A6D4496C30581D2A67185513DE4
4A11701286A29B0C83FF69E31F5B4B56C1F151166CD31485B99D508B12763C93
BAAC988A047185FEC38EAB68954FC045CA8514B54EDE1BE0AFAFF3A0E2CBA477
8DF9CFC6F990308C30FE32894FA050F32181B726E29DD9A54B21C9C7B71722B1
A8F492BBBF796A7D50317F1A9C48469ECBEA88BC981079CD807E7764E09C6DA1
961B12E0B586E135CD449126F16CB66ACFAE49AED95D0ED92D7AD77F162B0BE8
6E8C9EE40474CFCBFD9233F21027C07C62723A0C8A3EDF25C51649D24380AD21
7DF92496B563214FAC81F4011C6E649F7B7723E349868639A74A0A0D9356AEF5
745692C83298B3AFD428F9F142C535DEC4EEEF33F27AE681D4E209D473FB9448
9F7DFBF6D643E07F291E75918DFAA1A85DEE14160D280DAD471FE9325E787914
6D41AA076FA493FB9010F25D13A103C4F82C392D6D14D67AB06DE826B36FB4F6
49FCA8C795F62C5C29DF86AB1B29FEF2FC89C52CF4D7C63E786047768A329AF0
3BBD51C09E759AC9FBAD6A634A58B9F099D1B52CD330C673FAA22BF928C7B913
E100B4386DA42AB9173D0E830251D54A09E2C9C429C6348CC42802AF33218CFB
1D1031F0D8B3C311282786FCF508EF03985A3BB0D2E6F7240AADCC860DF5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI12
%!PS-AdobeFont-1.1: CMTI12 1.0
%%CreationDate: 1991 Aug 18 21:06:53
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 34 /quotedblright put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 78 /N put
dup 79 /O put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 89 /Y put
dup 92 /quotedblleft put
readonly def
/FontBBox{-36 -251 1103 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
525003F3DBE5BF07B2E83E66B7F97DDD7CE0EEB75A78BD9227BF359D002B6ADB
8AC57A33FED4EF021A7085B1E2B933DE602F0FF71467ECD501744AE338AF29A0
26F7D368AC6F25CCB882DB7B7343566192BD687E1349225982823027D3B66703
3B0DB7A7E680A682B98023D39C7FAE81A5D5B867A0A66C8AA0DBC83B1596A84F
0436AC6A7900B767BDCCE0060A4811003C79FDCC71D73F7F2D0A6675E93AD21A
56B4CD8EF75EED3DE8C0A18BEBF7B9D1BE72504872D56EDB272F1E97FC726CB6
68C85C713059DA19F6C2E0F3E12710A59B6FC4699AE883DE8C8615B7292AC25C
D5714B6CFB14EF0EF11EB13009BEBA4F345A5D3D6D9926ABC2BAD7DB1328651E
437BFB3C46DA7B62219660FC368CF3D3704DAD3AB461C28F711665BF484BF61C
052093D231CA65618EA463D63E406ECE858D180A6C0589B2FEDC321371C28E77
DE974D655DF5FF7D41ED01FE717D928A885F6FA6CFE4D2C0807F8E7F937916E0
96EDD1A3BA67802B1F4A49100E75613BA0356D9DCBBAD4DAB3C59E70A47058F5
2163D1730F0EE4D1F87C3A4AE723A23CFD7986FC4FBD399347E9F5946354E013
D860FC446AFF0B0744F5DA27CC777C96ADB388D1E835DDCBE123FB517679B9B7
EE5A3DDDCD392415AF58CE22EA55B7F47031138C6F27798B40F7E18FDD315912
BE99F33ADE0FDD538A8A3E5DE58AF68A54732AE69F188F3F7E0458D848205648
CBE820C287ADC2394520F03BBB97DB893F6A12154B1B7F8626D35CE6B70F8524
CB128DE87821A0E32F1E825F6C50AE8B4BE37FAA3183BA4D678E896CC7E61CC9
D0226FC38B9CAE0939D19149D987979B96A86EB69A105807AB426639292FF5FB
EFF0817FCFD5E5128ADB967EC19A7A17B2ABA6BCD208F68210590BFF6D317D83
F0D66197128E3D6154FD9CF24C16FE59E1056836749E8A403EE10E2C1AB63461
C5852A0B9737337BCAB7CCCC9980DF8B65E40246A9632AA5F55E1F1C933A89D7
A32E4A5D92706711AE783C758DAA71B2A466CE9D85D334231D00A20A2B518BD3
DFDE323F42B7363D7590DEB1C4526F7A7539D19579EBC42490AFB5ECA550DE61
2843CA05A4F2F80F1D056AF03B16953094F1763D1BDF39D6495DBFFDBEE8B7BA
572230AC70A4C1907F7146FA8D4595FD164837ADB25FAAEB89BCD16E8DC377C1
B7B106C38AAA9E44EB2E9559AAB76D756BDCE53278E8790475A6A116D3CEECA2
E172EEB0A3B3E6800B2EE00843999DFBCED12BD63A870D0CC0F694F42022C21D
13BF3AFC4CAD2A42C7C84CE92007EFFA852945BB5A06ACB8199CDEF395247FAD
9E275890496D100628AEF6F144C3FAB217AC97E3362701132F36980039CB7DC2
7F8EBE58F500CE2B5D58A4C91BFAFF472F6299262F0E91EF30B0581DD6982F19
B6C4C25DD74D647D51EB056B5D0A08BF0A390667210FDE72853E1CA2E435F693
921F43BECC696C9EA40C53A44C05D5507601A224EA31870097E9C5D1732D5A74
503F1A1416B831927B8E4AA15B52D018D1D6EB8B4A96F70AABCF926D991670D1
20B40EA98E171A2A4A70D64A9932E698F27E1B760F00411632A1C96971D44C2F
F3AAF0104A9F15318BF1EF7B26ED43539B0AD830689620DCC6610B339660B7AF
546252AE37D9CD3BAC6B3ABBE806B96E84915F3376B2E93EA41CBCE286F7B6D2
450DF69D7E4AB58AD45F70E7CA766FDCA4BFD46C3FF2672D4E0DC13C776D6A95
5825EAE6C441E11C29DCE56574BBE52E742AE72258B02E3470650924704D699C
C53A3021F15ABB98F3FDB959785F1993F2CA62B0693780C29037695294F60439
567F83F84ACDBBBEBDF9010235FA6777867B0CA3ED727673304FE51B70F807F9
DBE89C4820A9A46C7C97B8963515533A8BE1677DC1B4CF9EA66F02E7F46AD4E6
B8D173FDA570F2F086E4E3DEFBE690028B3F5DFFFBDAA86659BC366EE9C7BB1B
96947299296BCE3C9EE8D140C27E9A44804A18BEA6ED86259CFF78D58D58854C
279D2D8D1147C8A3FE83AEB097CB3A2607DC7CE0B5090AD6FC587E75FD3EF22D
3B06C478BC393E8F26518A022F9AD9285A90FB3318C30BE11EE913D17195CDF7
65EA53211E7F7FC6483FD9D5F74290E99342952F163F45CDB6DF490C35CF5D3D
B9B5FBE9FCAC8F9C51B6EFC872DD2307180B96C38E4DA187FA3746B847ED7ECC
DA9BA39AD5A9F9CAFA2FC286DBD2E787570494F8183C79B7CF98CFF744A72B50
0DDC856CA99A60677D92B4FE8B42DF74EDAD86833AAC0CFFBA7ED6C2E757C8EE
09CB393B3AE7DA1D1431664DAD98931950FB51AC311AA4DE86C26A39392BC0DD
FCDAF0EEF3952AFDB6217691FB45990C1BCC00644D90F69CDC22779A5929FA66
1B983CC10E5B098B507642A506E3A4DB52F52D53AD266DD31A6A39F0AC4B9521
0FF5C012F492E83045575701B29061573E602E31BBBBFABB5CB7360F035F66D7
963662C835D76CD2C84698BA1B1D0353D0E7038D8547AD1577BDE3C87399E56E
8D9BCA672A3DD9F913F55376751EA21BDF312CB97A13902C6E686B2E31AD57C7
42E67B835AB9396521DB70EC1424AC31A0756FE96D37F7B32586590BBB49E83F
BD365288C2B1FE9CA6E19B57B9FFEB75650D4AFB61AA2688A660106E4B023B02
24F6AE751524DDC5BB4539C30E306309E6DA9F4F883CA71AC6AD3F8F0F06EA94
D6EE7C2DF3AD768A85FB4035AE0FDCDAE2F8FE3BC3FF6310A53DA566BA752917
6B308979AD39489D23CE5B8D368E7324B6F858451A0613EDCC6D57736E8C450A
7CCCC40D792F42139FF2167FA30C659F06F878BADCED5CA23A80BC9B3757518E
8FE280CAAEE4AE6A688E4FB7389DAB1366ED7FB0020219ADF526ABEA60313C7A
B2C8C4AC2F282CB47BE57DA868C5C0D13B7D8184AE57CBE112AA73E9B09CE74D
F5CDFBC00D7FA656AD3E4CE1B67E1A5BB8728886673314EBE435B54855E4E5BA
CF3570B1B9E9601D32C25C02CB794FE127BA1E08DF0DE6A79DF20EE816C58EC0
960D14EB2788A63F8C7EBDAD0D8B1D8869EF812702D4EC2D9A193F08A4277B74
068A826C27FD814842B629FF643D4CC81076C7D299B283E1CB44E32A1FC0CCFA
F87A238458B80CBA487354D250D49CD0351ECE31DA80C91158BADCF5A3779457
D4493DF38C943EA3E47D0DF86E0D075817B14B6A39F0DFB7F984415BDDCD91F0
E30DA8C03EE12ED0C78AC227189F9EF7F7982036659B0F794746005BCD06315C
090C6C52E61839DFC3F3DE42CD3B5048D28A69B9938D28EDA5CABC7D61BBEBB4
A391154EDF80DFD6AC2891D45C9637CD2E4E50F15727C0CBC621E5FAD7DB5851
F866F638118369E10134B4D6CD22C95B058A4CFC7FEA962D40A14612DC4B8F0C
B151C9A7EC8B0709A76F436E6C53C5472D1DD92813C96A8F32CC443157553C0B
5A856F5F4A8C7F8942373F5C749E3F2B266D20E72CC609583FB401D39D9B30CF
2179C3787B21BDCDE579FD1EEA904F4428ED92C2E2DEEBF8BBA5B71845044E57
CB4D7A8BA000BB701407C21445DAA3829402B00FD527C5AE070701B6B70E0A45
5655C5F2FA3BEA96C9FD1E8F5B9D40782867299AB30371C2760642FF92D4CF04
55B0F8B0241057338A17470FF90F97EC3EBBEB2A2C4C197FC8296FFFE386EBAC
D1D0CEE340032AAFF1CCA51E1CD6C9C6900A316DA40005E8D1D24F7A8D791AE0
FEB8CBC345A97BA66203B0DDD27F235CFCC07C2281F4E4C7681BB3CB5E487AAA
3C6A6E684BEB17C5B969A1CCC06E7575D75AF7B2BB8366CA01BDC07890EC4D36
B42C030C4ACED85A170A3C7E6EB747ACCA447EE41E2EA2623521ACCF9AEE7373
4E4759412CB7A0240129542A0BE27DC3CF254B751C38192BA1E00F13B0E44993
755CFAA2177EEC1D049BAFF966D5346CDCF05AC6411A7CF5658F2C05DD1A3E5E
AC079D5A08DC4631B790E63AF83265ED26837B84F8E342D4F35DAB730E131E79
51C1AA9E104CE515991C6416892FD213D34525B1CCE9AC16D41993EFFCD2D36C
9D8B7574FDC3CE8EFFAAED8812E88CE4CBE8E30031A47AFF77E2F03EA44C5803
EE3134572BEF2911F73D9DFA554885DE5967D8563584A89FC8970F92772316E7
A88E63A5E213395054E5FDEF61A9D187D7003CA567586451F9B74AC2805174C9
FFA214F28ACDCF9A8B16FC19E4E646A349EE0829DCDBB2D1450BEEC6C061EAD3
C825E8AA6F1266E6E1EE930FBAC5D631595249BEF758877A91131667A66AA85B
B6F02C034E78D8D2447725336FFC122757903C507025BA16DD99139D457F69EE
6356A56517CE11012859300D9F80B13A44F483103BA157AF468C4A02E8BCC805
C77450957EF70015CBA9DBA2CAEC7057258CF33B10F9DF8EB4A2320BFDD73DC5
3DB01F439BE83045A73FF0673BF654111BE142907DFB5C264A6C6B6FBEC8AD2F
A1814CED848B397AE426D91E5E27F45B330761C92649298482B91D2A988B8717
81F465A7A93996AFE93DFE68B0FAA9E289A1BA411920BC8E249FF16255C1949F
3B65BAC9EC3E751A0F5153F7D83A37982AA865A94181FDAF5EF992626180730C
684489144290C02EA6478D1695EB798C9FA56B1E4DCE51D5CE28E536477ECA22
70238411446F8D9673841D69AD75ABF36CDBAA791540B89103C787EECF14B152
3FC8C4E37F7F99BD19E8A601FB17E70DB4AF10424E89CD120D43B3E6E6430834
1D819444CF968624BCB7F9D52FDF826DBC6907E09D42CF5189725F9688D49DD0
D19BE9BCD4BAD563A87127DE3B67A0A8878BAA77AD503388A4344C69F6D30CF5
6B31F9213C71D16DB60550E4F9C3798E26A36FD17D71BD95A9ECE26A0ABBFFDA
6CED30C6B18A131C759CE4B4B4544839460F1C63425F7EDBA4B6413A41A033CE
4DE8D697A0A85F532E07B09815BF104FD0689F74E3F8E273F8C5D9593081E39B
F38B870BF9AA27A4DD729D8F7C20438E99C9539A3F3770AC8BDB820B9DA6200E
91DB59DD4E55A6767CB5E1FF173BCF694D7A91BEBF840FD2519988C2BB39BBDF
41132FA5050072D082CDCD57600D86EEF3979AB084566D0B6DFA679EDBB241A4
37F0AE87FC0E178A35BD0B79E22D38E64DAAE4874959CBF728A75D96E69FAF28
E35C1E680030388FBDB92A33728E7BB06A7796F19FACF58C6A4979DACD1FFEA7
6D4B77A021B30D63E7490A3BD08B99CE9CA641DF0CE2730F44A005B6B5C5457A
335F2AA976F9183E674A387034BE134E0993B1FF175FC2B98E3D272097713902
C2E2582375C7A888DAD389CEA3E1ECFB54CA479C802F2BD55E9289126B9FFB31
26564DAF4028C7EE80883A384C2C3D94379471A98E77F2B82EEF84D3A49421E5
8771AE37ADADF9061872FE65E37D89EE2728E6EB84A6FBB983EF9202FE45A7E6
C96A9959C0D44130F45D3CE507E023C963B3142A3291D3B650ECB85A35B44B47
011FB8651C4DCAAE098FC3E2C56EA5ADD6AAF1FD4253FCC53E4B0F5BF8BC95BB
8FEA46117D9D844CD233F9461BE1577C77D6CD171D296F7EA34C9F4A9D4322A8
04F8DF963E98B247349706F9E0FCC90B6499F10C7DFEC3F942A6D2B0570C7601
053AB926D4DF1257ED19AE7675AF89661B2DD70AEC130215B374AC61865CB91A
F744EC5C86414C6668E6892DB96C7A661402C19410526434AE3E481C31999495
CF282B383224FDFFD8B64F434B30182ED03288BC809D0A35E2DB0B778D0AB342
05C0E21B84261E3D87EA77706A11602BE56DF6519463271A4B5D56DE3CF51ADC
51F0B7246D8E6E12771F545031993D904BA87038A488EF881AABEA50877B72AF
8EED6F26D048128F20D37429E6444F77D0629A574028806EE2139ED34DA2041A
D412739E7059F6204FF4B6D29E8C1F1E2DBDC3E0A738D5CE5B0FE09D35208756
0A763412C24059BEB30EB44E41A94A4DCADE658DC740DD6046509435A8A573F7
4810B0E58FD1596BEA7C8E85AE6C39AB9CEB4642BE710DCAF856FAABDCA437C8
9CBE2F08297B22AC049C08FEFE53BCF813BD38A8F9FF350E58EE8DDEA763FACB
9BE8EEC323E0D979F28A8AD19BF627C8FDC357F8AA62E342D6C6E8C08C55A87C
D8BFAFAA9AF5BD304FC23E61016155019B225E36E34642774A0E98CE3C822433
FBA3BB22F69BFDCE253A8356A11159E2A1A0E3D78A10E6FB8920242BAE38FE0E
549385BD95CB1D16CD6C0D2AA28887820CC4BBC8E463B2
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 44 /comma put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 66 /B put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E2A1040FAF2DE1FD6AFD5FD97EAAB614
956897A7BC784E9865B00EE8B49B918E886049F1F4939403EADAB83A4D8C332E
2221AF8F6F4A4954501CB6A6268AC96F7091245F034BD65542DF47BC7BBAD667
1EE6AF9187E298CB7AABA58E3FB5B4C7E86616C1A830A4A937C265CC28A83EED
8F3C971D6DF5A50A615B713F5332E0CF05C754FD76916FECE4DB2807334C34E1
E2418FFF1B4429A564AB857F1E23337C75E729645AEBE7F8967630A40E00F8C1
3054F2BE2768682E50D0B43E3CE3897D9EE7257E77F9894CD4395C21585D16F8
AEFE05217ED4F78C31FD635A00CE5D0DFC7B0A6BF9444B62C836087731D6D205
24A45B3C8D80983A67377EBBEE171DE0B4A21368F9B83AF7CB286D8389785E93
B11277C65D4D789AF99B1D7A3032947A51DFABA0DA3B94D8D4205BE243264127
474D97F3572385018D62ED4B1A399B8E4AED8D7C329F109DBE3015A727DD70ED
6DE4DB36BF48205C8CE0EC0A77491A26F93F7C0A036827625F115786A2ACF14D
47E189148216456EECF3BBAE34408904A558C8A43E369A01C4BB7D2BBBBFB271
A89201777264C399F3925DACEC43096BFC6EED7D5B536D9846B22B75BE321739
617F870A37FD85691FBE1D0A38FAEF19653C8D5D5C1CD4661459A4EB3A9DE450
E4153CAD5C139394EAAD21FECCB8AAD024696F68D8F2A82BD0548AE275EAE43B
E62A2C1A6A396BF4DB127663A36D09B0388C198F0CDFAB1BA53D79420A0C7529
B0BE757D554390F271204C18A4841F5D5EE228C9CC7640D43C3FDD796626C500
50A0BFEBE25DEA3E70DB25B9DFE02C1469769932A190423793E5B1D63949536D
C5C11694931A599B93D36A4A40D949C548F3DE4A72824259C3CB3165068E2E36
FA46AA5686C3A0859D63FFC3A1CCCF0BB666D867EEF0852A586C13A95E685852
FC46EDBE0DC8DB890D11D83B238DB7D34923A1FE282B926503868BD171D61955
7A85667E3D314616A176F92564B809A3F2D592816BED24969F5488188A441F40
9E0693D92AE6832C2761561CE7137D96A73AFDB7356D21257EE38E8953DE023F
179D5C81ECE07BD4FC0100FB0D88907E8889A0D76518025E01F2DC8E7376070B
77C6D79C45080E70F38ABD3948F568A0E62669597715EC3F05BFD4044C79F36A
51F177E80007E54C0E9B46867721B0CB9C05670233E1F61F9AC36F3EFE676523
ACEF43E6CBEA85B279568253E2710EBD66D6414C32C5B6795BB97870C1C9AC20
1907B73F6F2407D7F21C32B10733C04C6B18D80EA9328F7A1D789EB4E9AEACAB
5DECA2C237143FF92C2646B651671A317DD3AF2B062B083A022A0369C4B2FE1C
B47BC9BF5015DCE7FB1AB3863431FF9F94DF8D0DF33BB3D8D3959AF1F3B2DB5A
361C07E06C4962417854D71F38DF034CA272B30240E1D3D38DD2308BFD84D963
7AADD1BCF2BE11F46911B33038F5D3B4AD23DF0AE3285721C00DA4EBD252D6DF
336C3BC10D3A724080B76D7947EFF830400F32B5E41F9876D59F59196935824D
3A48B5444412B3EE0D54237FA1B2F215B84E03C2220BFA4980A762644FB23BCB
5730A389356DE71501E590A4B75F09C8F9537DB79FCC70B6FC0BDEBB9FC49EFC
B95DC9FDFE2D53C34DBE104CA4C33AC8AAF3CA88307A8315D3A2EFCE4F591B9D
0B9DFA7F616F731AF02B8DEE5983F9E414A2793EFB71159F600994FE29C41D86
6E2312C5450A090AF1AC52AB171FC2139A5CBAB0F83F2DA6057C8119F7B84213
15E40D693E029050C67CDE719C57A65DB63DD8B22EA036D8C2E14FA534B97C61
8D989FF20F06ED2E461D5BDF98EA5F2671F8555DEAD6E42050D5C258CB69880F
16ED98169ADA0BC3036E0424DE948A9078B38AF76EC3B32871883E909AAEF97E
390E2E6CC3F33E39D087B4E1A8878CFDC9D5375704DDD92C60B4240EEA42523E
29C18C4A348180759612EA155815E421F7B3F2F199734A4478C14788879DD2AC
4993D9C5E57BB7D9CA2126DA96C82F40466CD2E731ED66012567F2A655C503C7
BB549AC60D67C08508A7209731185E5B74AA892239E7946600133F0EB33D8F89
6EC2D1BFE4C3E95CD11C773B451698AA9397AAD686C39C3C0399B218D2556ABF
C7BDF9A86C9CFF0F32B3A81A335C7727176EEB6FF0D7E3C3F218FAB3BE349545
11AB2BF527001F1C1ECFE3412393185F1980A53FB2E35C94856FA8A3446AAD6F
F2B7E68E105EC4FC154497A385D0F79ABB13CC05CFA5CBEFA26B7DA60FD1A59A
033591CF0EAF01086F99C055772199A9C41FDB206E83A5583030A11628B7EC23
5DECA07E112767CF706D23296FCDB3FDB7C042E032482A3C3023EF1DE4BDCE89
556218A4C838B3156B74184FFB2123818991EE50A1724419B8C9ED7B877F4D5C
82859A2F597AD6876DE8251B8C285C803F913BFBD467C91537CA82594E96ECD9
D6F153F2FEF42D10569CEB0A372B8C1EEDC6E39B3B2D92A81593C12C3ABA0DC6
768B814E4C04613184E5FE082678AF86EC8429A6A43F26B622D0069E865C8B6D
0E2FB6A0CE2B3AC315E6202E19101F6F54B63FE5F298C29FD993948B0E2F6B91
9CE6FE08D8E05C938012C598394EC433695FF7A0C7C2AC55C5E8B162575E20BD
B368B9EEF2081AC83FAE07CD1C4CAD981FCA3B443295E6434CEA81578D5FD6CF
44AC71A5C24FED3C942DD058B005541E8BEAAF8E6BFEDB6B658EE0A9351C1717
B4E83AE0FAB705AF5B5D4A3D4E8AC488D68435A0CF7D9AC04B24B244C38F4D77
4ACC578775EFB5BF11884B7C624C4A18C556524496A38FC21BF1DE32B89CFAB2
B37497471B13A595535031FA033977F6DCD740B691FFEDF5E3D51A7A86EE9B1F
11A71AB49A71F94392BAA14A1F6DF4FB76E84480E21EAAE8678BA3C6F055251D
173C59A1477E014D0FD94F9D9043F5DB61EE7582DB216EE47A67866D2936937C
4D83D3784BA07D94DA83D362CE6BADC3FA123A838E77D501AB2B25A59916F41A
9B7E9E8A897CA337686820862EBBAAE80C1EB47947879B02E056D76F7B8EF51F
A8F029FEBF60D88AED364A49422D718C65E1BA154A849E5BF9D99531615ABA5E
5CD2B4977633D53F7B575FF895C37256A185C959EEFF6BC162EFDE5244A679E7
D51A27814E9BE4F1249C517746C7F26C4EF8860BBA2DC270EAFF8901663FCE38
3DB12353DEB505AF95F29A5EE796B588EF02ADAFE8D82137E9DE99ED95EA36FD
48C39B7AA8CDE33E1634FFADF15A7B3850F1D1CB50E631573CF97F2EE83B519C
D09AF6784D8737B1EDD2B94B7538D154F0D9B3C53E0AA695C12BEF201F06FA05
1E89640E0C0A83A90D69A6A6B094ED143A46C948AA7A3EF9517C81F27508943F
1FC88CD27053954FABA12E158C87CA373FE17B45153703993B92CDFAAAD038E9
3BC35FB80000203DEE8D72786B01770439036EDD9D321AD20BFB188AA928EFD8
7EBE2E18313B113DB277B7D534A0D460880BA57523AE6657B598BBEC0D621876
ED83E549133915063B522ADC89CF1A451673D294C8FA5B8F944F0D3740636A04
B4A4AD833D5169A7907057EA78454F129382161A4AAF6BAE83F0428ED60F125F
A6D6CB523FF2A881390A092DE356E4F7AF2FF13F7C579522E4E404291C4EEF7C
DCB536245E254761EF1C276EFF2EE1EE71EC0D53DEB11FA41B21BFBC6A696077
F20067CFE42BC2160998418326B9FFD3B93B11BB3067DADBFFA45E2B1D1ABA4F
D7E78930D34CF3CB8CCF2E8EAD0893E951FB0B20B12498DECF498B5031EEAAA3
BA6F680B3E453387A0549F021E24155D0BF9BB146B7BEABC16AD9391C90C1E47
04AF135F34696C28AE8789806D9E89D39E70613FA91457F8AD4DC77A0FB8DB53
06A3B518FDAFEF0F01DE9CAADE838200FE647F50C1F19CDEEF8B4ABB78C71308
70F0F5C6B07A013E0E807FAAE31308428C27815CE373D857D28F51B76DE7E2E9
376975B8863E2924855F4B2A0BA5EBB1544FB00747C218CEE402562A7E827FE1
E704372644B223B0BE7D0A2C861EF8952A34E94731A8D9AEBF1148180338D592
18B2F1FC7BAAB5A92254A7AE1FE4A443A6664E88C191620C5512F08DD68A9723
2AA1F9247379CFE38BD4CEBBCFA333B13C41BB1A9BE1EB7C668C84DC9FF3009C
3F0721BC08B9E57FDD2662DEDAA9DE86EC6416261D0388784AFB69108606A083
A43082E10061E84266AE0CD5165CC15C98C2F779CEF0D8FD5B237AF4686880F0
D0ACDEDFA73EDBB09191F058F905139E1B6AE95F35837AD09C9FCCF695D4C1C0
692F9E266E793BF375FEDE5F7ED681DBC26D5B585D1AA79595FEA30DEFB154A3
D7EE00BB5033CDABE85FDAE0D6269F9F35FB7D07313C9137877B2888CB59B819
954994941D301012AF54766508C2A9EC2F74F3A10EA67D1529F6953FD7BAE6C1
4EAD565EA41F502ABB3B55CE38E5366EC5E4D4AB32E9007EC80F999C401C1040
B507EC4A00EF5DD0A7D4CBCFDE5D70CD61C8A2B17555ABD27353127E82ECC0FB
106F740CF59D38ACFCE8AF2C68176CF0107FD523831CA394BCE474CB515B2FFF
70824541D082FC08856C11490B59B42C885DEA8CDB78BE5D55A9558802A1C18E
563837B4442BC7C5231BA4FA470D6EF856E3C006E31715F499AD5B5FF748C47E
6B36F706681477953ED4AB2D31DD1D7E4C4C8A289824FC2CAF30562E0AD99888
28E25A64EE0C1FF9C08F17DFA0E8B1D4135A2855A681C716F8B489294D0F7EB9
479D7B1EFAB5B7469E78F9B4BD1AC9C0786CA7ADA25CF01A9423B713F4D843AE
1437BA7DF370A204D6A93345BD55919CDC0A5DECDAAD23A289A88AC2B5754237
07235E7D327DF6C126CFD968DB9A146F5C1A4A8BD2CBBC5AD8C572FE3576AFCA
EF723D93B99CE6F7E661D0CE02E185E43E8D65FCF79A0E40B1DEEE6CF34B373C
F98EC34B3D170A183CEDFB788EE4D230A251C8FBCD6AA9B632488C1523B00CF2
C01277ED8EE79514E81C50019D3D4B46AED720F9E235DF43C1B1BE2BF2BC4768
98F50050ED4880E32559249D338BA23E9ABE87FD185A111781469EADD6561AB0
84B43AF3890EBF76900419A23538CEDF0373895DC0D34DEFDDC9C718A436BF74
80ED3F0B0578E6CB29EAB7192EA3BD85D43F73C968A4786AF8110360751C393C
31442E075E8AC645E2739DB4B3EA0878DB863D1EC7454F5861A55DAB9C251192
9DB291C8504456A9F52715E09461EC3E2044B4B19520CE936ECE82EE7FD3BF13
0FA94F5D92E18A474ABED4959E653943436116BB680B032B4DAE7A8F5C709092
4C02A6E630686DDDFCFF832572F66D3473943BF26E78C01B6708B6CFB6F5A602
ADCCB1BBA30B77FA27C3C32637886B9C206AC4DA6FCCDF6EADDC62535C2C9A31
6CE8DC974554B75C69D716F5E4C3A91F74F7FDBFA9BFFC726CDD3EF2C06420A1
5F5052F52F37D6FE3C02E643225A9441F105CE9AC566BFC8EC3FA57227AADA42
595AA77853B0399453BE333887FB09E198EE6EC97B0D396A606C6628F9D8CA73
B1624C8CBB340F2E9661D45CE3613C79367B1D98E078F09C3474E1306B0A1383
5CEFB05A539F66432B371AC094DF27AD78A9DFF3AB48F5DE429D6B7AEFD1492F
AE298369EAE16812BF350E38F267AD3204F71CDF4291D5661ED4F02479544BEC
C0708DBFF5C4C3034C3318CEBE1F3EC5F3A77A0305BB53F6B3F71318E509F031
66924E0DB82D2025B1098A39723B96BFF3095DC4AA0FAC5CE86254B68CC23F7C
2BE328873631C4A660442B33326630E4DF7111F447475E6AAF1848988EE53856
8D52B25530C82B6CB11172B541E76F29ED15130AE4A79B42BBF25B78B8E9CBBA
4079AF451B6C79633DA8A665C964622F9EBF575BC7F330087E64CC7CE9F7D4E8
94272FFFFBF206E986B065644A159B732B475C3519D46E348BF04B8B290FB857
A15A660C70F07E9B9BF203AE02EBAB4D6981805ED9ACB101D2B41F641107B4E8
93B61930E84914119093CB60FDB73AFA4C3C6EDD85C451A5AA3BAC689F4A2BF0
A737A9EC6BD520CDF02DC3EA5B6CE015C1719E155D319EBB428B0F3538436C9E
B0A47816F9D243CC469CA82580A5E11890FE3FA107964A223D30677E3D13885F
57D556BD13035D2FC5A7F0554044E474330C3CD853B5F84956F53C0F836C0381
782C13420C044A2EA2E48B3742E6F147AAA21E140A8C0CAD749E6699357B8EED
E625A2BCF02B9DFB2C7A0139028F443CF79EA8D16F7E61AFC4071245DD4D7162
4047B164C1F33DA207DB2E21FB22B286E0867F6542EB5DDBE38652DB43AD1C8D
761B1EA549A64FBA9C6618712869AF47CB662C9D7378A8DC2F8E18DAB842C939
67322E0C40D5C8361FD440D8B6B38970D0303B68F57F4C0D8F7240423E80D3A4
A52131BF92B8C8AF5B7833ECC4893386FF4ED57A83F53D9284487D1C20C6EB5C
CF6086911ACA3A0FFDB346563FAB2E6E4F38A97D0697B6C800F0838E31211591
6EC6A2E2E64F12C28F2CD7F8C99D4AB80C190024DCEE8A1B9D615F9C2EF26002
A8EB3B15AF20BEF4B9E478B3D27D2E4C667EC6DE26B6597FAF402C1430F65140
595189EAE3B8FA4F9A5AFB9F6D43D0D64C8FCD57C4A02DFB375E43C89CF00253
999C038B4A6DE325CDFAAFB20C12FAC15AF5862DF645657C7F86A22AB20B99F0
3EEE8E0D4F3A06CE92683CF73AB144371452AE07B1633824E85337CB42386382
BF2ED3B1FF048A102C34E3365F8FF095040B18EA81C1BD2736E5B486F5332B80
493FC3529B3530F2922147DEFBB990105C74662AFC12C5267AF8005BA91306C4
C8BDCEB5E4DDA42C0C4517AB0840EE464F901A8FC8E2E562B4ACDEA02B6EB6D4
1950594E8B3B4C163ADC0E3EBA03146463238464033801F1CD7091C7FA79C11B
6E283C22F56282FA4426DC4EFF4D4A5BDAEE04CDDAD28FE82BBDD96F605DC53C
477EDEFF00A1ED4CA6BB507E3A5B6997BBF34681C67C4E85FE765FBEB00CF2A0
C04F7719D9CB9ED2C49A6D0257E0BCB759CED45D189A1FB8FD23563E7D94610D
80771784E40483DA8FF8926842E3DFA8290A4530D93DD864E8A9EE2AC4C44995
561F6AB8A6B8A1E60F9BE2EE99F6DD9ACC50B30D4343557B5D3C5B353E3CDF12
505A898931AEC77302D39408C88BAE5FF426F1FDF5919A28995175F5295C9894
02DC89844B70BA87B742E101A0894F11E98B2A9D8AAAF32F83FEF2556EAC1650
AAEB32F39DBA7394B793109C315377E20410B8633C40897DF15C9711C212E9BA
1926A3A625A3E6076C2E329DF3164AE9A432A97642076971262DFCCF8374FC3F
3BF9AAB262256F8A3C7052F5595272CB43935F3F733711B9742A6A123F7FB085
0E5FC5B6E4C0792E6C52DFFD3C98347C36F172966CEEDBF70E1D84DB641505C3
720CF19EE5EDDBF2FCC6DE57AC0798B250AC7E52641A52DD50A305B277A0B186
5D3C553D2ED647B101E33B6DB2180B70F04335EBC463A306785CB1E9F84D4073
EF0A1D63F335A9BC4039732635DEEA87F4070EBAF986C863E741E4634CAD3374
D66321EAAA1ABC78218ED435AEBF276C7F68AE3D7FA74C95632DBCE6C7FDD5E0
E808B31292E7B3AA7A7C4E1D906D4FE55696E46D6B8B59ACDF4DF4C39CA1FC6D
EAA78A739A371C677CED8718BE2AFAD1354C32B30BDE9997D75585EA4DFBF009
700146B64CA0BCCC411985A70943B990DB5D2E14D8F5003F3705C91E69DC1AED
3E3FF93AC50698798C933C69FF1AFB3554AF5AEA85E5F2630079E33F5891EAE2
B419BB72BC608896592E7AC28CE9281CFA7E26B18DF9BF8F9E5525DE50BD2A19
5B12CF836F55B0C60B0B395D91E6F51F9543A05C8F86910CD92DE30AEBDDA90C
5619422E2F36FF48696CF6BA930E09DE648B9C42BCC6CB92807585D3F643F82F
0F485794FD374800831AF56CD65EA1749F1426FD39ACF557A20096F84F836D73
42180B01DDC98E8F12969BC8D018BCB1E1315CE89B19044D1F289C28DC45ED64
0995A6B7BCE868A48E3ECD35D7755025743CB3397D8151A4B1FA40EB961A7C9B
52164F5DCE793064E5C59392302C455D9F5B357A44BA4A5E4267D07E4D8964BF
95C249B71003B7E2E78608D57E202439219B126F2EA43947D398458F1EAD2652
A4C37D8DAD4EFE16E304BA9D9CAF7AC5BDC132D3BC4FF3F1741669D6A8B2A0B7
C113C54C1CA299B5401D28CCDA33DF50A7FCD0B22015723F45AA5A96118FE109
C2CBAE5EC93D0A28CB95CB7CFD276EAB76288481739BE39CB288B0818C8561E5
A55DA746261003FED1C054680F295336F3A6F73E8AACC07305CC02B78965A166
F01A3F09CC72D8F57B6AD896C88524A4E67058B984AEAA0E7B4F0790AE5E4586
9E8486EA7E5F974BCE81252C21AD32429B930DE631E93D61957270B5A1251330
397C147B3B4A5B78A62ABA478F5EF8FCDA18812FAC8F424294F84128BC6AFC45
67BC397A8F8E642F44FB90FF6B05F8DA44E2AC70951FDE6464B30A9184B29F30
836562D08474B7A2C8085EA1CCA11E18DD92810F919675083D54278A8C63DE3E
64D0333480B9599642A76AEF37757EFF28DD312F9B77432185707A0B33FF9BEE
EF04E5CF20115A628A7345E5E8C1712627BE8F33DB4BC26A067321B2F39E6465
E1C5A9BCE249A20BD38A522354A48EFB96104A5891D50CB308EF7BA6FD646E29
40A3FBE2609D35A67A29BD125E02A004817A99FF3299CDA47155B07D0B70879C
3BCF8D12D763098BA55BCEDECAF7701107D9D801EB81424CF2D90F09BDA45C99
D94B487816B6329C6B9D42947A861839094EBB06C4701DFDECB5929E67D47696
6A11B2C8E89C3ADC910EAB456FE428DE60AAB6811BABF4061AE9AE2C88DB02BB
CA40C117C00AFE8646CCC020155AE62D34263E0124B737179F513DF2C996CB5B
A9243AA6EDBE1B777A3FE826764116C49AF83C724E6CE4D819D8D599121CC7F9
578DF2A8BCF4D571BA46DCBD0CA6163003E7A2B57A5DCC3480B71368FEDACCAF
3DAABBC9403BA5DB81C3D018688DA09679F53C335EDA67CF9140F75458E5D7EE
AE7B93E75BFD6A5F1AFADAD231AC0EA5144C54536F7843222B77701E52B1CC54
AE697983273ACAFC791171F51FF61F1496E10B6AA1B4B5DD4A9CEC4C834A2E4B
783FD1F1FEAA7C489DAB559ADCE01BC3F8EF177CB09DC1F55E0E4D165EA9F99C
6926A1C3CE383530EDC421A1BD9441E5FAA6AB89FB9878571424DD81D80910F2
AF843624FE2A390C3B3A16DCDA190435D69C1EA393FC6173B3DAAB1D12F8D3C6
73D8FD331800BBCC2942533DDE40E389486E565EFEE0CE577BAB6BF7A4E9185E
58623720B05B0CA3C581E31334D2DB1B886A9ACF5F9954AC4EA872C768EDD9CA
B873D7F9731C96D67CDD6843D2F7BF94387FA3C889573BF9D709B477C572D767
0859C4AC66ED7ADD95F16C239838916A04642AC9F84DEC4F00A8810D4DC6AC57
88D74FABC88240A3A3B35A244DB95C77640E23ECADBAC559453AE21F4970745A
FAF1693EA2ACAE357AD7A784C563FA564B70AF155B7896D44B6608470A0CA5DE
7AED8C7B7FC57E0979B68B112A3EABB3E795038FC19F6D306518B5720B7FA1EA
FC4A87CBAC4B67E497CA8263E0EEA1F65D35F4453FF24E21563C69724E5BFF0F
595DC1759715D6D1D28FD5EF6CE9762DA95DEBE6EEC2FEB84EDE2D7E51D45DE5
1BC4E6C98FD2CA2C7774A00DE87D79D033776C24C4E734589189F14156C403F1
FC9CE9E364B0EF913981B3E24B59B12F8A6CF6A23BCAD99660A82CF585FDA34A
1D18E69498C5FCF9371D882D1BB1CDF79586431E8D12F7A2FC4FC013B385394C
4690AC06A6CD2973D253350DFE5AB120AB8958292AF870FDAAA513060DB63DAF
5BAF5991C00E24EAF1879DF07988064761CFB10590DDB8B0920A9198148DDA80
675AA8C7637D19337A865E548C2D7E47C738FFFEF92D0234A12E0084D5C4CB71
62079E71373964430AF49C6336C2894AF5A949D8FBB52330D3C34723331EA7AA
4B2ABED8A4DA275332EF2AB590928327C854179EA64F3D402984C85F346BC110
21BDD746E1779ED0304F026F936A4E7959BFB0D710A91E503210D28157EC58A1
C412A0807961094AD0DDE562EB5F3DCA37906C166BD6A79EBA99FDE0F3F8B248
EE72AC167F09B5DD4FA51CF184AB69D39A15AEDA162DD69B5915A49AC4FA7C2E
1A9C952881AED3D6673E5EFEDAC3CF17634E103F3AE903B9B705F8AF5DABB13A
D911E12C2F5298E25C0F9A42366BCD9FEFB2668C226187FA09E6EE523A3C099D
864CF41C41EA71D363422C976CC1AD1FAFFAB070277EF81B1D681C3FFDB5D510
4DB8D6022C34968FD37589E460E401A1936B07EE8355693BA3B3C1E7AA6697D0
663B74FC7A5EF45BC4CE45FB18F39C4C04D8F598F49C286BB309DE9933C70BBD
3DD80423D70DC2C16A1E4EB61BCAB4AAD464945678A59463A128C7F897511227
F33769C266F6A681FC728468E1F3686BFBD606C74808A6DBE0BF54F6C75A93F9
F4A8799B8858F184DA62365E125C5C4780A772B8ACB24BFEEE88D921DAC23D50
DBDAFA8D2EC66489F1E405E6057BF04AC49C1FB50F6DF3E92F6891789CCC05D2
641362387439F17AF5DE27DCA4460ECF1B1ED05C311E70E80EA4B7BB22995FB4
557F4A7D18F7F5A51170B0334A919B6A27A8B48EA556D8B2ECBF4E807F594FC4
8D133D58F5FFCA2C5D95CF197B95F8C436C1C90E864FE2C15994B70F9A763597
130D36F64B7979215599FFC8A8D6BD667AFADAED45C4879C84C5519B3FE69812
B0DA5024270E79838C08E8F8FFC12C21575234906E70824ACC639996ED6E16D0
C6C3DD5315D00F752B1FB9F86BD9743B395BF53575D6A3CB14DD89E1E8B747FA
3BD61963A81F10B59F4FB9205DF46194D5E050BC1665EF4BE6E7CA7F0D0C5677
C166DF81B2894012F69FE2B288B6DFA0BAB25DBB914D5843765CBDCC07C8C01F
D3EBF6E6FB134DEFD00DB8FD55BCEFA9025CAB74174797F20964497027572CA4
21B932F7CBAEEC5C21B7028E02FDB6C1D0719E0547AD00848A2F90064ABA0B1D
764F00F2477FD97348D9EDB9E03D3FCFAFC1E0ED8BE3BF818667C4848DBC82D7
1100B076B4C2E325BBAFF561684EBE740381C0BEA52200875D21E82CAE04765F
FB1FD13345DD871FA8EEEF292DE958C4BD5021B69D0F878334564D49194F913B
88712BCCDDB8F6C16D23597D03FE4B87D2773A6FC336933C72632AA8F04E0EC3
0DB472F401B484C3EE6773CA6A39453C9EFDFC9D11FC012E13F1138C1AA811DB
448491EE29F965C178505903FFA211FCAC8C20D5CC77CAED1B419DAE61FB6455
EE3303D1C4CA2B5C777DD4E31AD1AE212F337AB3951FCBCC0EC29E1A0AEA901D
9DD91293CBE958295BEF76ECE8F68BEF9353A5B8C255CD1DF655CB9FC72087C9
F2C701C6B7D15A62C4BAAF1EEB9B323638AFEAA5E4680308074E13011CE31A47
F717DE1F1D0171A8C58AF9E8777C973D87CFA2F546C6988B39D2A7C9062BD5D5
0572BB3BB871D3E0392EDE291504C5552C0159144CDF498425E1720A3DAAD89C
561A934556371EE08EF82DAD746A816C69D8592FC163507B76FB7737D1FB6A97
6BE9E99F15103353D5B22E5F386C0EE3DF9D8607B449FD593BC13A3734EDDC50
2BEA24709C809ED192554F939F7B1D4028A4A513F70073488AE8E4ED92137F31
D2A8F7F908FCAF1A688BBA88E181A7F6EE85FC3EAAF4BFB9479E7D7BEB6C86DA
0AD6712E9E842F553974F17862C6AC47E30BD0852ED5CBD69D8176805D2E0FCB
4DAC130DF2F6440F09B5B2FE77AE3D2F3E3017A637285C2FEC60061059F426F9
D79171B3966E0DC8F75ACCDD26646F12FAFEB3F2F46BCA3C498CAC3DBCE7C871
6A94B2B551AF25AD1EA0F98E9BA7EA1AF087DBEB9401548FF5AF5DAB3B40A5C8
4D2487FD4653BFD154FE9E3214BD8124C7F8513FC47A893EF4F678643BE8C8E0
2AB15D63BD594D3C9ADDD1AEBAB711FEE8D86FABC0227D0942717F438418C141
C53F6A325D911E03E425AE84203473630B119184D2947627EF9358C1D54F393B
9D236311DDF87D5D1746D708A10834FA5C0566B9B4AF5D69F31F5A8FCF4EBB83
AA43CD2D281DF21AE772060402914895A2A4E7E6A32723BCF674777A61989E30
5AEF523540EF0AE42A7BEA237C5046597A487AFE99D4F1F0B590C2648ABCED2C
58666B84E82BE7973E9DE9F7F4F661D4CABEAE31125A20B4D7D14433545C77D2
111082A25623D48E399BABDDBC96819BDEF1AE39AF1E3CFEF719BACEEDB1434A
2B1AFE4DC20D877BAEEB33DCD014E6FFB0FB43D09A2D777B21D4933D7DA233C9
36EB0FD924A048652523A6B9A90775E7C2A9BA9872F27F82DA48909C82A7CDD6
32F74FDAB1AE6FD341F1FF7594EC707EB19FE496132A96DF6819974545B4B62B
7538E66BE04E2EEBE0A98CC48732AB8BDDB70406A57E0555ADF6316383424D8B
27E6F184C7BEE42EA44AA6DB4CD6A65D0CC1367A45373AF26338546FDA4C3A8B
8D4FE87C8015FD8A7902ECBF6562C911B02AC7D05FF084CE730BA8D3B04F90A0
5B94A31E904173F564EE76608DA8019C9337274C42D34DB4169D8057D7C85783
6D6589710C1AE7C70E35F936809F1AE94B80EB3FB62406EBCF2093EEF65D7B1C
2680EE842FE21025E927F913A0527DFBBCA05D95EC09FD6EED0079A9FA1CF475
5C949220072EFD655EEBA10A4F22AE5A7D2FD7F40DD3FAEE4608FBC3121BFBD6
F681FACCCB7E248DC7C90525C8DCD5118130A164F9A8D6D3137A2320BDE14116
A2F68E1FF6550560083D626844508C9D0B3A750492D26AB5039F9C5EB7790856
248CD8E5FCC0989CADBEFEAA4536ECA70E9B10DC5FB997E0C2B937B7DD017E8D
CAAA6BB05E89EB40C6D7F272F10C8C82C41C7CFF83BBF7910802F85279E47E6F
47BBDE97933484F7FF9E62F497E3633925DA624CA923B5638A1BF83F409D5744
730A83ACB4FD105209A30E9AD80CB514A2C2557D6A1AAA84639C5B6BBD82B31C
95F2ECE7ECF07A84697BE907B509361760FA8D73DC91E63CCF6B4B0D2FFBBB74
9834CD481DB4B1A9B70A2BAFEE8F40627E4C12F50E46C315C770406979161502
B3CDBAC80921BBC828D9F70B73A65975618D3B3B5568C2701B7C95C0A1B96AB8
D10E0BD839514BD52F5740E0BE9B72C3D7B519F03E0D5FA795B270F0E6B59C09
05B25DD8EA27EC5D7EF75142741E6CBF28FA4C3EAD520DBB8606643FED045967
7DF703AEAAE8E2A9849FC89F7742C7C43C02984D5E50FC7763C001209AE00F47
5C3022440E555191071FB0D6AA53D356B5FF2B269A9EF9F91890E46824BF4024
05048E5F51EBC3BCFC88DF146AC47DF158934CF646BBBD1FC2E01C78FC4923E4
1625BBCC04741C35DC7AAA8BF0989E38DB27C40C68ABA1D726D582AE70CBBCC9
0B32E3F5D99D5970E3128A1FFDA88FAB5B8DFC395652BBDABCCA5849F387A3D8
A919A77630D9B383B3624684B1A940DB1D5AA3E4DD1A1BD8019D4A67A0700015
B95224F4195D5AADC04B6DD2D1393BE96AA6B178EA4CE364CBEFDCE5171BC06C
F690847E5B27BD1A9706CBD6FE2BB4055729A66A592001D8239745BA2A46C489
A2199D43CE18B52556E2C88DCD6F5DB2E9636CDE642C6487E5B553A0BA2D2005
78A7723B9FAC43E9A4907C5A957F7A7F60E486D3C3A15413330B08EDE1C39DA6
A143F9FC89F036C930096897F464C5EF7D1A5BD67628777C1DE4D6C9E82F970F
CB863E36E7D46BEA4FFB43C56C1C6448008A50744B8F49858A5242525AB4C4EB
4697382D95378219DB6F60BBDE0331D5D260674B118F19981CF2084B31ABFB12
2DE8986350F94D5844616C4F350BF58BC48F35E1667DC320595651E1FF243037
F4442AAEAEA1F8AC78DBE20869B2C13DCF37887DA558C38B5323A1F02C1FCB9D
5945C26DF8E79EAD226349ACA0EA42D7EDE7C70291CE66CC182C340A23AE5065
46F2711F52CC964783A8DC234CF2AC9B2AAF601EB9A6BFA48224C3B50E0127D4
A87DD7FDF9D4E0C8557BCA9A030AB3A8A1BA77310AE0041FCF696DF5F40841B4
1506EEA2F19F807025BD045A8FA7C043038B99731C7EA0A84D8C3109BA697F98
0189F24A9CAA353D51C3BCC6AE06EB9B99FC8BDE18EB7655EB54DDAFBCC888CD
2201DE2C26639B2AB0277BC5A76B7F4693322C7547D0BD848BEE1ABDB085B0FE
89675F4DEFEB1C9CAB6BF309D0AC089F7AAE77B254A74B8417B9AE59E63069E0
E9C447F1609F0DF3C0E172A42DDF222AFB685050BB42056913540A9B937C04D5
47422EEE6789062DBB1C2F8ECF1C7A93ECFBEAF1CD7FC628420DEB2017F5DACF
AB3AB3A743D551668251756999761B438AE6D2A9F6210DF20C8AF526A371C85B
32451D4217131CEF190F1E870B2A4E1D314F6E8F0B77408BC2E5B259B3B9C3C6
FE212528709E9D4B59DF17AD09BAAD35A48E547A19BBD8D63162824C54B86A57
DDC7AF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.1: CMR17 1.0
%%CreationDate: 1991 Aug 20 16:38:24
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR17 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 89 /Y put
readonly def
/FontBBox{-33 -250 945 749}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F075EA0A10A15B0ED05D5039DA41B32B16E95
A3CE9725A429B35BAD796912FC328E3A28F96FCADA20A598E247755E7E7FF801
BDB00E9B9B086BDBE6EDCF841A3EAFC6F5284FED3C634085BA4EE0FC6A026E96
96D55575481B007BF93CA452EE3F71D83FAAB3D9DEDD2A8F96C5840EAE5BE5DC
9322E81DFF5E250DEB386E12A49FC9FBF9B4C25C3283F3CEA74B8278A1B09DA7
E9AE4FBAAF23EDF5A3E07D39385D521547C3AAAB8EB70549756EBA8EF445AF4A
497CA924ACCC3DD5456F8E2C7E36946A5BF14E2E959895F7C94F49137256BE46
4A238684D52792234869EAE1A6D8ADF4E138B79472D2A90A6CA99E2394CC20CD
3841733046175B20CEBE372327BF13428EED6A3E2FDF84C2DBA4B0AD584EE9DF
B51828D3B8F385846158C29C9AC3496CB9692DD10219697B2ED4D425C3957FD8
C4600D76E045C561216EF05D38177243C314877A69A1C22E3BEC611A2EE5A216
9B7C264CF6D1839DBBD78A40610F2C0D7C2FE09FFA9822FF55035AD52546970F
83EED2D30EABB1F303091EBC11A5379B12BB3F405E371519A53EA9D66174ED25
A2E55463EC71A97BE4C04B39E68112956117C8252DB6FB14AB64534B4BCD568B
246DB833982B38CDE7268BBF74B6B0C18091E1B1F87D32D66F4DD023D1F10D2A
7736A960F72AC01F733A11023832CD68FB6288A5977743F6F3F23E0C1657CF5D
E8374835BDBD2DED3690C84A1EBB8E2383A5E49E610B6F5F0F5F5EC43CFD16FF
24FEEFB92425CCB577E17FDE4EA6C50E1448DC5726A21888E25B6D6B52DA3D3C
E4C4C6A73C176DFEB60B6B6191B336AC4F5BAA123E1B3B6FAE4B3FA9DC8F7E39
335277EF2294315BE95F64EBDB1F393B293FD0FDB9DEE6C89082232013130D28
9234FF12DF47D454558A1EE8603B2832772E5CA07D18B34A4763D5B890F7173F
B8FEE32DCEAB45229B75F1BBD914454591FECF74C600BAB0EBEE97ABE452544C
FEBF8CDA96744C1D275FEB6B5BCD79E057CE1E725093190C90F426D7AD0FC433
497F2AC9C864836AE994081D75C3EDAFCE1B23619088888ECC7BD4F93F7C149A
8B5D5B794E02C79D367ECD7AE3BF8084CE4268F40B9543F2655FC5CB25174B67
6BB2C1CE3403BF258BCA65D0ED6856C2CBA6E72B024C886F28DE131363B86B84
1FA37BA3381242CF13D6D2C1FAB06FFD736224283E12990BBA0627C26BCEA5C9
278E272071255848043A6D25E2142CA052D193588A774828C8EF9781AD7760EC
D584FD7CE820165745F1C1D6632396D1CAA910B32645819161F62FA175E69294
4E5A03D9F938C31D7F358B4449CE012E6610B7925D0467F1764D89A5382D60EE
A2ACB503215BC87ECB172C4111D35E01862CD7F8891B9A9006B855C4EDD4FD10
569BC25243E42C8FD78643094E07B284EB82854A692ED9D348C7FDC905012129
D6E6C7E66A183229F8C5742C84A699EA0D0975E30D54C31539BDA0EFDF7A72D0
DA9D024F2981AD1680E667565227FDE403B59F7848830AAD207C0F415CC25A14
0A90041124D680576A7FC78B5BD7090DE32630C073E87B9C1218A80B986F6450
FF9F3BCB333ED0F363032630B29F2A7CC245BF18F2DF6C8BC0D01A23B40164E3
E552B04BEDE2A383552E3B9486EA8BA809EDC7FED65286463D11D63F3368CD7D
D8A334E813E2F429A4DAA601F632496EE97FBE289EC808C19AA81A7D47E6C277
B7E30C2E47BB2B539355E1FC70B6F46FA4DF08C363D3E9A1BA0034319DB4594C
5AB313556A8512AC674D4D030765526D8D748AEFED87C47BA9F99D1545CDB3B1
6EC76F4EBF85E8F89BE7AF4395630547BDF53477813EF8A7745475168736DAC9
B032F2066F522D79072F471D44748A890F440738D16277616EB34BF09D6ECD50
1E3976B9E80BDFB4624B3241B0AECE10937B53D99F63600FDBA50D665671FBEF
2582902704D02BDC50AB2DBAA6C11BD34B6C86F223A07A22AE7559ABC07CC0CE
3687274F70F0FB1C01E0D63D9A0C514C2A30D8024C7D4D90D8A8BF9779BFAC5C
1D17AA069D6BB7C9ACDCE23AD5E75DF21808218C745ADBB8B9512118EBCC575F
DD35BBD181F631D1EC32C1EDFB916C73A7FC3F551CED7D0ECF445AA6C5F51E2E
FD265E0159F415CF87B7F9C1837FC4A8EC2D9C5BA67DE9764BA8DDA96AC8F1D9
3FD55CF90DCAAA08EE41733B1492FEF5C398826FA61C7E15836D54F8C90B7002
25F94DE79A76C9C90E8F7498EDBDE533BBC859806DA798CD86C70AF1155CFF21
FD93635D8226E1915978A72C4115B3373B75C9AB4C58D99684EBE16D7ECEB88A
284F25BF53E1655600909A1517E9CC72156A2BB9947C37C9BC26665DB1533F96
4A0D9174488E1F069CD5C9CC28E6681681BD05794D8E455BF19C3169F20F6B4C
5E00D06CA947D8D5643726703045FD94DCE5E136C981200DA45CB1E85D08CA9E
EA03C3D49CF644A2C618ED48E68E832DC4047D8C0B71D7C489513111040EE267
E388463E681D37C82A2FF5077A3F9316EE66285E1E67407B55A46ED4245D88EA
F47E6B71FB07A0A5ADF7EBDE79BC1D180FD7C057007A155F2710E027198A03E7
605E2A1B1FFC56C387D528F4913C3ED380590E8E4A5834FE93F93970B782649F
AE4F7A57CF13CA1754B8D128CF8537967EE7CC7047BF62ECD1F139CF46BBF8C3
91244AFBFF516E093D5917EF002DA2C50BD24FDC0B5536FBC852C86AF5370B0A
B972D9193C246A8902AC5D1E72D4C794D2335A9DAA53E46D0D65965AAAA281F7
5437BAEE163FA187088D99078ACB63BB665A3424CB34871234100FE4A277DA21
8549DC36EC0EEE51873307B4269D1F13F1492F76D5EABEDC517A3975C6C2DB9F
A2AE922947E742537CE870D39813F3B4B2DCA1566BE2D8E70D0B7E5FA63AD8D3
D1EF6C82D5AB21C2CBAFB300B825457EF65EB2D84C7F59F9FEE0AC1D0AD271FD
D46EF2B77822403F7409C78C0B44D771F3113719AFBBEF33C20BAACFED7E6C9B
BAAE86D983FA2C13E2B732A599EF624B6AE00D557AA30CCC6DD88C3EEC3A7420
71143550F93A5C615525975C61A0EE5F15E898F196960BB2F16C05ED68AFC4ED
29BB0B96CCEAFB24A271458917896E6C06E9A227803684FB9F0CF737A555A23C
692D1ED8C3918DB165F58B739584150D82EEC6684E69BE3629A169F0DFBAA30C
C48F0253FC95294394EE60BBBCA6C0975F5B70CE00D89F730D9F76915F0F77CF
8C92AF73E099CADB8B926AC0B195AC458C4355B9577915A8E93D2A09453D40D1
3E3956FFDDB92197E41F0B90031E8A3CB79F8EEB1378E564C0DD4581E1089E89
CF1FD53876953C6C2790DF33BE07BFCD5B250B42AE90859E525BC2BEF79387B9
8AD41543128E4D60B2136F2E814616B453C58F8299C37108B40665FF1F2E3453
67660951B7C0428A2275DB6273FD0EBA77BCD556707FEEECD82D74A46EA8D312
B9D0F362D2851263734FE7DB5D9CC21902B1459B0F94D2725D3989185AA5C2D4
EBAA87538F5F4ACF54847986B1B68AEED4F74AA58E3B41EC0F22C63DD9730B70
7EC985E5DFA1EDFBDFA9970318B830A62E24633E7DD206D4CDE18CC0D9833253
6A5B401C3AB9B4344E379ADD890B60851FE4B3316775CBA29557603BCA112143
D847D766062A1FDCDD13A51325A524A631C6A5FB030D6F12A131BB253B2A3FA6
AC681E706365F7A2CAD1D7978AEE599AAE9C143E10C064C8D4721B21422DEA2F
DF0360ED83634A80E0E65E1DCD24A61840148B1AC780269F87CC05829C7145CD
604BE38283C76206D2725337DD123D040E724D8215590896FE65EDABA8335515
74FE54DCF858356ED854D45CBC9B39AB62F8B98CB3A76D6CCBA2D13C2DFA2C23
C62EE5FD4460E47D4281AB86DDC8428AF0A8FE04E23AE55444D6C31CD4B335BB
020F3BBCB4087279BE247521D0B33DEF097CAC7EC9EA46F1AF70E321EB4CB380
0DE9667EA2EF36B053A6E3C7AF9702EA90A9B61D11651D355DD952BED2F6F52B
B07EDA2C9C078F8322B9DABEC51C5F8D9EB165FEBC7CA756304E6D219ADF77F1
34D11D493AB65F8B50A4EE69F094DAA5C5B587827ACE02807060E78D91F69818
4F6C185079BA4E5507E14EDD947A3B40EE75BB5957237DEF038C9F47CAE2B1C8
9317CDD726FC80D77648677287D18B046CE0FC6C32C2DA9559D692038B132A20
559A5FF05DEFF7246B2B8F8AF1D2122645B8B5C890938A43BBFF301BCEF7FF29
CD3398A612390CDE7B14EB7D442CF5FBDB50E3DCE9E8DE9F80F5FEA45AE561C0
5F55EEE69FBA9CF2B71A07715EA1AA5103337407FF9A782ECFEABEB3CB5E9222
D6467BBAAF480140254D0E08DBD64C47C0D636B435DEDEEE8E03E17B3D52E110
DA65F0EE7706FCDBF3E07D6DDB52128313F077B0F4C4EB6C2E05927D6780327B
09B8879E8CB1FEB8C394B92BE304F4F86A0E93A9938D1E7A74AF9226A9BDF882
94E181A90F335BD8AB42E7EB5633ECF70CD63074D512D04722BCB1845043A62D
1EF7484AF1F50C3069950B8D73B02F2D04B11B248181D10ACB89F0C899E8A1CD
A8682AF004E15EC154487C61DE838DF912F0541D69C6EA14F8974E32AD21AD4F
D126982F3FDE9E923C4AFCF6DD04E738212BA91C6E3878D0B49A080A891B111A
2123604EF36F20005C713EA8097026B42BB1AA18BEF605CAD75D7905C0494AFC
B00A6BCC02522313C8781CC404B9C492C15567C6AA687ACFCE467792842F53B1
D2A2BFE685332155B5F1806A1C35FCBDE0B2D8D3CDFBF1BAC0674C54C3ABF366
ED4CAC2CB3D1FBD86A72676372BF7AC99FA437742FA962722E11DDD18D2DCE4A
E68771FCA8B592DE855BD97616DD3F74202B73FDB1B8258329F84FBE0DF9FB06
541EB1BCD98065DD561EAD6D095493EB74C23705A5C666C9E2F744B4C7B0B4DF
350D01A4E6450E16ADB0FA46478FF72563DFE0B8518F0E4C007C439AF363328D
5326BDC2A262D4B58C9993940A33080CE88460D23F3B0C9CA7CB26E9A9D5CAC8
1BF8BC31A01E3D87DBA2E33486
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 38 /ampersand put
dup 44 /comma put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 58 /colon put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 88 /X put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-34 -251 988 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E03ED7D4F3EDBCA1926
2AF6A41F67AFCFBF3630C943FA111E4CCD988A7363F7C2B75EAF5830B049460E
0D2B337988F150B9182E989E7750C51BA83DF37685483F86D1F47478883F3F6A
4B7F768DA5AA89E8F163029ADD4A9209DE8A4F285766C06EA859639B92CCCDCA
F59B1C2BB8D588CA754D1257BFF76B53984DF4937093AAEF79009D32A29A4C16
FB610C7D6713482C48D7F9E8410C0F00AD6E67021056B6035534E79F05D14EF2
4E813344B92052E6E38491989F62E8E70B47BDC927F62379AB11A3F707B2D444
71390CE12CF4465A8DBCB7CA2E7DFCDAC140F85F22ADE8642AA8D0BAAF95088D
53A297FAC98E07338E39ED4F4A792ACEC23B30CE81662E77EFD00FF4E6284B78
F63AF495FBE24E2933A572C84DF23C18E260EB5F3CDA84605387A82DD37F5EC9
1FBE772D6E3C59CB472FE2D8CA65B000322A9E4A82E5D589EAD7401783E11A23
0FDBD26829DE81E431992978C0004C4F4AA4F3A1F12B30147F5B91394326F91D
E6434D528E425DFE2DB33FED8B2C49C512A64DC36F4821197F310F8EB8843D55
BEC7F4DDBD209B7D6C9603427F626F968055E873B94ED5781D8D84ACD434E242
3BFFEF7CD5A573C0AB70DEEA5538AD6009387FA45CB0818DD1399B790E6536D9
7BDE51CEDD9A97906EA01712B0BD52A48FA40B462EED0A449D4EE7CD72F84DC4
1FBFBA8A2103FB31C51CF512E79D79CAFA12B2ABF4B5BF59A46938B4A7B230C2
0222D89D5080522926F8C853674D924C050E49968B7BE771108EB5053ADEB367
2CA1433D98180118BC85450004CFEBBD51850C795D7710CA0E50D4F565B0BD7E
B09561AD21CF5F6B3AA36255354D4177F3479A73039089D6A99B0EB83E12CB9A
28B33B98D11F8937C66837D780A05A831D21092FCC33800600AFFEA00A65865E
9CB398BDB3EFB2150A126F200955BA40E095F486522AC57B51B37FF3C1A549A3
29F00FE6EBAC2379FD36E852696E2DC9F9E5DAA34E5D719C262AC028D190F14C
24F9B8785C7535D4E074DC4DD70BA6340C6DC2633234E54D6C2FC90DD8990717
52832038F0C579AC7A8D5EEFA1B1727B64DA451E88F525E602406F52F66FE269
7942C07D6AB6D4496EC28E29C508BA721F91260B1C69A8BD3944C7CABD5D6D2B
3132ED213AA35E69C892AA47273FFDC0A92D6096A3A79397D963336D098D0025
AB49A61DABFF37F90E7E10A7A56BC3FE320856F8E49097CC782CCF928B1E14FB
81219A6478886391A399970C0BA928C32B711534B25A0C1FBC36664531F1A206
488B62FDCEDE4D4140A94F848D995972E08470E50324A059A7EF0754F8154674
96EE7320A663A6D7394BACD29319F820F35986D88D04CFB547EBFC78554C330E
4597A39DC2C76C7ECB86C73DEBA7D485B5DC13886A92365924A8B0FBFDF38BEE
E32227C33CFEFDA7475E0C1200BC9443972430BA08258F5C8356EDE73C36EA31
66B251C4AE783AA13AD50DA771F3A73D306A5077942DEBB4E0FAF045F35098CB
3731F1FF9DC8F9DD7C6B44CE0EAB07BBFD4B64D85B0344978BC6B20826D2076C
DB79147729D6F7EC6A21C349E97CE2D7DACBECAFDC54014C72957DC9E44AF303
F58E5B825446CAC04BC45B8B9C7D948280FE148E40F83CB350E0C7746CF7CC62
7F08614A05489A6437AB6B70441BACA8C6EC2EFB8AF9589D42166D68D607918A
CAADDF439A25D0834C193A2A73CCD688F03E8A892B35840F0CBE5439A9A75840
2FB89C7D5A5CA74B7E50D7F8971D2853C1AA351E2DC9267BD5C788834AC16643
0F9B5E6C76A9E02A83294E49DB86C50808A325D3DFB46E20557005A053066779
F525B6DA2E8B68808B735A4439067D679D00261208B585405BD5D70B09CC0ADB
E82770DD6416F194A0B4467BD8A2836F012F76275B5A38BFB2D66FBA28BA5A4B
E61B219F6BC9C48770DA48CA011D56C3C76BD0FD461B6AAEA02BE2CDED6C50F1
E45A3EEB2CE0D61AA79D34169418CE84C3DE3A7F7D49AD7625A3930CF3B8D3FB
1D12B9B10517E8B471EEA6C8C9CA768F554BC9EDF06E026564F7123DC23822E8
10A5D26FACBF0B2A45859A62FCD1122EDEFABCDA4547D80B54D12B9899B70812
ADB1F9686DF7DBF05176AEBABA90C6242DC372BEBD745EE4864CE0FB33084AA9
9BBCD3E08A0CE07756683F74311D67DEEAE06F825391EE4D0200924B06D6B26B
DB380FD934C4B5BFFA475E8BB3B0324418DC394308DD06BC0ACBF95971F3543C
E4328321D93807444F3A158C100979AC164DE4AFEA2A2063F106AB0B89F8C886
BDFF016AAB9A4BE415B71C9450DF2D946606A7AD72A30677FCBBCB842AD140DB
BC483398F66770A847CD4B52027E60D2226EA9B79A9EFD51193F07714988B2F4
FCB89540A9BA7FA32DAEB90A11270FE1102098AB331B5B83858D9334391A7CFA
4C04F43C848B3179EFF1C24D44FE0BD0A51935C0544E1B62F22AA985E2E71E06
9BBF77EB2E17F46CE800C358B4F4FD86795A5B0BB4835F2B0DAAA915D4181EEA
812F8E27D1B24DC28495A9EE11F62C0FF64247A6D07E3DABCFE2A058313584A2
391022EF9D222BF4DE76C0548B360868D1247FE98B2C77C8F4E91759ADECB8A5
B0D840BB904858C4A0DCF453AE38D0C0C60A9DD7A787AC37C0E0D40E5D16F31A
31039CAF806FFF239A6E0251F4E814BA053D33FD9433BA5F3932943529A11535
465DC6B662B0EC764ECB847720240E1CFF144EBC66127E8568D061E9C28AEC96
98E173BE371CB41A5CF980E27EF2FE5CC8893B7E77441243F68CC69B3EB79602
AD2E41893902691CF7D21719DEF36362E9C8966CC565A2AA2B5B5F7C30E33EB8
210FC81F282BBD038DEF04D2C9B8BCE17777B7AA9C442182A9DE9FACBD8134DB
F178B45D3E156A52B05C90C304E61FC84B5E1CEDA5E8B20BEF04A56E04DA1D17
53EB1898CF52C3D7986B315F427B6F75969FFDDA07614928CBC3ACD8AA29612F
BB9BBD7F940E5EBDF1A2353D758BA59C135943B8A4A67750FE8DBBDFEF81BF16
9BF0009F54431B9B6F726EE84B8DE99CACE93059D9E4B2E132EEB1C85BAE12A1
73D0AA7A0315127CD81A6B16B7AB3DA57C8208A24C9C8E2DF5FC58013A13A32A
98A32C46D3096734ACB216A88598BFF90233478CC3217803E35F303FB246B1BA
6D7B607A53FA05515A40678CEF4E82502D473111853C89BF9E09E2073A734C61
4728B0083702AB9777AB2EAE6CBDDBF7E87766D0AA5BBB77EC34D6A549E88EFA
5C7E2695CD9D052A01925A4102F75425545B3CAA7DF676988636DE82877CB409
D10BF6EDCD895E610D745B5A4E87A327E6FEB08A1F2741AFB7867D45C9BD8105
597EC95587286C68E3F92F0F6A7C57266821FA357AFA7E5378654509D594DDED
732E9099F7470D37D60BC301F4843AD0D6A14B342985E77C16EC47C006D94301
557ABEBE5F3B3F23BB2627D1DD8C13A93FAE9AFE82DC13CC875C719DEDCD9F65
593DE4238E9ECE88B56FF9AFDDC8A211E3312337043BEAFB4181672E7B345B46
5891A82A233CA86163321AC4C3E7ED5849C623872BA62783E995675B9511BBB5
254F23A0F013B665E712DCAF900E961F5966314E0C80962C5A1D88DF2831F013
CB4342E5D6CD2A7D7F253FE24465DD63CBE05D93B10FB4900B73854E3DA315A8
2C06BAE7E1AAE75072B85A2115EC2E9B1FBFFCF1E41247747469F24BCBFEE3E1
D3523D5D60461AA1BD2A3BD9AA26E61FBD13958301CFE7F741E2E52A3CB994C2
88644B81DA4727C78A747507A5B2AC1ABDBCB410565225B1B861B544305D884B
6E2903130826C7AC3926EB36519690DCD1694A51D936FFDA236023634263B773
88C41F615148CE4A7638868851E73D281E107FEC6B2D19BC67C4B0CD96FFA5BA
72E61B685B56E1F948CC0A0EF085230D55BBC7D17E69A0D93B83CDF6B9272676
5E2417B2E470D0AE3F113C996608D4026459B551CCC4DC129CEB58E2A2D89213
956519DCC3233E90B38668FE7CB7DFEBE705D657F9B6A6DD6159EB0685725959
AB3ED1BA3003A873D54AA4DC3F74F01371251755B5EDA9C405CD1088AE5F347E
B9705D4318B3C8382B5846FB0C4CD2B634534606956872AE12E543DCC70D6120
2CA29F1FDCC106E9912461A2734D813ADAB6F25CB15BA6CC6FF12DF0EC8C6523
1C4EEE947FE0E50A8EB373D34EB74BC8FCDFB15B622B6BD1F4BF5F471C0026F5
F92DA0B1C3277F9E6D1F32D031344B4B5F6A773997ED3C91F23C2ACB2B814081
BEC2EF8FA8DE1E64252779022412767E6733ABF0755D8566FD6B433451B27F69
1753A4C695EA3CB66A345023908B80D5A0074F2D90EBA92362DFE6299B5B6C1C
7DEAEBD938AC7BDFFA41F98CFBFF70C4724CDF7289974AB19D4A583A98418424
2DA307CF1ABB5388A8B237708735D77049370036F0B055A7E62469A685DAB1D5
1CD80B96C505D1AE43646D643B5EB4125AEE06EA99FB9D16F3CC45A038CF18CA
F5D5C4542B249CB87D29882AC9BD749AC53637FD8C59F540173C8F090F80E15D
B5F51ADEE94BFE5D497ED09BE05ACC915FD5DE5A9EC0E096F28920A8AF190524
4F0BCD856D64A3F580B1A1D110AC9F77B9816B1D1683447E8F960F582008D9F0
787F0BC65AA6959154332A4CCB1664C5A23292EA4506BBE9F849554DB0DE54ED
EC47A3A26DC0E4650261E13E08FD5F9C38E80246BAB8DEED91FF75374B193E56
89D6C54563804A6E60AF8E1388C46029434CA0A8C9A64D2DDCF71E693E207034
2D1EDB9293CEFEC0D308CDD5495D755C83AC08C5743D9A3894710D2CADAB5CD3
F5E14AD81A4F2F1582816E3BC8E2626269D7D3B889833F479A03484ED26DFF31
0A483E77A41718660C59F44897513204BE24A61D633ED70F9A57402E28593E5F
7A15AC20F5184CA02BB3A6A06B3C6B9F80EB134838E540D379B6B4CA556845CF
F091D5E72C0231565755628C32070BB5DFAD17ADE11FA3EA359968FC70F29E73
719C75E9076FDD87151B34D1622984E1397CEBC48E29BF6E27C3852E796260FF
08F909E1D9557E6E64FC2B53F0C02F290D9235131E4AE13DF3D252F0B7710933
225A5057D757BFA9CF1B485379F1F5EE924DE6BEA5F310D71A4233EC98C49855
773E2D558A99F0BD24A709030E07052F8838AFAC30EE7463E544396B8172DEE1
906746438FFDBAF71222F233DFC0874DBA30BE1A28FBBFD92D518FA6F9398943
6CF9D17AEF525CFCF0AB6E77C223054D3D7A3745DB7975F92079C8083309A14A
D9493EE6AC1A2FBC5B5FE671CD1DB201F80088D0DEC966598A4DE1306ACA74B7
4257D767816158B3BF76D33389C7151DC2B09EA1AA29C1EF9DAB409D801AE7C9
1FA0E92C2E299492CF16C17046FACA41185F69BFB1470B178A31B400858DF2DE
92A6A869190C07447649A3E0D44AF914472551027D282DBE99EE6D7EE3B54BF9
5B9FB646CDC50B3B4168CBF340C5834220E7CCB03BF7AD930925A4F562AC4A50
6913C445970CA1AE6B0A9C437B04D1C7E9C78EF27D68E4FFE382D2B752AC0A32
3593C55FC87E604A794DA79154F4AB7E88F460EEC8A0C0C2C7FCE58FF40049D8
89092E2B0CC969C5F35A58AA7E0F4187EEB3DE9ADF5DF8ED9F39B6B568969897
B19CF64CD374052E35C4D0C9095027711C5F82D28E8324621BCBFCFC66FCEAF4
4B9C66461E2D06E0873308EF00F28F56A1BC409B7D4DF084EA9B7DD5EFA4E671
34EAA33E12FF8FBEBDFD6961222F0AF82F3FBBE71D4AEBC6E9AF65040B0427C9
404E5D117AE8B21C0E23BC6E646B0A1A88E5BB39B6030B1F5DBF27CA47112245
FEDAA83EBA90CD25F8DD8A05115C7B4678B4F8D29B167C7BD62090F3B3AAD22E
17B83841A3F46F3E5C3DE25B72C8EB40877E678E8EED71A39B0D2AC21F678273
488E92AF0AD3B756C29D1FC28F9AAD92087B0426ABCFBE8ADE3623FAA36D2F27
52AA084EE718C30F9F280C336C529A53572AF9D00CDCB2E5AC8AD06006327C31
B27462FA4BAFB9534E3C9C838D0EE7C326A4042E6E003ACA506F44156A25211C
89F4E943284F67E0D8BC9F78B72620C0C5D359330AC6AA6DA33487C2CCC14050
B5662EE6FED339F288652879666A741501854792EDA9FB6DA54B144874981F57
6E53CBC3FBD08D5741BFEFF828EB14D50194D7885472E31F89FBCDF38E8E4636
EB7D5AA1DD3971DFDAD46D67E28C47E35FFED00374350D4E9B57EED9124AE570
8C6BC87A59D6C3A9146E1CFE66885D26BA2CB62BF4C1075DD6F76CAE11104833
74F218D05C78DFBEE28A75EDFE229F5EA60CAFB25BAC3269902EF408501B7589
8517B65F6694161CD1282552AA50C64FED48E380B37774B691C93D3F35661D57
ADDEC12B3709BB14A4A9BCB516CCF849D572DADEF679900FA2531074E51332B2
86769B28E85DEC7309E8FD1C935B37343166DB777A039B9F2A71DF74DA716691
351F59568A0D6865FB4A126CA19047FDF164E25D0A9B3590BDAA2BB6DF3612F8
6378D6E5CC544C32B93639066C394596EF25DA9162D2F7809B8CD3830218ED33
4219326D4CC27581189C0680093E061D978284E2BDF8E66789B12EFD4171AB7B
D17436D0CA7F54F9FF36AFBC9E452F630183F2CCBDCE96E0D0BB4FE507CCC63A
712E12579E6AFBB4BDF0603FE27F27F785DE66743AB2A2F9F86FB89EF8FB60EC
4E6575E14EBF5D5F18587C64DCFD11A380E6C24D1C454979C8C64EA220426113
877DA24447DE37026B2606C83128E6023259D754C837DEAA9D5763E3D535F64F
D5BABBBEC0AC4783F36B0027F27335C906DA51D5A833EBB389545086A4AE75BD
BEABC36127406898F18BE34826D663A074E3E2A682D96252FC3E820FDDAE34A5
E7B3082DD386692CA1C84E27AC1699DBDE1C6F9CF5EA61A982A5173D7F18FF21
7B62AC6C1B119647370448B019E67D3611F9EDE99F6FDFCA2A475DF2C718ED9D
90541F226E7B0E9740FBD80CA16109150DF8AF6501E80DC51221CDB7907E50A0
08EDFF0F59877D168840C3712F8341FC5A126087EC04815693A9C6E6FEEB3112
40A59AD186E1CC18ED2E9EBF2AE375A7C118475C1CE739011B851430CE18808E
B6835F9E9C836169DCA438157DF42D3071BCA03546C702DEA5041BA03CCF2567
975CD105A886A6123F43A4F080571F6E4775A031A3B72490DEE63132EE7AD45C
B39DA0C3025BDCA7F73A3FE962C266387A943B452CF68E6844DB05F3A5985433
CF6D5514366D057E0BE26199CF60E0789F8C902A191D44C40136462B5C245B62
49601D474AB53D40A0C0A2136740784C5DD87C84D2364F4C0AE0ECC0BCA6CBE1
5B89EB24A6B188FF55F7AB0C7D0F47593E229671CDA3A109FD7AAE0A4230B0D1
309829EAF019C0C8F73601C1FD57D1E9D4ED0A9142E6C7EC1FFC913E6808CB0A
FFD2DE4EF920CA0C45B548138486E9FA93157CA3F6C91A63083177BF47967EC0
8FA7B21C4522420B0527096FA6CFCDEB9988D378162013DE354DF00E1EAFB42E
E4A4284D408CAAAFF27B19112E5B0CB1333F1EAA04C107AD380EF47ACBC278A9
A81EB4B97092C7320C9DC48F2D1E06E3070D03B7AAC0E6BE38F0E277D34CDB2F
2F1C935F43460E21D54A97C468221F5FD4C68589BBD18818D3E67976F69886F5
D951E49A202FAC5DB6E67A8C9BBC765E28766746B34ABCE4E7CFA096C743580D
62B310A0856203CD1EFE203324ED2A9E455CD285CDB0BC085676EABD6E988430
23BE10555F20CA1A4D44ED2B32F755B588554D54E7830B3F3EEA7FCFDFAAA83C
0AD8D5EDE42726CC6EF679CA688B1117443C44E5347C25E1D0AAA9550BD07D75
19159B9A9A2D87EA625EDF5C4C3CD2D6CBB9078C4A4BB59A981C9EAEC629B732
EBF0B3BD73948C96535329E480D0A7741CD111C0036CF6732FDEB65F5C9D9149
7D3BCCCF5FD35FF0B84187AABB972C0EBEAAD7BB1B6E969A1F1397A9572D4852
CA3BB80009A5033049F608FE714CB1B9B92D1F6C74F801D9A7C01CF708AD6F3E
BA62892E951777B0FBAC703DC2A216119FCC8EEB4AC125B86E6B62AF4978A5D5
DE705B3A46EB2E8C67596D06A040784F5A0D0F6080F7D626997AF44EB5075234
BF23A161A7157D9FA6764EDB4669B356D320CF57FAACA30D11C910B9369C35DF
5E2D5355E1C64FB0ACF2CEFF810CDF3AE408B8FF82205F930A42DD87046489A3
7B1F21B3A088880D4D71073263DE04B1AEDC795D5F33929F98CA6918F52F8E88
8A6B048F1B79F49F12EB1FD1BF2B8E8C6145A4B62D9A13EBEA544FAFAEEC2189
C109D3C0A886E946768FFBEBCB883D24017E97BF842BBD8EC212208E0C8E4CD2
6872551A5391A54D441D5DE7F168705EE993FDCBC2D029C46F89AD7251196CE2
F16D0E7F920E3F5F0817636DE410478C2847281EB0CEA90DD8FB18860195234B
89541F7D07D77BA225B17674467856D111EB595E8C0B3A5AE99F8454A074BD3B
5BEBA1FC408EC64CD1C3D3CEED81DB08CA4E3ACF7DE8860F32329D5064C04BDC
0B4A7DFAA8017E1735819CE4260100331A4399CBD68852F50CCF9FC5A0DB5A75
6E63886F83682889A3FDB0AA81AF6E54755AFD39AA52607A30D39981D88994BE
4745C53F4AD6C4EECFAB5A2E701A18DD5E792540C71C4CD4B28CBBDF2ED64354
22BBED052A6D31B6A633C5918747E5CE02F759CB6FFA0F4B7199820B1BB5E297
41FA55EBA9625292440853EE7BA5E8EA1D480B83B2966AE0FF6928939C001893
E9D953A7181831A9B7339FC7985D47240FD8C144E3B5BE8699882E3AC72ECAE8
9340984B9268ECA3D3F3B4E7F18E885AC4A075223C99AEF34985B727B704176C
5F3C4010E1174B6FEB6DBF4873105D83BB19B8F564F585CD529349F1509A48BE
2B7A9E4F83A6F338AD9979E346EFB50FCF7583B171F738309F8A9CD0ED008CF8
BF8395F72AE7D5925111E399174CB0BDE4E33A011EC8DECDB4EA6AF7DA11D02C
5B2BF12C33A2ADC41894F2301719C0960568D72B85867C33F9DF2544763933AB
D925129E4A51557F99E2973BE0875543303D4F464B7DF0BE4C020BF9A9FE1DC6
574AA00EA60A3559BEE1FDE71D45CA33FA65C05044D4466BB1CA855892013007
63F37D6D6634ACE9133E10E06C330ED6B63D987CB584BC05E53ABBEB93DDC9E7
63E8E5C2F50B4CC7040BF4A2CA6A2A5CCE69B6A0E6A0C9162D975337912A1AD2
CC22528A88EE957D2D24F5A2FF52DBBB63A5F7FF647ACE657F796D4F06DA8820
2DE91C2F007CB7CAF34EDBB9CA849EAA305A79FA865A1F07DDC0298BB460747D
E874D70B9137DACF0FF765CBAF8F8509DEE3ECD5FA9C0AFA3AB90CA4D5E4A330
1399CC84B7E9EAEB705C0F0E9190534508664868EA459B42A8C0D10C4664BBA4
1B4782ABB455E4F52BA902BF87C4F85AC0F15637FB382B734F63E73DDFA06585
0D01434B15A3261145F2D90BE30DC91FADC6F8174287AFC99F90E310DAE5A009
80A6A910FC450A7899E0CD00DDA4CA7F7526414FBD8DEFD6C8E26518120DB98B
F6545DE4381222A7DB39B148A05582F1F464A77B7A0A808CCA37CB4BF88000E4
12E2B364FB349833DDC7727D976516807653D5AA54BBC96F85FB4ABB3474C3A0
55043A9EDFA406E35645E0070391FCC269B810D34413A922CD26465FBE939363
4619176E514851052E0F9818FF0127AFBEE0E40555903194429A7B602855A2CB
098ED6A9D1CFE32952A5D866046B2EC014F4CF4C369E76A5BE65889C7D130D3F
36B807A33D56DC08E215CB62C72AE6F0E611B73B3D809F7F91BD3A2A645BDE6B
EE46F916E783E13041D61B943E832AF061668FA44CF354B5B50F24223A4370A3
3BF1C0CB1D5D647CB0A2ED5685114B54FC49A086DE720D021933FD789A6D4930
41853F498576C839975ED1BF81DBE3717721322853F3FB185F4EDF505ED933F5
A0A6D32F8D421FC680AADEB3AA469A8FEE30DD0753BCD629CF0571E5148ADAE2
6488D0FA4287606402A1529E78384D31416D51DD504A34E170F68C85A5BD1481
A6A56A078D30545C951057A6551A7EB7E871995BAE28F5DA2216C2DBFF192D23
48762AB35EDECD00A0CD1B3AC47428936ECD60A5A782F0EE03C0CCF17DBD5C77
6A56EFE17A9EC3D161C1D26745862147BE9CB55D58BB74A396F40663EAF94643
0FFD94E19434BBBC625E65B6B54B6142AC6EEF08424C6F6DBB89CFABE012EF2B
CB7370CC74F145C5259D626F5EEC3EDB4C7BD2DB2B629247542923C957141DB6
FACDADA1979ABEF45BC9421519D06D720F543695C014094EDDC6C88825403302
1AF28A61F0E5B4296722DC2A385CBA17424007BB25BE76E47DFAE3F64DB93029
21EDA4F96495AAD49958BFB8F424C42A3B2003B1D00108B0E9BB557E27C82EB8
DE8C3118F26A15464E7DC2873DFEE4C01245B9144D23D6C801E0EFF4F64ACCF4
598E6ED83D3D68E1259131A81F71B2023FDBC3893C71834E6336A32297297B5A
D98E4A76421F2FB230C871B9C1D0B5768272550822BF4921207253E31B6FF313
513EDF3CECDC7123DBE4D0E3C07071F553EE8510C30DBD7C2CA165343E278DF5

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39139632 55387786 1000 600 600 (thesis.dvi)
@start /Fa 135[123 3[90 1[95 1[129 1[129 4[65 129 2[106
129 2[113 29[168 165 175 8[116 116 116 116 116 116 116
116 49[{}21 206.559 /CMBX12 rf /Fb 135[42 2[49 30 37
38 1[46 46 51 1[23 2[28 46 42 28 42 46 1[42 46 11[68
65 51 66 70 1[70 2[57 3[68 70 59 62 1[65 64 68 8[46 46
46 46 46 46 46 46 2[28 46[{}40 90.9091 /CMTI10 rf /Fc
134[55 55 2[58 41 41 43 1[58 52 58 1[29 2[29 58 52 32
48 58 1[58 51 12[73 7[63 5[66 2[76 74 79 7[52 52 52 52
52 52 52 52 52 49[{}33 90.9091 /CMBX10 rf /Fd 163[50
2[72 3[72 70 55 71 75 1[75 6[72 75 1[66 34[50 34[{}12
99.6264 /CMTI12 rf /Fe 134[102 102 140 1[108 75 76 79
1[108 97 108 161 54 102 1[54 108 97 59 88 108 86 108
94 12[135 7[116 5[122 2[140 138 146 8[97 97 97 97 97
97 97 97 49[{}36 172.188 /CMBX12 rf /Ff 134[48 1[66 48
51 35 36 36 1[51 45 51 76 25 48 1[25 51 45 28 40 51 40
51 45 7[68 1[93 1[68 66 51 67 71 62 71 68 83 57 2[33
68 71 59 62 2[64 68 7[45 45 45 45 45 45 45 45 45 45 1[25
1[25 31[51 12[{}54 90.9091 /CMR10 rf /Fg 171[84 4[90
87 4[45 3[79 88 84 1[87 65[{}8 119.552 /CMTI12 rf /Fh
166[99 3[99 2[98 2[103 99 122 7[90 3[99 65[{}8 143.462
/CMR17 rf /Fi 134[62 2[62 65 46 46 46 1[65 59 65 98 33
2[33 65 59 36 52 65 52 65 12[88 85 3[80 3[73 7[89 68[{}24
119.552 /CMR12 rf /Fj 171[138 106 6[119 2[68 143 2[130
69[{}6 206.559 /CMR17 rf /Fk 134[51 51 1[51 54 38 38
38 1[54 49 54 81 27 2[27 54 1[30 43 54 43 54 49 8[73
1[73 73 70 54 72 1[66 76 73 89 3[35 2[64 66 75 70 1[73
6[27 7[49 49 49 3[27 5[76 38[{}42 99.6264 /CMR12 rf /Fl
166[119 2[119 119 115 88 117 2[124 119 1[99 2[56 1[125
1[108 122 115 67[{}14 172.188 /CMR17 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
-603 666 a @beginspecial 0 @llx 0 @lly 596 @urx 171 @ury
5960 @rwi @setspecial
%%BeginDocument: ./front/ucllogo.eps
%!PS-Adobe-3.1 EPSF-3.0
%%Title: header-small use dome
%%Creator: Adobe Illustrator(R) 11
%%AI8_CreatorVersion: 11.0.0
%AI9_PrintingDataBegin
%%For: Artwork Team
%%CreationDate: 10/1/05
%%BoundingBox: 0 0 596 171
%%HiResBoundingBox: 0 0 595.1509 170.1373
%%CropBox: 0 0 595.1509 170.1373
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)
%%+ procset Adobe_CoolType_Utility_T42 (1.0 0)
%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.19 0)
%%+ procset Adobe_CoolType_Core (2.23 0)
%%+ procset Adobe_AGM_Core (2.0 0)
%%+ procset Adobe_AGM_Utils (1.0 0)
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%ADO_ContainsXMP: MainFirst
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 68 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf 
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{ 
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/bdict
{
	mark
}bdf
/edict
{
	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
}def
/ps_level
	/languagelevel where{
		pop systemdict /languagelevel get exec
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup () cvn eq{
						pop (Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/agm_sethalftone
{ 
	dup
	begin
		/_Data load
		/Thresholds xdf
	end
	level3 
	{ sethalftone }{
		dup /HalftoneType get 3 eq {
			sethalftone
		} {pop} ifelse
	}ifelse
} def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		exch () /SubFileDecode filter
	}
	{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
} bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx
			currentdict /srcStr get /readstring cvx /pop cvx
			/dup cvx /length cvx 0 /gt cvx [
				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx
				names_index Names length currentdict /srcStr get length 1 sub {
					1 /index cvx /exch cvx /get cvx
					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx
					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx
				} for
				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx
			] cvx /if cvx
			/end cvx
		] cvx
		bind
		/exec cvx
	] cvx
	end
} bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict /DataSource get def
	/origMultipleDataSources imageDict /MultipleDataSources get def
	/origDecode imageDict /Decode get def
	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def
	/srcDataStrs [ imageDict begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi string
		} repeat
		end ] def
	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse
	{
		/imbufCnt imageDict /DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub {
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put
		} for
		DeviceN_PS2 {
			imageDict begin
		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def
			/MultipleDataSources false def
			/Decode [0 1] def
			end
		} if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or {
			imageDict begin
		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def
			/Decode [0 1] def
			end
		}{
			imageDict /DataSource {AGMUTIL_imagefile imbuf readstring pop} put
		} ifelse
	} ifelse
	imageDict exch
	load exec
	imageDict /DataSource origDataSource put
	imageDict /MultipleDataSources origMultipleDataSources put
	imageDict /Decode origDecode put	
	end
} bdf
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {
			/imbuf imbufLen string def
		}if
		1 1 Height { 
			pop
			MultipleDataSources {
			 	0 1 DataSource length 1 sub {
					DataSource type dup
					/arraytype eq {
						pop DataSource exch get exec
					}{
						/filetype eq {
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						} ifelse
					} ifelse
					AGMUTIL_imagefile exch writestring
				} for
			}{
				DataSource type dup
				/arraytype eq {
					pop DataSource exec
				}{
					/filetype eq {
						DataSource imbuf readstring pop
					}{
						DataSource
					} ifelse
				} ifelse
				AGMUTIL_imagefile exch writestring
			} ifelse
		}for
		end
		true
	}ifelse
	end
} bdf
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
statusdict /product known userdict /AGMP_current_show known not and{
	/pstr statusdict /product get def
	pstr (HP LaserJet 2200) eq 	
	pstr (HP LaserJet 4000 Series) eq or
	pstr (HP LaserJet 4050 Series ) eq or
	pstr (HP LaserJet 8000 Series) eq or
	pstr (HP LaserJet 8100 Series) eq or
	pstr (HP LaserJet 8150 Series) eq or
	pstr (HP LaserJet 5000 Series) eq or
	pstr (HP LaserJet 5100 Series) eq or
	pstr (HP Color LaserJet 4500) eq or
	pstr (HP Color LaserJet 4600) eq or
	pstr (HP LaserJet 5Si) eq or
	pstr (HP LaserJet 1200 Series) eq or
	pstr (HP LaserJet 1300 Series) eq or
	pstr (HP LaserJet 4100 Series) eq or 
	{
 		userdict /AGMP_current_show /show load put
		userdict /show {
		  currentcolorspace 0 get
		  /Pattern eq
		  {false charpath f}
		  {AGMP_current_show} ifelse
		} put
	}if
	currentdict /pstr undef
} if
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		1 dict begin
		/flushbuffer Width cvi string def
		1 1 Height cvi
			{
			pop
			0 1 DataSource length 1 sub
				{
				DataSource exch get
				dup type dup 
				/filetype eq
					{
					exch flushbuffer readstring pop pop
					}if
				/arraytype eq
					{
					exec pop
					}if
				}for
			}for
		end
		}
		{
		/DataSource load type dup 
		/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 div mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		/arraytype eq
			{
			1 1 Height { pop DataSource pop } for
			}if
		}ifelse
	end
}bdf
/addprocs
{
	  2{/exec load}repeat
	  3 1 roll
	  [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs /TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp AGMCORE_tmp 1 add ddf 
	dup type /dicttype eq
		{
			AGMCORE_tmp
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	dup type /arraytype eq
		{
			AGMCORE_tmp exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	exch dup
	AGMCORE_tmp 4 -1 roll put
	}forall
	exch {cvx} if
}bdf
/clonedict
{
	dup length dict
	begin
		{
		dup type /dicttype eq
			{
				clonedict
			} if
		dup type /arraytype eq
			{
				clonearray
			} if
		def
		}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and
} bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne {
		/CSD known
	}{
		pop false
	} ifelse
} bdf
/DeviceN_NoneName
{	
	/Names where {
		pop
		false Names
		{
			(None) eq or
		} forall
	}{
		false
	}ifelse
} bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup /arraytype eq exch /packedarraytype eq or
		{
			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}
			{
				true
			}ifelse
		}
		{
			true
		} ifelse
	}
	{
		true
	} ifelse
} bdf
/base_colorspace_type
{
	dup type /arraytype eq {0 get} if
} bdf
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 216 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_gradientcache 32 dict def
/AGMCORE_in_pattern false def
/knockout_unitsq nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{ 
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/npth_clp
{
	newpath clip
} def
/add_grad
{
	AGMCORE_gradientcache 3 1 roll put
}bdf
/exec_grad
{
	AGMCORE_gradientcache exch get exec
}bdf
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/dictstackcount countdictstack def
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub {end}for
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				} if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 10 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr xpt
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr xpt
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&usrshfill /shfill load def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern /makepattern load def
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	<<
	/MaxPatternItem currentsystemparams /MaxPatternCache get
	>>
	setuserparams
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==
			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf
		} if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/LeaveColorUnchanged eq
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			dup map_alias {
				/Name get exch pop
			} if
			dup dup (None) eq exch (All) eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor
						currentgray 0 eq
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						Adobe_AGM_Core/AGMCORE_name xddf
						false
						Adobe_AGM_Core/AGMCORE_in_pattern known {Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse
						not currentpagedevice/OverrideSeparations known and
							{
							currentpagedevice/OverrideSeparations get
								{
								/HqnSpots /ProcSet resourcestatus
									{
									pop pop pop true
									}if
								}if
							}if					
							{
							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
							}{
							gsave
							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace
							false
							currentpagedevice/SeparationColorNames 2 copy known
							{
								get
								{ AGMCORE_name eq or}forall
							not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
				dup true exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup (Cyan) eq exch
						dup (Magenta) eq 3 -1 roll or exch
						dup (Yellow) eq 3 -1 roll or exch
						(Black) eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
					{pop}
					{convert_spot_to_process or}ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/setcolortransfer
		{ 
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			  	AGMCORE_magenta_plate{
			  		4 3 roll pop pop pop
			  	}{
			  		AGMCORE_yellow_plate{
			  			4 2 roll pop pop pop
			  		}{
			  			4 1 roll pop pop pop
			  		}ifelse
			  	}ifelse
			}ifelse
			settransfer  
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup /Cyan eq 1 index (Cyan) eq or
					{pop (_cyan_)}if
				dup /Magenta eq 1 index (Magenta) eq or
					{pop (_magenta_)}if
				dup /Yellow eq 1 index (Yellow) eq or
					{pop (_yellow_)}if
				dup /Black eq 1 index (Black) eq or
					{pop (_black_)}if
				}def
			dup type /arraytype eq
				{[exch {filtername}forall]}
				{filtername}ifelse
			end
			}def
		/AGMCORE_IsSeparationAProcessColor
			{
			dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or
			}def
		level3 {
			/AGMCORE_IsCurrentColor
				{
				gsave
				false setoverprint
				1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor
				currentgray 0 eq 
				grestore
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type /stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string /string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in /readstring cvx
						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx
						[/pop cvx ()]cvx /ifelse cvx
					]cvx /ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict /Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode [1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0 [C0 channel get 1 exch sub] def
							/C1 [C1 channel get 1 exch sub] def
							}{
							/C0 [1] def
							/C1 [1] def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def			
						}if
					currentdict /Range known
						{/Range [0 1] def}if
					currentdict
					end
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict /Function known
					{
					currentdict /Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf
					/ColorSpace [/DeviceGray] def
					}{
					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq
						{
						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get /Separation eq
						{
							{
								[1 /exch cvx /sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx
							}{
								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2 /DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup /ColorSpace get
				dup type /arraytype ne
					{[exch]}if
				dup 0 get /DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get /Separation eq
					{
					exch begin
					ColorSpace 1 get dup /None ne exch /All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get /exec cvx
										4 AGMCORE_plate_ndx sub -1 /roll cvx
										4 1 /roll cvx
										3 [/pop cvx]cvx /repeat cvx
										1 /exch cvx /sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get /DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get /exec cvx
									4 AGMCORE_plate_ndx sub -1 /roll cvx
									4 1 /roll cvx
									3 [/pop cvx]cvx /repeat cvx
									1 /exch cvx /sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace [/DeviceGray] def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type /arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get /CIEBasedA eq
								{
								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def
								}if
							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or
								{
								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def
								}if
							ColorSpace 0 get /CIEBasedDEFG eq
								{
								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}]
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup /AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace [/Separation (None) /DeviceGray {}] def
					currentdict end
					}if
				}def
			/shfill
				{
				clonedict
				AGMCORE_separateShadingDict 
				dup /AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup /PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					currentdict end
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	} bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	} bdf
	/n_color_components
	{
		base_colorspace_type
		dup /DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get dup /Separation eq
					{
						pop
						dup length array copy
						dup dup 1 get
						current_spot_alias
						{
							dup map_alias
							{
								begin
								/sep_colorspace_dict currentdict AGMCORE_gput
								pop pop	pop
								[ 
									/Separation Name 
									CSA map_csa
									dup /MappedCSA xdf 
									/sep_colorspace_proc load
								]
								dup Name
								end
							}if
						}if
						map_reserved_ink_name 1 xpt
					}{
						/DeviceN eq 
						{
							dup length array copy
							dup dup 1 get [ 
								exch {
									current_spot_alias{
										dup map_alias{
											/Name get exch pop
										}if
									}if
									map_reserved_ink_name
								} forall 
							] 1 xpt
						}if
					}ifelse
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/devn /setdevicencolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/devncs /setdevicencolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/@ /stroke ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
	/currentpagedevice currentpagedevice def
/getrampcolor {
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
ColorSpaceFamily /Separation eq
	{
	sep
	}
	{
	ColorSpaceFamily /DeviceN eq
		{
		devn
		}
		{
		setcolor
		}ifelse
	}ifelse
} bind def
/sssetbackground { aload pop setcolor } bind def
/RadialShade {
40 dict begin
/ColorSpaceFamily exch def
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
/setinkoverprint where {pop /setinkoverprint{pop}def}if
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bind def
/GenStrips {
40 dict begin
/ColorSpaceFamily exch def
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
/setinkoverprint where {pop /setinkoverprint{pop}def}if
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bind def
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/setdevicencolor
{ 
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		} for
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load /exec cvx
								/not cvx /and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							] cvx /if cvx
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/additive_blend
{
  	3 dict begin
  	/numarrays xdf
  	/numcolors xdf
  	0 1 numcolors 1 sub
  		{
  		/c1 xdf
  		1
  		0 1 numarrays 1 sub
  			{
			1 exch add /index cvx
  			c1 /get cvx /mul cvx
  			}for
 		numarrays 1 add 1 /roll cvx 
  		}for
 	numarrays [/pop cvx] cvx /repeat cvx
  	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add /index cvx  
			c1 /get cvx /sub cvx /mul cvx
			}for
		/sub cvx
		numarrays 1 add 1 /roll cvx
		}for
	numarrays [/pop cvx] cvx /repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc [
		/TintTransform cvx /setcolor cvx
	] cvx bdf
	MappedCSA setcolorspace_opt
} bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length {pop} repeat
	end
} bdf
/setdevicencolorspace
{ 
	dup /AliasedColorants known {false}{true}ifelse 
	current_spot_alias and {
		6 dict begin
		/names_index 0 def
		dup /names_len exch /Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup /Names get
		{
			dup map_alias {
				exch pop
				dup /ColorLookup known {
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup /Components known {
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index [null null null null] put
						end
					} ifelse
				} ifelse
				new_names names_index 3 -1 roll /Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup /LookupTables known {
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index [null null null null] put
					end
				} ifelse
			} ifelse
			/names_index names_index 1 add def 
		} forall
		alias_cnt 0 gt {
			/AliasedColorants true def
			0 1 names_len 1 sub {
				/names_index xdf
				new_LookupTables names_index get 0 get null eq {
					dup /Names get names_index get /name xdf
					name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq
					or or or not {
						/AliasedColorants false def
						exit
					} if
				} if
			} for
			AliasedColorants {
				dup begin
				/Names new_names def
				/AliasedColorants true def
				/LookupTables new_LookupTables def
				currentdict /TTTablesIdx known not {
					/TTTablesIdx -1 def
				} if
				currentdict /NComponents known not {
					/NComponents TintMethod /Subtractive eq {4}{3}ifelse def
				} if
				end
			} if
		}if
		end
	} if
	dup /devicen_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	currentdict /AliasedColorants known {
		AliasedColorants
	}{
		false
	} ifelse
	/TintTransform load type /nulltype eq or {
		/TintTransform [
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup (Cyan) eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup (Magenta) eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0 /exch cvx 0 0
							}
							{
							(Yellow) eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1 /roll cvx 0
								}
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1 /roll cvx
								} ifelse
							} ifelse
						} ifelse
					5 -1 /roll cvx /astore cvx
					}
					{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx /mul cvx /round cvx /cvi cvx /get cvx
					} ifelse
					Names length TTTablesIdx add 1 add 1 /roll cvx
				} for
			Names length [/pop cvx] cvx /repeat cvx
			NComponents Names length
  			TintMethod /Subtractive eq
  				{
  				subtractive_blend
  				}
  				{
  				additive_blend
  				} ifelse
		] cvx bdf
	} if
	AGMCORE_host_sep {
		Names convert_to_process {
			exec_tint_transform
		}
		{	
			currentdict /AliasedColorants known {
				AliasedColorants not
			}{
				false
			} ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			Names {
				AvoidAliasedColorants {
					/currentspotalias current_spot_alias def
					false set_spot_alias
				} if
				AGMCORE_is_cmyk_sep {
					dup (Cyan) eq AGMCORE_cyan_plate and exch
					dup (Magenta) eq AGMCORE_magenta_plate and exch
					dup (Yellow) eq AGMCORE_yellow_plate and exch
					(Black) eq AGMCORE_black_plate and or or or {
						/devicen_colorspace_dict AGMCORE_gget /TintProc [
							Names names_index /devn_makecustomcolor cvx
						] cvx ddf
						/painted? true def
					} if
					painted? {exit} if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {
					/devicen_colorspace_dict AGMCORE_gget /TintProc [
						Names names_index /devn_makecustomcolor cvx
					] cvx ddf
					/painted? true def
					exit
					} if
				} ifelse
				AvoidAliasedColorants {
					currentspotalias set_spot_alias
				} if
				/names_index names_index 1 add def
			} forall
			painted? {
				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget /TintProc [
					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx
					0 0 0 0 () /findcmykcustomcolor cvx 0 /setcustomcolor cvx
				] cvx ddf
			} ifelse
			end
		} ifelse
	}
	{
		AGMCORE_in_rip_sep {
			Names convert_to_process not
		}{
			level3
		} ifelse
		{
			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and {
				[
					Names /length cvx [/pop cvx] cvx /repeat cvx
				] cvx bdf
			}{
				/setcolor ldf
			} ifelse
		}{
			exec_tint_transform
		} ifelse
	} ifelse
	set_crd
	/AliasedColorants false def
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict /CSD known {
			CSD get_csd /Names known {
				CSD get_csd begin
				currentdict devncs
				AGMCORE_host_sep{
					4 dict begin
					/devnCompCnt Names length def
					/NewLookup HiVal 1 add string def
					0 1 HiVal {
						/tableIndex xdf
						Lookup dup type /stringtype eq {
							devnCompCnt tableIndex map_index
						}{
							exec
						} ifelse
						setdevicencolor
						currentgray
						tableIndex exch
						HiVal mul cvi 
						NewLookup 3 1 roll put
					} for
					[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt
					end
				}{
					level3
					{
					[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt
					}{
					[/Indexed MappedCSA HiVal
						[
						Lookup dup type /stringtype eq
							{/exch cvx CSD get_csd /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}
							{/exec cvx}ifelse
							/TintTransform load /exec cvx
						]cvx
					]setcolorspace_opt
					}ifelse
				} ifelse
				end
			}{
			} ifelse
			set_crd
		}
		{
			/MappedCSA CSA map_csa def
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
						pop [/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{ 
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval {} forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						} bind
					}{
						Lookup
					}ifelse
				}ifelse
				] setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep {
		/indexed_colorspace_dict AGMCORE_gget dup /CSD known {
			begin
			CSD get_csd begin
			map_indexed_devn
			devn
			end
			end
		}{
			AGMCORE_gget/Lookup get 4 3 -1 roll map_index
			pop setcmykcolor
		} ifelse
	}{
		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSD known and {
			/indexed_colorspace_dict AGMCORE_gget /CSD get get_csd begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		} ifelse
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode [0 1] def
		/DataSource <FF> def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict /image get exec
		grestore
		}if
	consumeimagedata
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/get_csa_by_name
{
	dup type dup /nametype eq exch /stringtype eq or{
		Adobe_AGM_Core begin
		1 dict begin
		/name xdf
		AGMCORE_CSA_cache
		{
			0 get name eq {
				exit
			}{
				pop
			} ifelse
		}forall
		end
		end
	}{
		pop
	} ifelse
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/pattern_buf_init
{
	/count get 0 0 put
} def
/pattern_buf_next
{
	dup /count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
} def
/cachepattern_compress
{
	5 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq {
			pop
		}{
			patarray dup length 1 sub 3 -1 roll put
		} ifelse
		{string_size}{0}ifelse string
	} /LZWEncode filter def
	{ 		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not {exit} if
	} loop
	LZWFilter closefile
	patarray				
	end
}def
/cachepattern
{
	2 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		patarray dup length 1 sub 3 -1 roll put
		not {exit} if
	} loop
	patarray dup dup length 1 sub () put					
	end	
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
		dup wrap_paintproc
	}if
}def
/wrap_paintproc
{ 
  statusdict /currentfilenameextend known{
	  begin
		/OldPaintProc /PaintProc load def
		/PaintProc
		{
		  mark exch
		  dup /OldPaintProc get stopped
		  {closefile restore end} if
		  cleartomark
		}  def
	  end
  } {pop} ifelse
} def
/make_pattern
{
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			  1 index begin
		BBox 0 get XStep div cvi XStep mul /xshift exch neg def
		BBox 1 get YStep div cvi YStep mul /yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[ xshift yshift /translate load null /exec load ] dup
		3 /PaintProc load put cvx /PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type /arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
/set_spot_alias_ary
{
	/AGMCORE_SpotAliasAry where{
		pop pop
	}{
		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
		true set_spot_alias
	}ifelse
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry{
				dup/Name get AGMCORE_name eq{
					save exch
					/Adobe_AGM_Core currentdict def
					/CSD get get_csd
					exch restore
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	Adobe_AGM_Core begin
	/setcustomcolor
	{
		dup /customcolor_tint exch AGMCORE_gput
		current_spot_alias{
			1 index 4 get map_alias{
				mark 3 1 roll
				setsepcolorspace
				counttomark 0 ne{
					setsepcolor
				}if
				pop
				pop
			}{
				AGMCORE_&setcustomcolor
			}ifelse
		}{
			AGMCORE_&setcustomcolor
		}ifelse
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 
		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{} def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage /showpage load def}
		ifelse
		/showpage {orig_showpage gR} def
		end
	}if
}def
/pscript_showpage_override {
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage /restore load def
		/restore {exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	/mysetup where {
		/mysetup [1 0 0 1 0 0] put
	}if
	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
	/PrepsDict where
		{pop}
		{
		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq
			{
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.23 0
%%Copyright: Copyright 1997-2003 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 2.23 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }
if
userdict /Adobe_CoolType_Core 60 dict dup begin put
/Adobe_CoolType_Version 2.23 def
/Level2?
	systemdict /languagelevel known dup
		{ pop systemdict /languagelevel get 2 ge }
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal /pop load def
	/gcheck { pop false } bind def
	/currentpacking false def
	/setpacking /pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel
		2 copy known not
			{ 2 copy 3 dict dup /args 7 index 5 add array put put get }
			{
			get dup /args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch /args exch put
				}
				{ pop }
			ifelse
			}
		ifelse
			begin
			count 2 sub 1 index lt
				{ pop count 1 sub }
			if
			dup /argCount exch def
			dup 0 gt
				{
				exch 1 index 2 add 1 roll
				args exch 0 exch getinterval 
			astore pop
				}
				{ pop }
			ifelse
			count 1 sub /restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		end
	} bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{ { pop } repeat }
				{ pop }
			ifelse
			args 0 argCount getinterval {} forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{ { end } repeat }
		{ pop }
	ifelse
	} bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	} bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	} bind def
/@ReRaise
	{
	cvx $error /errorname get errordict exch get exec
	stop
	} bind def
/@Stopped
	{
	0 @#Stopped
	} bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{ @_RestoreStackLevels true }
		{ @_PopStackLevels false }
	ifelse
	} bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get /args get exch get
		end
	} bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup begin
		mark
			{
				(*) { pop stop } 128 string /Category
			resourceforall
			}
		stopped
		cleartomark
		currentdict eq dup
			{ end }
		if
		not
		}
		{ false }
	ifelse
	def
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{ /steveamerige /Category resourcestatus }
		stopped
			{ cleartomark true }
			{ cleartomark currentglobal not }
		ifelse
		}
		{ false }
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
				{ cleartomark false }
				{ { 3 2 roll pop true } { cleartomark false } ifelse }
			ifelse
			end
		} bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad /ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup /CMap CTHasResourceStatusBug
						{ CTResourceStatus }
						{ resourcestatus }
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup /CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{ exit }
								{ stop }
							ifelse
							}
						ifelse
						}
						{ pop }
					ifelse
					}
				128 string /CMap resourceforall
				}
			stopped
				{ cleartomark }
			stopped pop
			setglobal
			}
		if
		}
	if
	} bind def
/doc_setup
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mov /moveto load def
		/nfnt /newencodedfont load def
		/mfnt /makefont load def
		/sfnt /setfont load def
		/ufnt /undefinefont load def
		/chp /charpath load def
		/awsh /awidthshow load def
		/wsh /widthshow load def
		/ash /ashow load def
		/sh /show load def
		end
	userdict /Adobe_CoolType_Data 10 dict dup
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end put
	} bind def
/doc_trailer
	{
	currentdict Adobe_CoolType_Core eq
		{ end }
	if
	} bind def
/page_setup
	{
	Adobe_CoolType_Core begin
	} bind def
/page_trailer
	{
	end
	} bind def
/unload
	{
	systemdict /languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{ undef }
				{ pop pop }
			ifelse
			}
		if
		}
	if
	} bind def
/ndf
	{
	1 index where
		{ pop pop pop }
		{ dup xcheck { bind } if def }
	ifelse
	} def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where { /globaldict get begin } if
			dup where pop exch get
		/globaldict where { pop end } if
		end
	end
Adobe_CoolType_Core_Defined
	{ /systemfindfont exch def }
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{ pop } ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq { 0 } { dup length } ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index /FID eq
				{ pop pop }
				{ def }
			ifelse
			}
		forall
		dup null eq
			{ pop }
			{ { def } forall }
		ifelse
		currentdict
		end
	exch setglobal
	} bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	} bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index  known
			{ SharedFontDirectory 3 index get /FontReferenced known }
			{ false }
		ifelse
		}
		{
		FontDirectory 3 index known
			{ FontDirectory 3 index get /FontReferenced known }
			{
			SharedFontDirectory 3 index known
				{ SharedFontDirectory 3 index get /FontReferenced known }
				{ false }
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont /FontReferenced get
		2 index dup type /nametype eq
			{findfont}
		if ne
			{ pop false }
		if
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{ 2 copy get 3 index 3 1 roll put }
		for
		pop pop pop
		}
		{
		dup type /nametype eq
		  { findfont }
	  if
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index /FID ne
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type /stringtype eq { cvn } if def dup
			currentdict
			end
		definefont def
		}
	ifelse
	} bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type /dicttype ne
			{ 0 dict }
		if
		currentdict /$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{ def } forall
					{ def } forall
					currentdict
					dup /$Init known
						{ dup /$Init get exec }
					if
					end
				/$Strategy exch def
				}
				{ pop pop pop }
			ifelse
			}
			{ pop pop }
		ifelse
		end
	} bind def
/scff
	{
	$SubstituteFont
		begin
		dup type /stringtype eq
			{ dup length exch }
			{ null }
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{ $sname }
			ifelse def
		end
		{ findfont }
	@Stopped
		{
		dup length 8 add string exch
		1 index 0 (BadFont:) putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{ findfont }
		@Stopped
			{ pop /Courier findfont }
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	} bind def
/isWidthsOnlyFont
	{
	dup /WidthsOnly known
		{ pop pop true }
		{
		dup /FDepVector known
			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }
			{
			dup /FDArray known
				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }
				{ pop }
			ifelse
			}
		ifelse
		}
	ifelse
	} bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 4 index def
		/$doSmartSub false def
		end
	3 index
	currentglobal false setglobal exch
	/CompatibleFonts /ProcSet resourcestatus
		{
		pop pop
		/CompatibleFonts /ProcSet findresource
			begin
			dup /CompatibleFont currentexception
			1 index /CompatibleFont true setexception
			1 index /Font resourcestatus
				{
				pop pop
				3 2 roll setglobal
				end
				exch
				dup findfont
				/CompatibleFonts /ProcSet findresource
					begin
					3 1 roll exch /CompatibleFont exch setexception
					end
				}
				{
				3 2 roll setglobal
				1 index exch /CompatibleFont exch setexception
				end
				findfont
				$SubstituteFont /$substituteFound true put
				}
			ifelse
		}
		{ exch setglobal findfont }
	ifelse
	$SubstituteFont
		begin
		$substituteFound
			{
		 false
		 (%%[Using embedded font ) print
		 5 index ?str1 cvs print
		 ( to avoid the font substitution problem noted earlier.]%%\n) print
		 }
			{
			dup /FontName known
				{
				dup /FontName get $fontname eq
				1 index /DistillerFauxFont known not and
				/currentdistillerparams where
					{ pop false 2 index isWidthsOnlyFont not and }
				if
				}
				{ false }
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		exch pop exch pop exch
		2 dict dup /Found 3 index put
		exch findfont exch
		}
		{
		exch exec
		exch dup findfont
		dup /FontType get 3 eq
	  {
		  exch ?str1 cvs
		  dup length 1 sub
		  -1 0
		{
			  exch dup 2 index get 42 eq
			{
				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop
				 exit
			  }
			  {exch pop} ifelse
		  }for
		}
		{
		 exch pop
	  } ifelse
		2 dict dup /Downloaded 6 5 roll put
		}
	ifelse
	dup /FontName 4 index put copyfont definefont pop
	} bind def
/?str2 256 string def
/?add
	{
	1 index type /integertype eq
		{ exch true 4 2 }
		{ false 3 1 }
	ifelse
	roll
	1 index findfont
	dup /Widths known
		{
		Adobe_CoolType_Data /AddWidths? true put
		gsave dup 1000 scalefont setfont
		}
	if
	/Downloaded known
		{
		exec
		exch
			{
			exch ?str2 cvs exch
			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length
			?str1 1 index 1 add 3 index putinterval
			exch length 1 add 1 index add
			?str1 2 index (*) putinterval
			?str1 0 2 index getinterval cvn findfont 
			?str1 3 index (+) putinterval
			2 dict dup /FontName ?str1 0 6 index getinterval cvn put
			dup /Downloaded Downloaded put end copyfont
			dup /FontName get exch definefont pop pop pop
			}
			{
			pop
			}
		ifelse
		}
		{
		pop
		exch
			{
			findfont
			dup /Found get
			dup length exch ?str1 cvs pop
			?str1 1 index (+) putinterval
			?str1 1 index 1 add 4 index ?str2 cvs putinterval
			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn
			1 dict exch 1 index exch /FontName exch put copyfont
			dup /FontName get exch definefont pop
			}
			{
			pop
			}
		ifelse
		}
	ifelse
	Adobe_CoolType_Data /AddWidths? get
		{ grestore Adobe_CoolType_Data /AddWidths? false put }
	if
	} bind def
/?sh
	{
	currentfont /Downloaded known { exch } if pop
	} bind def
/?chp
	{
	currentfont /Downloaded known { pop } { false chp } ifelse
	} bind def
/?mv 
	{
	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse
	} bind def
setpacking
userdict /$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{ get }
			{ pop pop { pop /Courier } bind }
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams /CannotEmbedFontPolicy 2 copy known
			{ get /Error eq }
			{ pop pop false }
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup /WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type /stringtype eq { cvn } if def
								/FontType 3 def
								/FontMatrix [ .001 0 0 .001 0 0 ] def
								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
								/FontBBox [ 0 0 0 0 ] def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth /y exch def /x exch def
											x y setcharwidth
											$SubstituteFont /$Strategy get /$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									} bind def
								currentdict
								end
							exch setglobal
							} bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup /WMode known
										{ dup /WMode get }
										{ 0 }
									ifelse
									/$WMode exch def
									$fontname exch
									dup /FontName known
										{
										dup /FontName get
										dup type /stringtype eq { cvn } if
										}
										{ /unnamedfont }
									ifelse
									exch
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
									1 index /FontName get known
										{
										pop
										Adobe_CoolType_Data /InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{ $deepcopyfont }
									ifelse
									exch 1 index exch /FontBasedOn exch put
									dup /FontName $fontname dup type /stringtype eq { cvn } if put
									definefont
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
										begin
										dup /FontBasedOn get 1 index def
										end
									} bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{ /y 1000 def }
										{ /x -1000 def 500 120 translate }
									ifelse
									Level2?
										{
										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]
										setcolorspace
										}
										{ 0 setgray }
									ifelse
									10 setlinewidth
									x .8 mul
									[ 7 3 ]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{ .2 setcolor }
											{ .8 setgray }
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									} bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict /FontName known
											{
											FontName
											dup type /stringtype eq { cvn } if
											}
											{ /unnamedfont }
										ifelse
										def
										/FontName $fontname dup type /stringtype eq { cvn } if def
										/currentdistillerparams where
											{ pop }
											{
											/FontInfo currentdict /FontInfo known
												{ FontInfo null copyfont }
												{ 2 dict }
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									} bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont {} bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type /stringtype eq { cvn } if
						dup /$fontname exch def
						$sname null eq
							{ $str cvs dup length $slen sub $slen getinterval }
							{ pop $sname }
						ifelse
						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont /$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{ /$match exch def exit }
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont /$dstack get
								{
								exch
									{
									1 index eq
										{ pop false }
										{ true }
									ifelse
									}
									{ begin false }
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{ $match (fonts/) anchorsearch pop pop cvn }
							{ /Courier }
						ifelse
						} bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1  [ /Ryumin-Light /HeiseiMin-W3
										  /GothicBBB-Medium /HeiseiKakuGo-W5
										  /HeiseiMaruGo-W4 /Jun101-Light ] def
							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def
							/GB1	  [ /STSong-Light /STHeiti-Regular ] def
							/CNS1	 [ /MKai-Medium /MHei-Medium ] def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup /FontType get 0 eq
							{
							1 dict dup /FontName /copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup /FontName /copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{ $Strategies /$Type3Underprint get exec }
						ifelse
						} bind def
					/$buildfontname
						{
						dup /CIDFont findresource /CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index (-) putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy (-) putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }
							{ pop pop pop pop pop }
						ifelse
						length
						$str 1 index (-) putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						} bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{ get }
								{ pop pop [] }
							ifelse
							}
							{ pop pop [] }
						ifelse
						false exch
							{
							dup /CIDFont resourcestatus
								{
								pop pop
								save
								1 index /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get }
									{ false }
								ifelse
								exch pop
								exch restore
									{ pop }
									{ exch pop true exit }
								ifelse
								}
								{ pop }
							ifelse
							}
						forall
							{ $str cvs $buildfontname }
							{
							false (*)
								{
								save exch
								dup /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get not }
									{ true }
								ifelse
								exch /CIDSystemInfo get
								dup /Registry get Registry eq
								exch /Ordering get Ordering eq and and
									{ exch restore exch pop true exit }
									{ pop restore }
								ifelse
								}
							$str /CIDFont resourceforall
								{ $buildfontname }
								{ $fontname $findfontByEnum }
							ifelse
							}
						ifelse
						} bind def
					end
				end
				currentdict /$error known currentdict /languagelevel known and dup
					{ pop $error /SubstituteFont known }
				if
				dup
					{ $error }
					{ Adobe_CoolType_Core }
				ifelse
				begin
					{
					/SubstituteFont
					/CMap /Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{ dup $str cvs dup length $slen sub $slen getinterval cvn }
									{ $sname }
								ifelse
								Adobe_CoolType_Data /InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{ exch pop true exit }
												{ pop }
											ifelse
											}
											{
											FontDirectory 1 index known
												{ exch pop true exit }
												{
												GlobalFontDirectory 1 index known
													{ exch pop true exit }
													{ pop }
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{ pop pop false }
								ifelse
									{
									exch pop exch pop
									}
									{
									dup /CMap resourcestatus
										{
										pop pop
										dup /$cmapname exch def
										/CMap findresource /CIDSystemInfo get { def } forall
										$findfontByROS
										}
										{
										128 string cvs
										dup (-) search
											{
											3 1 roll search
												{
												3 1 roll pop
													{ dup cvi }
												stopped
													{ pop pop pop pop pop $findfontByEnum }
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup /CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup /$cmapname exch def
															/CMap findresource /CIDSystemInfo get { def } forall
															$findfontByROS
															true exit
															}
															{ pop }
														ifelse
														}
													for
													dup type /booleantype eq
														{ pop }
														{ pop pop pop $findfontByEnum }
													ifelse
													}
												ifelse
												}
												{ pop pop pop $findfontByEnum }
											ifelse
											}
											{ pop pop $findfontByEnum }
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{ //SubstituteFont exec }
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{ $findfontByEnum }
								{ //SubstituteFont exec }
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core /scfindfont /systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup /FontName known
								{ dup /FontName get dup 3 index ne }
								{ /noname true }
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def /$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{ 1 index /FID eq { pop pop } { def } ifelse }
										forall
										currentdict
										end
									definefont
									dup /FontName known { dup /FontName get } { null } ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using ) print
										dup /FontName known
											{ dup /FontName get } { (unspecified font) }
										ifelse
										$str cvs print (.\n) print
										}
									if
									}
									{ exch pop }
								ifelse
								}
								{ exch pop }
							ifelse
							end
						} bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core /findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type /stringtype ne { $str cvs } if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{ dup $inVMIndex $AddInVMFont }
						if
						$doSmartSub
							{
							currentdict /$Strategy known
								{ $Strategy /$BuildFont get exec }
							if
							}
						if
						}
					if
					end
				} bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch /FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data /InVMFontsByCMap get exch
		$DictAdd
		}
		{ pop pop pop }
	ifelse
	} bind def
/$DictAdd
	{
	2 copy known not
		{ 2 copy 4 index length dict put }
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get { forall } def
				2 copy currentdict put
				end
			}
			{ pop }
		ifelse
		}
	if
	get
		begin
			{ def }
		forall
		end
	} bind def
end
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.19 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 75 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/doc_setup
{ 
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/devnimg /devn_imageormask ldf
	/idximg /indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask {
					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint {
		0 get dup type /nametype eq {
			dup /DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			} forall
			not
		} ifelse
	}{
		pop false
	}ifelse
}def
/process_mask_L3
{
	dup begin
	/ImageType 1 def
	end
	4 dict begin
		/DataDict exch def
		/ImageType 3 def
		/InterleaveType 3 def
		/MaskDict 9 dict begin
			/ImageType 1 def
			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def
			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def
			/ImageMatrix [Width 0 0 Height neg 0 Height] def
			/NComponents 1 def
			/BitsPerComponent 1 def
			/Decode [0 1] def
			/DataSource AGMIMG_maskSource def
		currentdict end def
	currentdict end
}def
/use_mask
{
	dup type /dicttype eq
	{
		dup /Mask known	{
			dup /Mask get {
				level3
				{true}
				{
					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch
					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse
					3 -1 roll and
				} ifelse
			}
			{false} ifelse
		}
		{false} ifelse
	}
	{false} ifelse
}def
/make_line_source
{
	begin
	MultipleDataSources {
		[
		Decode length 2 div cvi {Width string} repeat
		]
	}{
		Width Decode length 2 div mul cvi string
	}ifelse
	end
}def
/datasource_to_str
{
	exch dup type
	dup /filetype eq {
		pop exch readstring
	}{
		/arraytype eq {
			exec exch copy
		}{
			pop
		}ifelse
	}ifelse
	pop
}def
/masked_image_simulation
{
	3 dict begin
	dup make_line_source /line_source xdf
	/mask_source AGMIMG_maskSource /LZWDecode filter def
	dup /Width get 8 div ceiling cvi string /mask_str xdf
	begin
	gsave
	0 1 translate 1 -1 Height div scale
	1 1 Height {
		pop
		gsave
		MultipleDataSources {
			0 1 DataSource length 1 sub {
				dup DataSource exch get
				exch line_source exch get
				datasource_to_str
			} for
		}{
			DataSource line_source datasource_to_str
		} ifelse
		<<
			/PatternType 1
			/PaintProc [
				/pop cvx
				<<
					/ImageType 1
					/Width Width
					/Height 1
					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix
					/MultipleDataSources MultipleDataSources
					/DataSource line_source
					/BitsPerComponent BitsPerComponent
					/Decode Decode
				>>
				/image cvx
			] cvx
			/BBox [0 0 Width 1]
			/XStep Width
			/YStep 1
			/PaintType 1
			/TilingType 2
		>>
		matrix makepattern set_pattern
		<<
			/ImageType 1
			/Width Width
			/Height 1
			/ImageMatrix Width 1 matrix scale
			/MultipleDataSources false
			/DataSource mask_source mask_str readstring pop
			/BitsPerComponent 1
			/Decode [0 1]
		>>
		imagemask
		grestore
		0 1 translate
	} for
	grestore
	end
	end
}def
/imageormask
{
	begin
		SkipImageProc {
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq DeviceN_PS2 not and {
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					use_mask {
						level3 {process_mask_L3 image}{masked_image_simulation}ifelse
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not {
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file {
									Names {
										dup (None) ne {
											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq {true setoverprint} if
											/names_index names_index 1 add def
										}{
											pop
										} ifelse
									} forall
									close_image_file
								} if
								grestore
								end
							}{
								Operator /imagemask eq {
									imagemask
								}{
									image
								} ifelse
							} ifelse
						}{
							Operator /imagemask eq {
								imagemask
							}{
								image
							} ifelse
						} ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					/Adobe_AGM_OnHost_Seps where {
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource [
											DataSource 0 get /exec cvx
											DataSource 1 get /exec cvx
											DataSource 2 get /exec cvx
											DataSource 3 get /exec cvx
											/AGMCORE_get_ink_data cvx
										] cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0 () /SubFileDecode filter def
									}ifelse
									/Decode [ Decode 0 get Decode 1 get ] def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator /image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
  			 							1 AGMCORE_&setgray
  			 							currentdict imageormask_sys
  			 						}{
  			 							currentdict ignoreimagedata
  			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								use_mask {
									level3 {process_mask_L3 image}{masked_image_simulation}ifelse
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	end
	end
}def
/decode_image_sample
{
	4 1 roll exch dup 5 1 roll
	sub 2 4 -1 roll exp 1 sub div mul add
} bdf
/colorSpaceElemCnt
{
	currentcolorspace 0 get dup /DeviceCMYK eq {
		pop 4
	}
	{
		/DeviceRGB eq {
			pop 3
		}{
			1
		} ifelse
	} ifelse
} bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub {
			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx
			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx
		} for
	] cvx bind
	end
} bdf		
/devn_alt_datasource
{
	11 dict begin
	/srcDataStrs xdf
	/dstDataStr xdf
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def
	/samplesNeedDecoding
		0 0 1 origDecode length 1 sub {
			origDecode exch get add
		} for
		origDecode length 2 div div
		dup 1 eq {
			/decodeDivisor 2 origBitsPerComponent exp 1 sub def
		} if
		2 origBitsPerComponent exp 1 sub ne
	def
	[
		0 1 dsCnt 1 sub [
			currentdict /origMultipleDataSources get {
				dup currentdict /origDataSource get exch get dup type
			}{
				currentdict /origDataSource get dup type
			} ifelse
			dup /filetype eq {
				pop currentdict /srcDataStrs get 3 -1 /roll cvx /get cvx /readstring cvx /pop cvx
			}{
				/stringtype ne {
					/exec cvx
				} if
				currentdict /srcDataStrs get /exch cvx 3 -1 /roll cvx /xpt cvx
			} ifelse
		] cvx /for cvx
		currentdict /srcDataStrs get 0 /get cvx /length cvx 0 /ne cvx [
			0 1 Width 1 sub [
				Adobe_AGM_Utils /AGMUTIL_ndx /xddf cvx
				currentdict /origMultipleDataSources get {
					0 1 dsCnt 1 sub [
						Adobe_AGM_Utils /AGMUTIL_ndx1 /xddf cvx
						currentdict /srcDataStrs get /AGMUTIL_ndx1 /load cvx /get cvx /AGMUTIL_ndx /load cvx /get cvx
						samplesNeedDecoding {
							currentdict /decodeDivisor known {
								currentdict /decodeDivisor get /div cvx
							}{
								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvxs
								BitsPerComponent /decode_image_sample load /exec cvx
							} ifelse
						} if
					] cvx /for cvx
				}{
					Adobe_AGM_Utils /AGMUTIL_ndx1 0 /ddf cvx
					currentdict /srcDataStrs get 0 /get cvx /AGMUTIL_ndx /load cvx		
					currentdict /origDecode get length 2 idiv dup 3 1 /roll cvx /mul cvx /exch cvx /getinterval cvx 
					[
						samplesNeedDecoding {
							currentdict /decodeDivisor known {
								currentdict /decodeDivisor get /div cvx
							}{
								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvx
								BitsPerComponent /decode_image_sample load /exec cvx
								Adobe_AGM_Utils /AGMUTIL_ndx1 /AGMUTIL_ndx1 /load cvx 1 /add cvx /ddf cvx
							} ifelse
						} if
					] cvx /forall cvx
				} ifelse
				currentdict /convProc get /exec cvx
				currentdict /origcolorSpaceElemCnt get 1 sub -1 0 [
					currentdict /dstDataStr get 3 1 /roll cvx /AGMUTIL_ndx /load cvx currentdict /origcolorSpaceElemCnt get /mul cvx /add cvx /exch cvx
					currentdict /convProc get /filter_indexed_devn load ne {
						255 /mul cvx /cvi cvx 
					} if
					/put cvx 
				] cvx /for cvx
			] cvx /for cvx
			currentdict /dstDataStr get
		] cvx /if cvx
	] cvx bind
	end
} bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	2 dict begin
	dup dup
	/dstDataStr exch /Width get colorSpaceElemCnt mul string def
	/srcDataStrs [ 3 -1 roll begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi string
		} repeat
		end ] def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_producing_seps not {
			level3 not {
				Operator /imagemask ne {
					/DataSource [
						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
						dstDataStr srcDataStrs devn_alt_datasource /exec cvx
						] cvx 0 () /SubFileDecode filter def
					/MultipleDataSources false def
					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				} if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process {
					CSA map_csa 0 get /DeviceCMYK eq {
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							[
							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
							dstDataStr srcDataStrs devn_alt_datasource /exec cvx
							] cvx
						filter_cmyk 0 () /SubFileDecode filter def
						/MultipleDataSources false def
						/Decode [1 0] def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate {
							/DataSource [
								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
								CSA map_csa 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get
								dstDataStr srcDataStrs devn_alt_datasource /exec cvx
								] cvx 0 () /SubFileDecode filter def
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				 			currentdict imageormask_sys
				 		}
						{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						} ifelse
 					} ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
	 					Operator/imagemask ne{
	 						MultipleDataSources {
		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						} ifelse
							invert_image_samples
	 					} if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						] 
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {
					/CSA get map_csa
				}{
					/CSD get get_csd /Names get
				} ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN {
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					} ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator /imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN {
					/indexed_colorspace_dict AGMCORE_gget begin
					CSD get_csd begin
				}{
					/indexed_colorspace_dict AGMCORE_gget begin
					CSA map_csa 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {
						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]
						setcolorspace
					} if
					end
				} ifelse
				imageormask
				Indexed_DeviceN {
					end
					end
				} if
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not {
			currentcolorspace 
			dup 1 /DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		} if
		currentdict 
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask {
				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
  /OPIimage
  {
  	dup type /dicttype ne{
  		10 dict begin
  			/DataSource xdf
  			/ImageMatrix xdf
  			/BitsPerComponent xdf
  			/Height xdf
  			/Width xdf
  			/ImageType 1 def
  			/Decode [0 1 def]
  			currentdict
  		end
  	}if
  	dup begin
  		/NComponents 1 cdndf
  		/MultipleDataSources false cdndf
  		/SkipImageProc {false} cdndf
  		/HostSepColorImage false cdndf
  		/Decode [
  				0 
  				currentcolorspace 0 get /Indexed eq{
  					2 BitsPerComponent exp 1 sub
  				}{
  					1
  				}ifelse
  		] cdndf
  		/Operator /image cdndf
  	end
  	/sep_colorspace_dict AGMCORE_gget null eq{
  		imageormask
  	}{
  		gsave
  		dup begin invert_image_samples end
  		sep_imageormask
  		grestore
  	}ifelse
  }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter /WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0 (%EndMask) /SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not {exit} if
	}loop
	WriteFilter closefile
	end
}def
/cachemask_level3
{
	currentfile
	<<
		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]
		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]
		/Intent 1
	>>
	/ReusableStreamDecode filter
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/SkipImageProc {false} def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		bdict
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ] 
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components [ AGMIMG_colorAry aload pop pop ] 
		edict
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		dup 4 get map_alias{
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat
	}{
	}ifelse
	end
} def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{ 
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{ 
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{ 
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (header-small use dome) 1
%%EndPageComments
%%BeginPageSetup
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?><x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 3.0-29, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>

 <rdf:Description rdf:about=''
  xmlns:pdf='http://ns.adobe.com/pdf/1.3/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:tiff='http://ns.adobe.com/tiff/1.0/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:xap='http://ns.adobe.com/xap/1.0/'
  xmlns:xapGImg='http://ns.adobe.com/xap/1.0/g/img/'>
  <xap:CreateDate>2005-01-10T11:27:03Z</xap:CreateDate>
  <xap:ModifyDate>2005-01-10T17:03:49Z</xap:ModifyDate>
  <xap:CreatorTool>Illustrator</xap:CreatorTool>
  <xap:Thumbnails>
   <rdf:Alt>
    <rdf:li rdf:parseType='Resource'>
     <xapGImg:format>JPEG</xapGImg:format>
     <xapGImg:width>256</xapGImg:width>
     <xapGImg:height>76</xapGImg:height>
     <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgATAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A8qYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq9C/InyHY+dfzEstN1K4S30u0U31+X4UkjhZQI&#xA;Rz+H947Kp67V2xVD/nX5Gs/Jf5h6jo9hcLdaY/G7sJF47Qz/ABCM8CR+7bknvStBWmKvav8AnE78&#xA;tPIfmvyZrF55i0W31O6g1Ewwyzgllj9CNuIoRtVicVZX/wA5CflD+Wnl/wDJ/X9X0Xy9aWOp231T&#xA;6vdRKwdPUvYI3pUnqjkYq+QfLdvDc+YtLt50EkE13BHLGejI0qhgfmDir9A/+VA/k3/1Kdj/AMC3&#xA;/NWKvjn/AJyO8uaH5c/NnU9J0OzjsNOhhtWitogQil7dGYipPVjXFWX/APOPv/ONp87W6eZ/NJkt&#xA;vLPIiytYjwlvChozcuqRBhxqPibelOuKvrby/wDl55F8vWy22i6DY2MYFC0cCeo3+vIwMjn3Zjir&#xA;eveQPI+v27W+s6DY30bCgMsEZdf9SQAOh91IxV8tfnx/zi2nlrTrrzT5KaSfR7YGXUNJkJklt4x9&#xA;qWJz8TxqPtBviUb1IrRVjH/OKXlDyz5q/MTUdP8AMWnRalZRaRNcRwTglRKtzbIHFCNwrsPpxV9N&#xA;+ZPyJ/KG28u6pcQeVrKOeGznkikCtVXWJipHxdiMVfn5irsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdir6t/Iuz/MmL8q7NtG1G3s7e4Ny9kkk0EbD966hnVhy/vATv29sVW/85AWX5izf&#xA;lndSapfwXtrb3NvJcpHLBIwj+sXO6hRy6Pag/wCqfeqqf/8AOEv/ACgOu/8AbVP/AFDRYqzX/nKP&#xA;/wAkT5m/6Mf+6hb4q+FfKf8AylOjf8x1t/yeXFX6f4q+I/z98uyeZP8AnJoaBGxRtUl0y1Mg/YWW&#xA;GJWf/YqScVfaem6dZabp9tp1jEsFlZxJBbQJsqRxqFVR8gMVfF//ADk7+cnmfVPPGo+VNNv5rLQN&#xA;Gf6rJBbu0X1idQPWaYqQWCv8Kqdtq0qcVYp+TH54eZPIvme0a81C5uvLE0gj1TT5HaVFiY0MsKMT&#xA;xkSvL4acqUOKvRvzI/5zJ1bUI7jTfJOnLp9pIDGdTvlSa4ZSKHhB8USf7Pnt2GKpT/zhWa/mpqp/&#xA;7Udx/wBRlpir6+82f8orrP8AzA3P/JlsVfmDirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdir7I/5wldD5D15Aw5jVKla7gG3joae9DirN/8AnKP/AMkT5m/6Mf8AuoW+KvhXyn/y&#xA;lOjf8x1t/wAnlxV+n+KvkPzze20H/OZ2mPLIAq3mmwsfB5bWNUB+ZkXFX15ir85fzy0u40383/Nt&#xA;vcKyvJqU90obrwum+sIe2xSUUxVhun2F7qN9b2FjC1xe3cqQW1vGKvJLIwVEUeLMaYqv1PStT0q+&#xA;lsNTtJrG9hPGa2uI2ikU/wCUjgEYq91/5wq/8mnqv/bDuP8AqLtMVfX3mz/lFdZ/5gbn/ky2KvzB&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV9K/84X+etO07W9Y8p30ywyau&#xA;IrnTC5ADzQBlkiBPVmRgyj/JOKvqXzn5S0nzf5X1Dy3qysbDUY/TlMZAdSrB0dCQRyR1VhUUqMVe&#xA;IeTP+cNvL+heaLTWdS1+XVrWxmS4ttPFstuGeNuaCZ/Um5rUCoCrXFXv+p6np+ladcalqNwlpYWk&#xA;bS3NzKeKIiipYk4q/OH8wvPNz5k/MjVvN9q7QSXF79YsH6PHHAQlsf8AWWONPpxV95/lH+Zmk/mF&#xA;5OtNYtZEXUERYtXslPxQXIHxAr14PTkh7j3BoqkH5vf849eUvzJuYtSuJ5dK1yFBD+kLdVcSRqSV&#xA;WaJqB+NTxYEH5igxVLvyp/5xi8n+QtZXXZbuXW9YhqLOadFiigJFC6RKX+OhpyZjTsAcVTn8/n/L&#xA;K18i3eoeeNPt78RRsmlwP8F1JcMPgjt5FKyrVqFip2G52xV87/8AOFZB/NTVSBQHQ7jYdv8ATLTx&#xA;xV9m31nDe2VxZzgmC5jeGUA0PCRSrUPyOKvHP+hQ/wAm/wDlmvv+ktv6Yq82/wCcgf8AnH78uvI/&#xA;5dTa9oMN0moJdQQq007SJwkYhvhIxV8vYq7FX3V/1iP/AN+r/wBO2Ku/6xH/AO/V/wCnbFXf9Yj/&#xA;APfq/wDTtirv+sR/+/V/6dsVd/1iP/36v/Ttirv+sR/+/V/6dsVd/wBYj/8Afq/9O2Ku/wCsR/8A&#xA;v1f+nbFXf9Yj/wDfq/8ATtirv+sR/wDv1f8Ap2xV3/WI/wD36v8A07Yq7/rEf/v1f+nbFXf9Yj/9&#xA;+r/07Yq7/rEf/v1f+nbFXf8AWI//AH6v/Ttirv8ArEf/AL9X/p2xV3/WI/8A36v/AE7YqrWf/Qqf&#xA;1yD6l/hn656ifVvR9D1fV5Dhw4/Fy5UpTeuKvZMVdirHvPf+B/0A/wDjX6p+gfUT1f0hx+r+pX93&#xA;z5fD16V7++KvNv8ArEf/AL9X/p2xVlP5e/8AKkv0pP8A4B/RH6R9L/Sf0V6fP0q/7s9L9mvj3xV6&#xA;DirsVYD+Yn/Klv0ha/4//RH130j9T/Svp8vS5fF6fq9uXWmKqX5ef8qM/TU3+Av0L+mPqzev+i/R&#xA;9b6t6icuXp78PU4V96Yq9DxV2Kse89/4G/QD/wCNvqX6C9ROf6S4fV/Vr+7rz+GtemKvNv8ArEf/&#xA;AL9X/p2xV3/WI/8A36v/AE7Yq//Z</xapGImg:image>
    </rdf:li>
   </rdf:Alt>
  </xap:Thumbnails>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:dc='http://purl.org/dc/elements/1.1/'>
  <dc:format>application/postscript</dc:format>
 </rdf:Description>

</rdf:RDF>
</x:xmpmeta>
xpacket end='w'?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
1 -1 scale 0 -170.138 translate
[1 0 0 1 0 0 ]  concat
% page clip
gsave
newpath
gsave % PSGState
0 0 mo
0 170.138 li
595.151 170.138 li
595.151 0 li
clp
[1 0 0 1 0 0 ] concat
0 0 mo
0 170.138 li
334.762 170.138 li
333.699 169.384 332.711 168.587 331.828 167.743 cv
323.963 160.138 323.854 151.302 323.629 143.022 cv
323.629 96.0396 li
348.795 96.0396 li
348.795 145.374 li
348.795 148.73 348.908 152.196 351.715 154.88 cv
353.738 157.007 356.773 157.788 359.695 157.788 cv
363.625 157.788 366.211 156.333 367.672 154.993 cv
370.594 152.196 370.703 148.73 370.703 145.374 cv
370.703 96.0396 li
395.982 96.0396 li
395.982 138.101 li
395.982 147.159 395.982 158.907 386.658 167.743 cv
385.768 168.579 384.783 169.376 383.725 170.138 cv
421.412 170.138 li
410.316 162.177 405.104 148.876 405.104 135.974 cv
405.104 114.72 419.375 93.1294 446.227 93.1294 cv
458.248 93.1294 469.707 97.3814 478.023 105.886 cv
481.395 109.353 482.967 112.036 484.65 115.167 cv
463.643 125.573 li
461.619 120.872 457.799 112.483 447.236 112.483 cv
441.732 112.483 438.248 115.058 436.562 116.735 cv
430.609 122.438 430.609 131.388 430.609 134.524 cv
430.609 146.267 434.992 157.343 447.352 157.343 cv
459.037 157.343 462.518 147.05 463.418 144.366 cv
484.766 154.657 li
482.742 158.46 480.832 162.04 477.014 165.843 cv
475.375 167.448 473.602 168.874 471.725 170.138 cv
494.805 170.138 li
494.805 95.9263 li
519.857 95.9263 li
519.857 154.253 li
552.371 154.253 li
552.371 170.138 li
595.151 170.138 li
595.151 0 li
0 0 li
false sop
/0 
[/DeviceCMYK] add_csa
0 0 0 1 cmyk
f
310.883 112.976 mo
310.833 112.966 297.324 110.063 297.324 110.063 cv
297.324 110.063 283.797 112.97 283.771 112.976 cv
283.696 112.991 283.723 113.053 283.723 113.053 cv
283.909 113.747 li
283.948 113.746 li
283.944 113.747 li
283.944 113.747 284.154 113.72 284.274 113.915 cv
284.477 115.028 li
284.477 115.028 284.481 115.106 284.563 115.106 cv
284.645 115.106 285.051 115.106 285.051 115.106 cv
309.597 115.106 li
309.597 115.106 310.022 115.106 310.092 115.106 cv
310.159 115.106 310.168 115.049 310.168 115.049 cv
310.37 113.935 li
310.486 113.716 310.713 113.747 310.713 113.747 cv
310.709 113.746 li
310.744 113.747 li
310.93 113.053 li
310.93 113.053 310.957 112.991 310.883 112.976 cv
0 0 0 0 cmyk
f
309.465 115.465 mo
309.48 115.465 309.493 115.453 309.493 115.434 cv
309.493 115.088 li
309.493 115.071 309.48 115.085 309.465 115.085 cv
307.403 115.085 li
307.389 115.085 307.374 115.071 307.374 115.088 cv
307.374 115.434 li
307.374 115.453 307.389 115.465 307.403 115.465 cv
307.491 115.466 li
307.533 115.466 307.535 115.507 307.535 115.547 cv
307.535 115.599 307.558 115.867 307.746 116.029 cv
307.772 116.052 307.763 116.118 307.707 116.118 cv
307.703 116.118 307.647 116.118 307.644 116.118 cv
307.596 116.118 307.594 116.149 307.607 116.174 cv
307.624 116.206 307.629 116.297 307.629 116.339 cv
307.629 116.383 307.629 116.459 307.629 116.49 cv
307.629 116.517 307.632 116.539 307.659 116.539 cv
307.662 116.539 307.688 116.539 307.69 116.539 cv
307.69 116.539 307.712 116.537 307.712 116.561 cv
307.712 116.581 307.712 116.591 307.712 116.591 cv
307.712 124.166 li
307.689 124.189 307.607 124.271 307.602 124.276 cv
307.596 124.283 307.59 124.293 307.59 124.304 cv
307.59 124.433 li
307.59 124.441 307.588 124.455 307.581 124.46 cv
307.575 124.466 307.562 124.469 307.551 124.469 cv
307.455 124.469 li
307.439 124.469 307.426 124.485 307.426 124.5 cv
307.426 124.5 307.426 124.711 307.426 124.719 cv
309.442 124.719 li
309.442 124.711 309.442 124.5 309.442 124.5 cv
309.442 124.485 309.429 124.469 309.413 124.469 cv
309.317 124.469 li
309.306 124.469 309.296 124.466 309.288 124.46 cv
309.283 124.455 309.279 124.441 309.279 124.433 cv
309.279 124.304 li
309.279 124.294 309.277 124.286 309.268 124.277 cv
309.256 124.267 309.189 124.199 309.156 124.166 cv
309.156 116.591 li
309.156 116.591 309.156 116.581 309.156 116.561 cv
309.156 116.537 309.177 116.539 309.177 116.539 cv
309.179 116.539 309.203 116.539 309.206 116.539 cv
309.233 116.539 309.236 116.517 309.236 116.49 cv
309.236 116.459 309.236 116.383 309.236 116.339 cv
309.236 116.297 309.244 116.206 309.26 116.174 cv
309.276 116.149 309.272 116.118 309.224 116.118 cv
309.222 116.118 309.164 116.118 309.161 116.118 cv
309.103 116.118 309.095 116.051 309.122 116.029 cv
309.311 115.875 309.33 115.605 309.33 115.554 cv
309.33 115.507 309.328 115.466 309.378 115.466 cv
309.465 115.465 li
f
305.022 115.465 mo
305.038 115.465 305.052 115.453 305.052 115.434 cv
305.052 115.088 li
305.052 115.071 305.038 115.085 305.022 115.085 cv
302.961 115.085 li
302.944 115.085 302.933 115.071 302.933 115.088 cv
302.933 115.434 li
302.933 115.453 302.944 115.465 302.961 115.465 cv
303.049 115.466 li
303.09 115.466 303.092 115.507 303.092 115.547 cv
303.092 115.599 303.116 115.867 303.302 116.029 cv
303.327 116.052 303.317 116.118 303.263 116.118 cv
303.259 116.118 303.204 116.118 303.201 116.118 cv
303.152 116.118 303.147 116.149 303.163 116.174 cv
303.181 116.206 303.185 116.297 303.185 116.339 cv
303.185 116.383 303.185 116.459 303.185 116.49 cv
303.185 116.517 303.188 116.539 303.216 116.539 cv
303.218 116.539 303.245 116.539 303.246 116.539 cv
303.246 116.539 303.267 116.537 303.267 116.561 cv
303.267 116.581 303.268 116.591 303.268 116.591 cv
303.268 124.166 li
303.245 124.189 303.163 124.271 303.157 124.276 cv
303.151 124.283 303.146 124.293 303.146 124.304 cv
303.146 124.433 li
303.146 124.441 303.146 124.455 303.138 124.46 cv
303.132 124.466 303.12 124.469 303.108 124.469 cv
303.013 124.469 li
302.997 124.469 302.983 124.485 302.983 124.5 cv
302.983 124.5 302.983 124.711 302.983 124.719 cv
304.999 124.719 li
304.999 124.711 304.999 124.5 304.999 124.5 cv
304.999 124.485 304.985 124.469 304.97 124.469 cv
304.874 124.469 li
304.862 124.469 304.851 124.466 304.845 124.46 cv
304.839 124.455 304.836 124.441 304.836 124.433 cv
304.836 124.304 li
304.836 124.294 304.833 124.286 304.824 124.277 cv
304.814 124.267 304.747 124.199 304.713 124.166 cv
304.713 116.591 li
304.713 116.591 304.713 116.581 304.713 116.561 cv
304.713 116.537 304.734 116.539 304.734 116.539 cv
304.736 116.539 304.76 116.539 304.764 116.539 cv
304.79 116.539 304.792 116.517 304.792 116.49 cv
304.792 116.459 304.792 116.383 304.792 116.339 cv
304.792 116.297 304.8 116.206 304.816 116.174 cv
304.832 116.149 304.827 116.118 304.78 116.118 cv
304.776 116.118 304.723 116.118 304.719 116.118 cv
304.66 116.118 304.652 116.051 304.68 116.029 cv
304.869 115.875 304.887 115.605 304.887 115.554 cv
304.887 115.507 304.886 115.466 304.935 115.466 cv
305.022 115.465 li
f
300.578 115.465 mo
300.595 115.465 300.607 115.453 300.607 115.434 cv
300.607 115.088 li
300.607 115.071 300.595 115.085 300.578 115.085 cv
298.517 115.085 li
298.5 115.085 298.487 115.071 298.487 115.088 cv
298.487 115.434 li
298.487 115.453 298.5 115.465 298.517 115.465 cv
298.605 115.466 li
298.646 115.466 298.647 115.507 298.647 115.547 cv
298.647 115.599 298.672 115.867 298.859 116.029 cv
298.885 116.052 298.875 116.118 298.819 116.118 cv
298.816 116.118 298.759 116.118 298.756 116.118 cv
298.709 116.118 298.706 116.149 298.721 116.174 cv
298.737 116.206 298.742 116.297 298.742 116.339 cv
298.742 116.383 298.742 116.459 298.742 116.49 cv
298.742 116.517 298.745 116.539 298.772 116.539 cv
298.773 116.539 298.802 116.539 298.804 116.539 cv
298.804 116.539 298.824 116.537 298.824 116.561 cv
298.824 116.581 298.824 116.591 298.824 116.591 cv
298.824 124.166 li
298.803 124.189 298.721 124.271 298.714 124.276 cv
298.708 124.283 298.703 124.293 298.703 124.304 cv
298.703 124.433 li
298.703 124.441 298.7 124.455 298.694 124.46 cv
298.688 124.466 298.676 124.469 298.665 124.469 cv
298.57 124.469 li
298.555 124.469 298.54 124.485 298.54 124.5 cv
298.54 124.5 298.54 124.711 298.54 124.719 cv
300.556 124.719 li
300.556 124.711 300.556 124.5 300.556 124.5 cv
300.556 124.485 300.541 124.469 300.525 124.469 cv
300.431 124.469 li
300.419 124.469 300.407 124.466 300.401 124.46 cv
300.396 124.455 300.392 124.441 300.392 124.433 cv
300.392 124.304 li
300.392 124.294 300.39 124.286 300.382 124.277 cv
300.37 124.267 300.305 124.199 300.271 124.166 cv
300.271 116.591 li
300.271 116.591 300.27 116.581 300.27 116.561 cv
300.27 116.537 300.291 116.539 300.291 116.539 cv
300.293 116.539 300.317 116.539 300.318 116.539 cv
300.348 116.539 300.351 116.517 300.351 116.49 cv
300.351 116.459 300.351 116.383 300.351 116.339 cv
300.351 116.297 300.357 116.206 300.374 116.174 cv
300.389 116.149 300.386 116.118 300.338 116.118 cv
300.335 116.118 300.279 116.118 300.275 116.118 cv
300.216 116.118 300.21 116.051 300.236 116.029 cv
300.425 115.875 300.442 115.605 300.442 115.554 cv
300.442 115.507 300.442 115.466 300.491 115.466 cv
300.578 115.465 li
f
296.135 115.465 mo
296.151 115.465 296.165 115.453 296.165 115.434 cv
296.165 115.088 li
296.165 115.071 296.151 115.085 296.135 115.085 cv
294.074 115.085 li
294.057 115.085 294.044 115.071 294.044 115.088 cv
294.044 115.434 li
294.044 115.453 294.057 115.465 294.074 115.465 cv
294.162 115.466 li
294.204 115.466 294.205 115.507 294.205 115.547 cv
294.205 115.599 294.229 115.867 294.416 116.029 cv
294.443 116.052 294.432 116.118 294.377 116.118 cv
294.373 116.118 294.317 116.118 294.314 116.118 cv
294.265 116.118 294.263 116.149 294.277 116.174 cv
294.294 116.206 294.298 116.297 294.298 116.339 cv
294.298 116.383 294.298 116.459 294.298 116.49 cv
294.298 116.517 294.302 116.539 294.329 116.539 cv
294.331 116.539 294.358 116.539 294.36 116.539 cv
294.36 116.539 294.383 116.537 294.383 116.561 cv
294.383 116.581 294.383 116.591 294.383 116.591 cv
294.383 124.166 li
294.36 124.189 294.277 124.271 294.27 124.276 cv
294.265 124.283 294.26 124.293 294.26 124.304 cv
294.26 124.433 li
294.26 124.441 294.256 124.455 294.25 124.46 cv
294.244 124.466 294.232 124.469 294.221 124.469 cv
294.126 124.469 li
294.109 124.469 294.097 124.485 294.097 124.5 cv
294.097 124.5 294.097 124.711 294.097 124.719 cv
296.112 124.719 li
296.112 124.711 296.112 124.5 296.112 124.5 cv
296.112 124.485 296.099 124.469 296.082 124.469 cv
295.986 124.469 li
295.976 124.469 295.964 124.466 295.958 124.46 cv
295.951 124.455 295.949 124.441 295.949 124.433 cv
295.949 124.304 li
295.949 124.294 295.946 124.286 295.938 124.277 cv
295.926 124.267 295.86 124.199 295.828 124.166 cv
295.828 116.591 li
295.828 116.591 295.827 116.581 295.827 116.561 cv
295.827 116.537 295.848 116.539 295.848 116.539 cv
295.851 116.539 295.874 116.539 295.876 116.539 cv
295.903 116.539 295.906 116.517 295.906 116.49 cv
295.906 116.459 295.906 116.383 295.906 116.339 cv
295.906 116.297 295.913 116.206 295.93 116.174 cv
295.944 116.149 295.941 116.118 295.894 116.118 cv
295.89 116.118 295.836 116.118 295.833 116.118 cv
295.773 116.118 295.766 116.051 295.792 116.029 cv
295.981 115.875 296 115.605 296 115.554 cv
296 115.507 295.999 115.466 296.047 115.466 cv
296.135 115.465 li
f
291.692 115.465 mo
291.708 115.465 291.721 115.453 291.721 115.434 cv
291.721 115.088 li
291.721 115.071 291.708 115.085 291.692 115.085 cv
289.631 115.085 li
289.614 115.085 289.601 115.071 289.601 115.088 cv
289.601 115.434 li
289.601 115.453 289.614 115.465 289.631 115.465 cv
289.718 115.466 li
289.761 115.466 289.762 115.507 289.762 115.547 cv
289.762 115.599 289.786 115.867 289.973 116.029 cv
290 116.052 289.989 116.118 289.934 116.118 cv
289.93 116.118 289.874 116.118 289.871 116.118 cv
289.822 116.118 289.819 116.149 289.834 116.174 cv
289.851 116.206 289.854 116.297 289.854 116.339 cv
289.854 116.383 289.854 116.459 289.854 116.49 cv
289.854 116.517 289.858 116.539 289.886 116.539 cv
289.888 116.539 289.916 116.539 289.918 116.539 cv
289.918 116.539 289.938 116.537 289.938 116.561 cv
289.938 116.581 289.938 116.591 289.938 116.591 cv
289.938 124.166 li
289.918 124.189 289.834 124.271 289.827 124.276 cv
289.822 124.283 289.816 124.293 289.816 124.304 cv
289.816 124.433 li
289.816 124.441 289.813 124.455 289.807 124.46 cv
289.801 124.466 289.789 124.469 289.778 124.469 cv
289.683 124.469 li
289.667 124.469 289.653 124.485 289.653 124.5 cv
289.653 124.5 289.653 124.711 289.653 124.719 cv
291.668 124.719 li
291.668 124.711 291.668 124.5 291.668 124.5 cv
291.668 124.485 291.655 124.469 291.639 124.469 cv
291.543 124.469 li
291.533 124.469 291.522 124.466 291.515 124.46 cv
291.509 124.455 291.506 124.441 291.506 124.433 cv
291.506 124.304 li
291.506 124.294 291.504 124.286 291.495 124.277 cv
291.483 124.267 291.416 124.199 291.384 124.166 cv
291.384 116.591 li
291.384 116.591 291.383 116.581 291.383 116.561 cv
291.383 116.537 291.404 116.539 291.404 116.539 cv
291.406 116.539 291.43 116.539 291.432 116.539 cv
291.46 116.539 291.462 116.517 291.462 116.49 cv
291.462 116.459 291.462 116.383 291.462 116.339 cv
291.462 116.297 291.47 116.206 291.487 116.174 cv
291.502 116.149 291.499 116.118 291.45 116.118 cv
291.447 116.118 291.392 116.118 291.388 116.118 cv
291.329 116.118 291.322 116.051 291.349 116.029 cv
291.539 115.875 291.557 115.605 291.557 115.554 cv
291.557 115.507 291.555 115.466 291.604 115.466 cv
291.692 115.465 li
f
287.249 115.465 mo
287.265 115.465 287.278 115.453 287.278 115.434 cv
287.278 115.088 li
287.278 115.071 287.265 115.085 287.249 115.085 cv
285.187 115.085 li
285.17 115.085 285.158 115.071 285.158 115.088 cv
285.158 115.434 li
285.158 115.453 285.17 115.465 285.187 115.465 cv
285.274 115.466 li
285.316 115.466 285.318 115.507 285.318 115.547 cv
285.318 115.599 285.344 115.867 285.53 116.029 cv
285.555 116.052 285.545 116.118 285.491 116.118 cv
285.486 116.118 285.43 116.118 285.427 116.118 cv
285.38 116.118 285.376 116.149 285.391 116.174 cv
285.409 116.206 285.412 116.297 285.412 116.339 cv
285.412 116.383 285.412 116.459 285.412 116.49 cv
285.412 116.517 285.415 116.539 285.442 116.539 cv
285.444 116.539 285.472 116.539 285.474 116.539 cv
285.474 116.539 285.495 116.537 285.495 116.561 cv
285.495 116.581 285.496 116.591 285.496 116.591 cv
285.496 124.166 li
285.473 124.189 285.391 124.271 285.385 124.276 cv
285.378 124.283 285.374 124.293 285.374 124.304 cv
285.374 124.433 li
285.374 124.441 285.371 124.455 285.364 124.46 cv
285.358 124.466 285.347 124.469 285.336 124.469 cv
285.24 124.469 li
285.224 124.469 285.21 124.485 285.21 124.5 cv
285.21 124.5 285.21 124.711 285.21 124.719 cv
287.226 124.719 li
287.226 124.711 287.226 124.5 287.226 124.5 cv
287.226 124.485 287.212 124.469 287.197 124.469 cv
287.101 124.469 li
287.089 124.469 287.078 124.466 287.071 124.46 cv
287.065 124.455 287.063 124.441 287.063 124.433 cv
287.063 124.304 li
287.063 124.294 287.061 124.286 287.052 124.277 cv
287.04 124.267 286.974 124.199 286.94 124.166 cv
286.94 116.591 li
286.94 116.591 286.939 116.581 286.939 116.561 cv
286.939 116.537 286.961 116.539 286.961 116.539 cv
286.963 116.539 286.986 116.539 286.988 116.539 cv
287.016 116.539 287.019 116.517 287.019 116.49 cv
287.019 116.459 287.019 116.383 287.019 116.339 cv
287.019 116.297 287.027 116.206 287.044 116.174 cv
287.059 116.149 287.056 116.118 287.008 116.118 cv
287.003 116.118 286.949 116.118 286.946 116.118 cv
286.885 116.118 286.879 116.051 286.906 116.029 cv
287.095 115.875 287.113 115.605 287.113 115.554 cv
287.113 115.507 287.112 115.466 287.161 115.466 cv
287.249 115.465 li
f
303.634 107.441 mo
303.634 107.441 303.465 107.441 303.422 107.441 cv
303.364 107.441 303.366 107.395 303.366 107.395 cv
303.366 107.395 303.366 107.213 303.366 107.167 cv
303.366 107.108 303.31 107.108 303.31 107.108 cv
303.31 107.108 303.153 107.108 303.102 107.108 cv
303.043 107.108 303.044 107.056 303.044 107.056 cv
303.044 106.845 li
303.044 106.845 303.046 106.799 302.993 106.799 cv
302.973 106.799 302.901 106.799 302.868 106.799 cv
302.823 106.799 302.778 106.763 302.774 106.702 cv
302.767 106.414 302.869 104.381 301.793 102.91 cv
300.95 101.646 299.785 101.005 299.143 100.706 cv
299.131 100.432 298.739 100.328 298.57 100.269 cv
298.48 100.238 298.402 100.203 298.402 100.123 cv
298.402 100.119 298.4 100.033 298.4 100.029 cv
298.4 99.9434 298.478 99.9092 298.596 99.9126 cv
298.632 99.9141 298.658 99.8829 298.658 99.8589 cv
298.658 99.6124 li
298.658 99.5772 298.626 99.5381 298.576 99.5381 cv
298.491 99.5381 298.392 99.5372 298.342 99.5372 cv
298.288 99.5372 298.261 99.4869 298.261 99.4556 cv
298.261 99.4053 298.261 99.4288 298.261 99.3321 cv
298.261 99.2598 298.203 99.2188 298.161 99.1978 cv
298.161 97.6802 li
298.161 97.6299 298.2 97.6363 298.234 97.6363 cv
298.239 97.6363 298.246 97.6363 298.252 97.6343 cv
298.256 97.6343 li
298.275 97.6343 298.292 97.6168 298.292 97.5972 cv
298.292 97.4522 li
298.292 97.4317 298.275 97.4161 298.256 97.4161 cv
298.188 97.4161 li
298.164 97.4058 298.147 97.3741 298.147 97.3057 cv
298.147 97.2354 298.168 97.2027 298.196 97.1968 cv
298.256 97.1968 li
298.275 97.1968 298.292 97.1807 298.292 97.1612 cv
298.292 97.0137 li
298.292 96.9942 298.275 96.9786 298.256 96.9786 cv
298.178 96.9786 li
298.145 96.9732 298.119 96.9585 298.086 96.9322 cv
297.828 96.7271 297.566 96.4327 297.566 96.3887 cv
297.566 96.3653 297.565 96.3633 297.565 96.334 cv
297.565 96.3033 297.535 96.2418 297.465 96.2418 cv
297.397 96.2418 297.406 96.1705 297.443 96.1705 cv
297.467 96.1705 297.473 96.1636 297.473 96.1294 cv
297.473 96.1089 297.473 96.0713 297.473 96.0318 cv
297.473 95.9878 297.34 95.8052 297.34 95.8052 cv
297.332 95.8052 li
297.332 95.8052 297.197 95.9878 297.197 96.0318 cv
297.197 96.0713 297.198 96.1089 297.198 96.1294 cv
297.198 96.1636 297.205 96.1705 297.23 96.1705 cv
297.265 96.1705 297.275 96.2418 297.208 96.2418 cv
297.138 96.2418 297.106 96.3033 297.106 96.334 cv
297.106 96.3633 297.104 96.3653 297.104 96.3887 cv
297.104 96.4327 296.844 96.7271 296.585 96.9322 cv
296.552 96.9585 296.527 96.9732 296.494 96.9786 cv
296.416 96.9786 li
296.396 96.9786 296.38 96.9942 296.38 97.0137 cv
296.38 97.1612 li
296.38 97.1807 296.396 97.1968 296.416 97.1968 cv
296.476 97.1968 li
296.503 97.2027 296.524 97.2354 296.524 97.3057 cv
296.524 97.3741 296.508 97.4058 296.484 97.4161 cv
296.416 97.4161 li
296.396 97.4161 296.38 97.4317 296.38 97.4522 cv
296.38 97.5972 li
296.38 97.6168 296.396 97.6343 296.416 97.6343 cv
296.42 97.6343 li
296.426 97.6363 296.432 97.6363 296.437 97.6363 cv
296.472 97.6363 296.511 97.6299 296.511 97.6802 cv
296.511 99.1978 li
296.469 99.2188 296.41 99.2598 296.41 99.3321 cv
296.41 99.4288 296.41 99.4053 296.41 99.4556 cv
296.41 99.4869 296.383 99.5372 296.329 99.5372 cv
296.28 99.5372 296.179 99.5381 296.095 99.5381 cv
296.045 99.5381 296.012 99.5772 296.012 99.6124 cv
296.012 99.8589 li
296.012 99.8829 296.04 99.9141 296.075 99.9126 cv
296.192 99.9092 296.271 99.9434 296.271 100.029 cv
296.271 100.033 296.269 100.119 296.269 100.123 cv
296.269 100.203 296.19 100.238 296.102 100.269 cv
295.931 100.328 295.541 100.432 295.53 100.706 cv
294.885 101.005 293.721 101.646 292.879 102.91 cv
291.802 104.381 291.904 106.414 291.896 106.702 cv
291.893 106.763 291.849 106.799 291.804 106.799 cv
291.772 106.799 291.699 106.799 291.68 106.799 cv
291.626 106.799 291.626 106.845 291.626 106.845 cv
291.626 107.056 li
291.626 107.056 291.628 107.108 291.571 107.108 cv
291.519 107.108 291.36 107.108 291.36 107.108 cv
291.36 107.108 291.305 107.108 291.305 107.167 cv
291.305 107.213 291.305 107.395 291.305 107.395 cv
291.305 107.395 291.308 107.441 291.249 107.441 cv
291.207 107.441 291.037 107.441 291.037 107.441 cv
291.037 107.441 290.979 107.441 290.979 107.501 cv
290.979 107.536 290.979 107.671 290.979 107.747 cv
290.979 107.774 290.995 107.779 291.015 107.782 cv
291.078 107.791 291.208 107.848 291.208 107.988 cv
291.208 108.228 291.353 108.251 291.412 108.251 cv
291.412 109.136 li
291.412 109.343 291.251 109.423 291.16 109.445 cv
291.142 109.448 291.116 109.47 291.116 109.494 cv
291.116 109.517 291.116 110.405 291.116 110.405 cv
297.332 109.034 li
297.34 109.034 li
303.555 110.405 li
303.555 110.405 303.555 109.517 303.555 109.494 cv
303.555 109.47 303.528 109.448 303.51 109.445 cv
303.419 109.423 303.259 109.343 303.259 109.136 cv
303.259 108.251 li
303.317 108.251 303.463 108.228 303.463 107.988 cv
303.463 107.848 303.593 107.791 303.655 107.782 cv
303.677 107.779 303.692 107.774 303.692 107.747 cv
303.692 107.671 303.692 107.536 303.692 107.501 cv
303.692 107.441 303.634 107.441 303.634 107.441 cv
f
310.506 127.303 mo
310.506 125.486 li
309.443 125.486 li
309.443 124.693 li
285.21 124.693 li
285.21 125.485 li
284.146 125.485 li
284.146 127.301 li
283.077 127.301 li
283.077 129.135 li
311.577 129.137 li
311.577 127.303 li
310.506 127.303 li
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse

%ADOEndClientInjection: EndPageContent "AI11EPS"
% page clip
grestore
grestore % PSGState
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 9.0
%%AI8_CreatorVersion: 11.0.0
%%For: (Artwork Team) (The Partners)
%%Title: (header-small use dome)
%%CreationDate: 10/1/05 5:03 pm
%AI9_DataStream
%Gb"-6CNCc3E@CYkl9FnW7;.*44G>_eX)J3p,^jf09,h(!fFGq.`HZPObn2tB0fpUcSR6l/:B4DFc/u63Q=[@t*EEf,632pjBAuEG
%])(plrO;7Ps6f0is7_^_hF/N1EV@"\de':VrBKb"q=a]j`C2K;6F2S1\baM9/n,6sICudrp@Y-F%rXWr]RBhEl]3.E]`%j,rJ17\
%+2@itmcsfERm2"EroWfrhqc%oqe^c!LX.&XbFe.8X&"-Cp=&I#gCO>Sp,D_as7l<EroWca@:q4ZDQ_=b?]-8g^\RZumJH@_c+Ila
%O8o-IJ,K*<gNW=->CXXFE-OToGl>7`[?k!b\]n_N]>+CDrMP^[5CN=JDqf1(h<Rk/hL9j%BLLM8c1f!Qn>DhZJ'D3To_[5ogU2ef
%4k.c+F8PD)mHo[i&$J4b_?IdrNW%Jdf<P?dLVFMtBCFa5J,]0/f6+sfIZ'il4o?K%#(Q[8mAEafs#Su5^4$%-s7T7cqIL`iY_/S7
%l3f7=SaD>;5O`-*],uNNq=@tlio`84?1R[^B)`T1eus#ZN3=?'q_-k+mN#'Q]+=B1(Gr;d8jiR>m<>`??3`cWr"pdZqX&3.J%kqN
%hlpmulE?hog>O%Mi]@-fNt92j8:&t5(V`'_5d"/mrn!U@ItQYGcL!a.k3K4Si>%[X*p9()orj\9RfiWh(^::&s/WU>hqc'HoG4on
%S)Zri\J!i8m<<GNQ]no6/)tTlV<I,]D$.KMj1DdMqT8/t?b^m\rmQYkIo"Pgot*/9':0e*IIln,eAVs+A",g?AT'2A/t)_<bKop$
%5Q:NX]2,fdQTm"M_*<GEp?hfSG#it#]mgIsZ'lVHn>k._J+rXMm*kjXYR5O"1]Q_&T-*K-s7n85Dbi%]`HQ7Xs6@N%`,WOaWU,S#
%[E&.:`ji\)f'R:lj\!-W8D<?KO757o/`!9@JJ*B:1%uJ+hu3!!qk)@e[kf3"5CS"SD8YOIlYPR1n.REpp\uH;Vbu"UY5@iSm=Cc$
%hsN]k^l6lnntW7C^@*RihgbDArCqd^^XUk`rf2_jpV6P"LYB<l:E@@FF8S]1c.D]^l_"1Hj+kt<rTsK$5>4;]XhFV#Lr1n&f3a!A
%]DD<uqqpjkp#3ge=1b^<s+u&Q5CWO[[m'YKg@fLcXeRQ7HiNsArn[$,^AdQpn(ql'^[ZMrc_5!4^9B6=a1&/]][_Lm55EGBSB@s2
%NdoL&2kE#.L-Ip#a+sP9h`nK.4%T8I0oW%=FoV16\)1s[FP@"Cp[4(D4Pj3eUQn,e98h/dpQ^_epo^)UKtMm7mI"=fJ,J_2[kPDN
%^3flsSX"+W^\dZ3/bFgRmm&ATIIm?fhZ7uPP'0CP4oPA)p$0W<WDrBPIJ7sEgcsKj(e'4phu1aeCX9V"<q,Fd2OdMgk#^G8s$$C'
%]"Pej\\5`5hd5,FhNloDRr78'\Fm?!f%ukMq<%D5k2uMPIrfaRGuJVO9tH0?iPscb)gc(4k3LdfS*TD+rUn_6j`S,Zdri6^fAYFj
%]5)b1Y35cNrapYnhs[cBQi")7qm;F]YkNLR[sPHRYAUO]Y-+u%='&Ii=61o=V5nhUY5FQsZ<-1'Sh=q7D_A4HpQnsJQ^?eh?`)"k
%)(tla]<mpeE\=i_VHfI9\LNrBP[%+C,ns]kZ,Mqfhr^DUSbMq0?WNnnVjqeO+oCW3bpLd$2Vk1pZqjcf16n)&8hl%\P=mg%1rn?q
%'<gF[?H()i@ZH`-`__@N(Mu!KT#,?S$.iT-Y/4a]1-&;\'123)"WL.&rN3j)f7*1lr1u&1qrFL_hL"Ff2cX1oFZ8aBmG4&>FN*@`
%,o9j+hDo5>EO3?d2tktnm?PAl`FbTU[)%(SXL6'nk18=TCU5s$k0arB`R;n(WX*@0Z,W/VRd3;cFY2aV\PCd^^Nki\*S=WoSk\<F
%s"M^0+8t?eA&X;EnH8\fU#/O.qTT(fp&3BnM@->2N%I,9D0pE-W%Jq!NPmadDa1tMs)rVXkINa0]@rkjUoiiN='/^IFet'J0<_AS
%Vef\+#Ht1<f2O]QA(UCq=8eP)^?k%VcnujCe'kMTMI.%pkFC.RZOZ::r98lf8'"FM3^(Ta"QslQ1N`hu-TO?;&[G=A&(2Jm4@4CN
%q>gI[$8aIL!\sn3Le&*h,9TKAOFSSW;6".5#nrCI+AP1nJ3[B`OTI9AKITbgXV+M_TNM<[Q:KZjOFC?.@IQ)%`=mF4f/6o^\u&*[
%jLWjAk`rb1F]TQcd&m]TnJdfVE7s:'1n-/42LhT@n<a0F[6m@K.T4>&2m0N5jTATGp_3R<j17@!>ogX+rH8.9lh\sc*WAu]4b:aN
%cR%#_T4na\hTp\X%M>tH]F!#`6V.sP9TV"c$CDrBP&L`%,m]e^<qb$K"A0CVQbqf^6qP!Zf-_j0koa-DB#4%1BmN[G^.H_M%?fQ[
%FJe4ul1n1k%[;A+aSCFTT1I'?FF;ddis2OX8JHPU&b0L3n%X1+D+GW@Bd_mKe3naR6kuD]jBn%38VSQ84/(dR-WD/iWfWlA3`I@j
%Q%WpBL%6"E8l.$(YlrVJ$IqdG0WU(6YCp(+ka>kZW[9-`TPf@uBb5]1;=+M*'3%b(5!f,m"Vap4:dRGW,t/MI;,B_Z*M$"O-(PaW
%;US3(1F:ikZr>CK8OG@kT==U7TVdmH8ua?jWtXg"Up6Z>b$$=[Xe`LbmRl1`l*%2)Z48Bgm+"L]D#FB/<chKqAlYH<NOJ)YU=HQ"
%fehH_;f8)+W=!MjEV;/#,>C=@6Llr^IHi92;Vb?,\!&nC`]NCsPL?;(g:OK^Wp2[L2.+j]Vc!7998NL&6uST!(d864,YsNG5sbm7
%/0rMkR,b)KO(K)]VA(_]Qu4.jk%WR>2GCS_L4*MYhBk$_?,d=?gLK"YD.g5(d<<LZ`&8Ld'Tjt'?8ogHp6i?.0%ikGp4?p]:#-0j
%D?R8s>d$(Qh$'M0"ZUr/*[kd<@11B1)0*TRUP9c.J&$NJ_LB<!X#9<@M#+e^B/Jo_L7OU,[FV`8^L$NmD$/*li`TH0RZ1s+`5m#<
%bd2ld)jkNmcuY>-#Hrc@2M'CCcJSg2-).RD>a<_)Cqb_A,dm&&koh_o?.AS64XObWbscS3m%V7n'AR_W[$@)LfDq0PKA-1V;p8"O
%I/WL3Ish%?=-NUfN\.Z$T#!&5Rmj5rfL:.nk]@<HBQ"ZWc=%OV2pZRU]4ernVK:BYq[G>5m@pgf0'^+%M?,4nnsL;:(sdD#cgTji
%LZpqQFKUY443Z$cVA5aKQTq#V7cS?4nRGV[bMG_$1`LqD[?uHPCrDAOD%Bm+Y"='[/plZ"#;;0m=<q'WiQ/E</lJIlFMMp=fQP4,
%UNW=H?V*S_U`i_N;(AQTW[-W9P)e:slBt7:>U:hmP*T'=9W=iMWfin<8pYA*j#30R]1S8RV+mr;W)@?[ePqCVFX:A'<Q-e[R(5i=
%67$NK'"Lnsh,PbIf9Q-e<\e&40m&[/L.WFa-'G*^)HW2=?<?E;>;osOVpS5(XG0>R;^JcHP2!$0G-<Fl]ree_.QM[;/;Hih;^Knh
%P3]/@[]_4W^9)'bWbCHC>n<47V[S+eQ_6_4/+LBRP;--N?n51FPrZe*,][H3Q^):O/+^8"[oHQcQ(b_1=@-RQWA9o?Kt=>-H*/Y]
%hcB-b<0$%:b*kY.;5pk$;H_RNAR3n&X)G$MBdubsQ*l=gi_j?1V6[b7b5/7kB&?Y"e5Qb)<SeQBO%bg?QHD"eVTM$).sg)RJ_*ku
%lHnE%d=5)6,OH*;D\6D0i`JIQaCkj\DoT3P/-\nb:*C9`V`XnrV"R$.]0(k&Nl:a5J(p[_J-58=J+)XRZGU0'ihU@9nfu17<kYBN
%)Ed\]3pY*.>XXt8H*>!J%ae08Z,-'Kf3_a;\?=.TT=2,)krJ%XQM*-u7t'+>Su1\L:KuQ%oGmO<97*,!UHZq6,fl7/PmY4)J%`"e
%DTuFYY__@I,\]u.7'/,-[&-3besB!4dihTS9-p_)OJqiKP1F_Ge9YBJ,"ZOoL*,IJO3/o4b=@VMB[&D6Fnj.>lfsUJJ,#K-Qg7/E
%Rn#*]XJUV"f43+$"$`"KAfnS7X:#@)WU0Pa@`^D/Vl(rfS(BAtnar3Mm[B0:j\Po%U*AK%$R0sH6KQS%($3kLdpih.]f,7cB/Qdh
%@!8b1fu"k4cCV1&8r1_pXOAA":$8fWMg.+Mb;q67eT<G0["qf4\ZF7(?;9Ug:5a+<,/s;N(md^!c9*IJiQ0\]8s8`(&F!\G+)+4D
%RM8-@`0;ZEEnA^d<n,H#i)TH(*a]YP["s,pa')>)2?[jTnV)+WV1nC83S"Q7To\</iXAEegJ?2$<n*0b\Ttpc(4A,3)El%qp!'DD
%DsqmOY<VH(p9Us"n[<W&?K1b[7cX8J8H)D_F-rbM4_Zs48\3N;VK8-#HTc((LIo)/PGWDgUjG7=qD+6k`dHVQq%ae)o3Tl0%T^[T
%hmmc)).Ab1$RcW8L95fK,2)eirqj0sJDed-d"c4?[)eL_-79G61<-Cd>h?WEkSg5,d^0Ui;Fq?*2<W28!Id(HB>HjO>CG8tBuikP
%mlnJR`D5t_ALE&rhqLcSC;Z?GA'7oX+&*9p?tItG)m&E,$d1;36*?&3F<d\j,fDRNMI)Wq?1G>SlWUJQ*ts?IG)g$gQ>K!(5>ElX
%=3rJG2'IFlQ1ZVS?0ZR/f3YXr]l*VVS^^Bi<8KN)D+O6XothQd[CtXCe&F[`_qK@>olI\HJ(&+]]!Hk'4$Oa)cl[AP5N[lr[bU@B
%ni+!52S(/ml&fe@8$X:O^Ws?I!+3\V&p3$RDS=Pj.7V'Vh0QBcBT'id2jS9W9AMYA?$Lk?Y&I(_$2XnbMkW.B?4f('!XmF;7F?no
%T1D-WI3ADg(he8U!Jn3Urb&#0G!a^Pa9Me/LF%mb/BA?P,61L^Y&K"j)DgpgiXWaGJ3s<t+<`I8(a40]]RmZ42+DoL,0qC7!IVdn
%CiNkNOYGq-+:fVJ!dk,1aj#JE2'ZtDaARPf&6f1T!iuQm$aCLU0RJb*L@ElRG!2>6r@IhMG.[tTheIo#%4=P?;?U8l=tV]"X\_-#
%k5;]a)&#k=Qk2-#VpuaocD/bQ36mVT1oK>:am2rn/ghMP77hUdo&c7KF1sX]jeZ01FGH%CQ<>$FV'nThCea)O2$DHH3bPN;#[Pn>
%@grH=VK9`q_G!]MI?Ni48VW;F=BUV15Bom8C4>r(e<Km07J_#IpnL=Ra,L$oLhL299L/dJB.F:$@kosFcFl"cP*5ZWm7uAU5qRIb
%dt-/GdfOSKc/,@02Qa;_&#:XK)jrs%:K!*KB2`PGV.NdAb>PYu2<tmUIBg+4M2eK;RBF,CSN\^CW3rVXS'^.O!=p#F&r`9R`U\-D
%P^J-uOd+moTP\<e#[nt+-H*%48l1-t&NM%V6Kj6Tonb\WIR9Zrdq.]9K@\_Rk`>hGV<P?T*@-DGZ47Jc/*-M;iq.qj0J82D80sBn
%8hu$pn4<C8:ef%hN$sb:#:Cdjltbt^XMjo[9m2A^)A]iqKBj/gL*SLrJXO)S0g[QcLhU"%A8*0^PO("qP*&-Mc6STY19j0%,sq1F
%3/9upb9Y,%128)dN0"hfGf$74b-@'k)bE;Y,W&(\$]O,;1#6PQRO"f]CJq_gK!5eZrEadFQ2FnP<VX^a<CEWW6b,=BgD2cdc1=Df
%910p<9KJoGde_H*k\Im*HF;`(5Gbu4G9p)S0o<#(kn`CPJ?nu,XXDSafh^"EZ=uUm2G>O>D5`5l-tl,=<eciU9Bt5sZF6X'4_7ND
%b0m(@g/NF"l=a75Q5-d/9Pds2o1EY'BdT-XA.^UjZa5OcKl&CTRp3hhJgM9k\rbUaF0V(MZ1sZ%IbD%7/a>'*^Cr'.JjJGCZ(R$8
%KcH2N*qHR#aUPt+M*E5^B'hfhL)3&tSn:'SB%dfB:6):+$E0B4gCn(3#!:I^XeKX'OJI:Ub,1"_Qp!ql_AV\1?+>kd84T,1B=!bh
%$FerWjmmojpQ.!W$MhuVH+_rXhTZTaU<0<X34U@/LXdu/a)Z^H_EW)f;s[@5(VU58XijW]dhc)3M(_Sc1\Q4K3I=WB-.dS6YuXY?
%A,Q3%qpu?s^YSjK6!m?%cqC7n9;^T>VV`78Rnf#`H<,ec7)f[m#%(E\j5BT;Vo/++%QRltJ#Np)'?<b'k=^]q98_n*MW[WikP<&R
%kK$EuJ8q]o]]=?%ja,&?I*)!X/*QIKcgu'5cgqN"M]TE(mI67d]#RE$54eW/G5.]'*kk%=rlmp/^1?]HAFH*efR/E5r"OM!J'737
%%1hQAIXXhgiUa4e?=*R=nRUt5IsB)Ur^"13BC]6=jC>scA,k0(a%!DfBh?ufdt=(A?*hT"ZcApJF0mA$qP6OHZ0?boD!beQ_9TQM
%O9:%,B<[qlj3PujoiK0'T@Mm2b45K948]+r0J=IG76:@0JChh81L]"CcE*P+9*<Gt^t1\kG+*$Bfa<4Gk*fnd=U)^>R&;PMN:Oc%
%eTrJ6S"T"Q7BJOr8c1mub[BWt#0'DOcQS2Vfl[)cfGjGuc^7mI0oDO^AC8Ca<h:'X$auYm$-YPGn7bb+%aXkTB_ik_C;sB<9=+[j
%%.,q;caRSt0H*TBIT;F`f+_,P3'=gGJOj6cpDD\66P6b?/t+LAgiB3m_mj]B,**BAPuH%H7QXN,n7rBGh4m^/Re>fIFO8<H?8<L^
%CH;CM;df$H(8lshVhCA6N7OoDJ[uPsH\Jo,4U:@Pi9h$XmrAEsN&E-feJ!m2oh1PLnkdC"&WZ2(N59P>D,rWle/sa9fSGK28i4J;
%4PH]$73&iJObUcl@EWQ#+:lrDGh^8(oE:nti-%$6-&J!GWDjL&248P/&eZ!(OV%\`:s1I]89C)JP=Da9OGYbo[*KH*4OFJQ8/Ch!
%PBS2to(3';%)H_B+[dPOE4o'WTc7'mDBQrZKO]p^%)cXZ;\)QY?;M3?.Q8!gLe&D>80oJoduc4S@Q;t-BSkoRPc3Z=-R_Yd-;HL6
%<2H??/(uaV(WY2eJM19I8Z>D3Cn7<P88T9al)DsN\)hNc9k^cqRdRK!jbCr3/u21i,A5;>T/q>Wlrc>uG'SM81O_IG71VkmH0["g
%KKc+WNU#fVB$XA?m$=MZ5uH)"lmE0<0D;^gqq6o+m(](hm)9#(idcJt5ef:O?Q@EG%d5"Y*<"K)lohOXECb%o$(l\=3[reYN7U_t
%oFnFCb%Tt)nEH;/l'Lo(^QK*,1Sfnp4OTQYd[*)EQTW^VBqN_a?LgY%aG@RU,CM$5nl"]5gn's5%%>N5e=<YYB+g3e&<A2\pd<EO
%QU3@gq=u[LkiL^J'Gc)1+Q`3M:]CD<hId?d5?E[=1L^jlB$c)NNn2W'1A[b#g4:+>;&J*q(p&Yhk?dY'(K5P573'JKkM]s0r^;\D
%,`D1(MotfAB82U#\hbijR$/!`86DHBF/e"h^97*aJ3Cs6<,lQFE%X=+5Y__A>h!(T`UJ1u!$*.Hd9_Zj&YOaZpb78UcP)Br"nki,
%=!MKuon7lVb^)g:eC3TA$!sb@9,^_O*%Og_W_Xuj:rf*9LQn`S2$t(tC#R3?X&<_EC8jr;$IuN1WQ_Xpl`qcdLNlr2&f'MceZ5[u
%YaURu>#lOKZL3L"XG0*>4NBd.N711l%:#NH.CQN1drJH[XP,;>ldJEU,3uM9i!q7)`2g.DE^r!2WT\N*m\&qCWRH(7=;\MO"g;[E
%.))f3Y*?k9Zckg\(+GS'OVLO4`b=*DXW+$`UU+o5$R8.`B5oVcr)ag3Zm_^)E21G`[tkL,lqlbTN!l15L3t"-I]M*VlsYkW]io:5
%MDgY&JI:Q#7F\j6kT5NW&G%o8Mbb&KfGbR9LqDh:mZ'l6TlTS"HJNU=pDYH^6u&p4]_a#'A"q7_dPC9RM5o0JmuBt&&H,bT^>Es1
%jL#bQh_Y9t?8?4(prj-oC*iYj9Z(uXZ%+WcXO@%J/D]88;g7d>0uj46Q2\RarihZ2cjJHXonX>BA>MLuV&c_e+0<>7W^su&6[!u-
%\R!,f0V*"f35P7h`dgX_!Dg$,4PB](<!S@#"f;s8!Yr0mlL1f/J,AQr]J4o&@6/>N?b2iS)tR-bU=7@A`1M1=lTW)6#j?`@n+A(/
%OWI0)j^lo=M>-tYo4@A43/1!F!uo979rh3[oGjaQ6^X1[0TCiA<U)8T&;XO"#f#5h'$EY07V\'_`@4L:3D=[?LG4^&W2%Ml<9a7R
%KF"ulA)>Ra*c4Iu<Q-,['OI1fr"DnVSR[8oj$$LDXT$m!d.LkG?p3HlI*:YS/Ca]+C=&$MI$XWkd['`1Tm_)9+/ZjZ`sbJY[)6Be
%q^4Q-_s;:YL(Cc'\\-mB/5Z,Ue:T4`Eq"V7<=Y1+8',k.aWQH(:Qs2tA1")frK/kqTec";R@\Y-7)0[G=>rplq.uIU&!nGc&lI<O
%\2F-cAf>+8A'W.Ak0rsXbUedB+bCpDbn/QjULoB)27#J_AprIYIU\F-`0!Clc7G$HBa;pgNX*j'mDKm=0hbe4\g!;kP*/"kW_]JV
%o.4)Ko"6D#pKg+LQ)B>?gmirM3L<HDDGeMC;Ur,cR#`On=k0=b.e?R2WTaPZ\[`-nOA(p?#E_h,'q/2qa]b]IM\A[:HqUZg`73mB
%mAGXVgp/K#.\'LH(A4`i<luj;WY80u%X#mnQmuU:EnjX"+;mt.+D3fV"u'K>n-_H21jrQhd[_#@I`+6/4`]9#;C,L-LfZ4gja%t/
%C$(j>gfC-693:Z.1jFpS<23HOc>,"Xl?pY,C@q1&NBVH_%/i<58H5JnRA\"/4XneC$/Vi6K)!CPahFRK]7%7Hp.i@D48.f%G/0mK
%!Md:43tHB#fVhLG<ijLG:3@FLBmI'3*VW;VV5-6Nmd(\'Go4d4D4`,6jXjml%nFZii>I5gVsQ?iO3\@GH>*5M'*M73q).!3Bn&kW
%X)&u'nt4lnc'G74VG7qG\mWtkRm*4::*j^K@8dQ'@Mm-A"$<dU$L'81LJt)p2C5W-M+pi`Wa\mBS%@5uM=hqfVDL3=Ypk]-F_nei
%k07OgrksuP'+b$T=29(ET4heo6iSF)mHI.?%0ulpD0:9bhtD&>&n0B6p"(5X-R\je)b9jd#Q8K]ngEW"N[O`JY9Sat5Mg<@gi)4\
%^Pt&JoK9mf43hbaPTM"--S^G;q0h;FIGK0sP9/<L_jo0LV.]E@OI2oC\f;b!V415>V)pQ!DE9Y@maP(El-rhH;a]drM5<<&Z$MH6
%1k2L_E\s6IGZ;i5d#p&K.+X!eM$N78S4GW1H<f=%$&$K4_3\'IJ$YQS>B-s3]mH-2J&-G,?UW2#XSHskTRY(`Ij%ZRZLZJ\&EtiP
%HTsYF9R>YS?ELtQoKLgUE]!E2H?Q%1_V6i:/(I2'/^sNYNC\/_((Q[DV&Ote@sTC%p4Pa?&crG,J:3EET>!]Gs0Y<K5;a>Um%L7g
%:[C,X0&'mqi"oDh3SjI!hWjg@cC2=N?2N/p2-psqF1Jm)l<:)8XV72hSsU:M;!XpVXX'ri:6rJ(-iJ1Ym^83-2fd"uWYMVAe5"1O
%5ENH>E>bjM:)XYLN.tKS_@1uLIW.Vr5ql7#)fL2qX2-#\(?$pii0PVZARb,Xc/>/HGE2+RjDGIqk1X,F]M(]*bL2C+*8&M]h7V=`
%?`h%W&G]t79XpN^T?nX2<!pkRaC-@mWQu)AV]WklB]:JhT6YG=k)D"(/8AT2,cPoWlp>.n,(ngURXi?O;gHa>fmL`pUUHbjOb_pd
%+5sps&O/h+4$l.$C^C=^*\:RKo6_CCME6Io$uX>L7OHa>>gMU`X.,4&M4?=jjnR[g$[ZD@;'.mCHa"k^f'pJ+hjXk@+)CP%*,eS"
%ZOb*^Y>-r>dcTKXm@2.a+)gm)UO1ZL\sL7s^:D/PC538qCL_RF8Ms;TZhds]46jrb8U&VqO_?d*aWB+uCGYdPJ@HaH:+G)'KZ"\U
%a5=8gUG#TT2@qKGN!h/ng3gqQ\S8:lD40217CX,p:@Q]=L_alooZDIp]e8uh)Nn*(_?qZm9RZ%qQb>/`!SR1A&UYR*k;D*k&mF;5
%=Y6VrD/&et7DnmQ26]k3?!=[0bBSTOYt06#e/,jQOQ8p<<(I'p(FqS\Y1UQ/$Z".4lf[nt$Cb$0:9U7.T]Yn2PnHh?N\G>#7Gqs`
%[TkHX)nn?BB[U8>l4PG3Ce\75C&THS)Q%/^;q*s7Qqh#QY.X!c\r:Md%d]@;YM@*@?0S6F-njErZ6-_gJ*O<a\;L!u3.7P-Cq?8]
%.B2,I^l#"$m9AG#-95'A0PLShkT[mLUg%Q)e[=I=Bi^L05Y6VGfh1kS@:GSe.?s,P;L_n$E,2`X(,I;"7)VM>EpRDdZlI3!=P)RS
%.ro\Z)5Ua5D"_hpn03!_#TE+4rC1@u9M1;m7Og]#U,I`8$Q0XYVMc@a<nc,uYi.^!%54H12.h):LCJkq`&YK>SNbVHZ>4G!GFFq7
%B9W]u(8Z)@k.i`2S^TD#@b5]sdi>%'FAC:)>38?c,nnWk;oujkX&P*ce!;0=;7"CW,Kj,iT?#,Q5$A!YYu6$H.'psQ=d%1VM!t;M
%2&R?7k7X>?bqWPjBWWjVmD>te*@UWejZ6_[RQ%@*CGY$c[C\>082K.M')I<%=3^EeS3KI%Y*oUZE9(#?,kr.,hZ_q2pjJ_jqVJDr
%TU*u,i`lapaF,.[Kp6Cg+]qF``Y^6MC1@qnOgZDC9-UX:3&_F0,'-*7r$&LSbVX`9<ZdOU"kCpd?reA<e^Vo"S:2>L0*]ZV*=\he
%"6o\ZqU'*s>9s/82Tr"PEJ;Xk0"W.D-%T=Q?P(;d#j%L#UO3ZrFXWVm):!B<%-O'_7+Xmnf.s/&"a)E7\hpX,>"!Pi.^?Wm"EuH8
%]+0L=9aB[j,gskCBu60N=_8Q@V'04=RQ:Lu]nlXPj1ci@ClAI[PSgqR*"51\J#K<MPA@8%lmJ8<P\J$gE]c8HOX^C\b)inL9X(t%
%XK<qCNgE=)@W=3'*0-s>m4+#T!Rn>N^h.V51U;h)V$.`mV1ib<dnhOPH70M9LZnTULS9Z@l7KlEA*bR@G0_+<B"pILm&5h]H8HQ>
%YnBTge1Z,c&Gm#Lp>g8f>6/EdG^Emcq]ipjWtP0)ql>dD\0%7])lESM[rL?p#L37;:6"<$ILs!.0qZ\4^Mum+"&>@\2oi1(:N:FQ
%bO=>:HMdHKX8CLerp\GphU[-5ZP1%?fB>Z<4@_]Pl-VWm-\fT6Vr[>37JEBKNG1FRpRY-<BKBGnSkb,THA_,RSJ'1(Sp.TITpK^`
%CHVi:86I"-a3_6rIe3.An%\ksmes&-msk)s<JSit+/YZ[#CgacQ`jbGqXjLAqhjO&s6'!o\%?"u(>i1En*bG.mMbptaS_Yk[a-os
%K3Ma?rTg*GpA_80rpL3le'@F]H2$e-CYjJtn:1CJrMT>[+EuJs?+n^YgDr2^)kM\opXnFXBp2I&G=>;goCPg>VHLoL/lL@#WW(mi
%H,G9iq0H+r*?YaHcXhksHkHAO"s0slTbmk+mMR[k5qBI%\TUlMU-+R4FG@Or1O0K4YX`u;%1_*?0*B_G_E7+p+0LWI3EV$X"56Sk
%MEQ&kh>$JJ:@LL=:hr1P(&t%=Fn7TD[YFXS]NdZeT(2b=E1Z64\.(TCb2b\kT\5jIiG*So&%M<UGI"7Dd.#S&6KZg'nO)>-n4qP7
%*bm4.a<7ZQ!'VtF[IF\N<b0!-=^)oO%X:!?GuU@P<rmf5V&d9ir;9u8E!5`.)r*,P`<U-?O2GhUVGG@Xg\Bj'&Mn.4kAeGr]'%%g
%gN:S*Xg*hp/]*.qam.lc$m4>F1U!ZKW5C<PENA74-*W6#KY.Wmp`Fd[2',5g."QTJ^cGpFn8c/s>U9s!6B&Ois2OU#LRGsja?sf`
%_f->:W:;t[[r%luP2)7WT!"$n3H"WITu=I-jAg'Nje4Rr)=ao.)e,%sZSJ$*A=WPK%j+"8pAXaRhH%ADh&q>GY5[mJQmFlnJH+1a
%JF?oJnsdI&%0&sOnJB7ZX'uRuI2,mMTIqWgcaND[5A]gYkjbA48:,5-e+`kX]D#Eudug#h/='tcY"bHb?bt/8hbnY^?DQrSi_J@W
%So!jM<+"*N2,G_XC-nY]REGAcPpt]SJ!!E)*6Ns=mDN>lCn0;2jfS(r/hTLb*P&5>O2%W#1#BEuS=Hf*!2L",MEi\rl)a<T\X6%/
%394fUo,%2@TQ9/U?2`c_l:?7%eXba_<0?kufK$$Nj2LAcW.SW?600<8[P")Lhc[^1H10RC$^"a=TQDoD(jC,p&[q(O>B`E![V:U%
%j=gF9eYR5IWZJCUc1Q@#Gu+d(L,-aH7>t5F?/C;sD6qG:J]`\Gdf3(.YhhI*^"uh\fE95k'a<mT(e*Ld>$(8K=#"'/e,/Qe$KEkk
%2&O=]p\e/BN'H*P$PS+rhfi!H0U^bN7lFB?>hum^&WePP*NH*]a83Nf!eiA'fQcA4&$,RKeJ(Ko=T>@(;dS:'a=K#2G[%X@@++>S
%gG'&q/QM\H)H'\nG<8\f]ObZ"GsBKS5u_N%^C^i#%i36=CAq>!(l3mLkaqq*$GM(o@Ct.EW`gga39tE?1]]%V!"/$NmX(BG0V5-;
%cDh$%eU9[2$DYS=fF`Q*X'8h'_>o/7MFYIJWa_=fI>9Ze6d3D*#tutpq[PV$`;&XcSWFIcp\c.0)"/+KKY/qblFu"g!`POB?UUC,
%qS"=$!on^TM^r=hDjc?5;GeVdf9+hAfNV:RRA540*Cm(:/,(c)6rV-b<)-g:9O8<I>o>QMo"Og'EKQk*=JacYL!Q0"+J+MGqNX(i
%N!l`00uh,_6&?$ef(W1'1Gc^5@<6j$JcQRTddktc$_)iZ$d;UbWA:,CM*m5FF`0o!:;V;[<`(>8)LVX8[_/dlka:Q>XE+-(lb3h:
%mWIHebPP,TPXs+KbZm,3qlQ'IHo.o$<0ofRR:ZT4.[B(c/?Ym&,.Bs+PTC)23EaeBs6ur\]?=!Ba:^Jf<i1ZT#,JRjmCu3UP>31[
%pI[mBBZS@96fS^5n%BQ/,S=Ct-2=;E>QILW38N/g.SIU3E0YlOh#M'/nh2]=\^FOE)%aDmU3;;b%O-9@A>Q7eI`+;8N.+'lK\s[s
%9&2kjnD5RUQbr'%)s5JHLfW7iIpoDsPlOYX.8\p8icqDDX?KLnKJo,-fi55ZG`R?YXgs_"a?0L!ZNS'*DI.$#8V>BEDQkG%L*/S]
%IWQE8pG#m[r;V:>0FT?"kL@,Ts!lJ_dU0IR"E%>>X6qtFS0YFDB<buSjNmU%I8hO>>*XdA:a[<2j@<Lcd#RX?Q;-kV#_9b]6Z&@L
%7r:6ir]l+B.!G)(3M%U:F+Qgk$+TtnGYhcZZQ`!#7eFa:+,;Pa;r^s;M8A'@6,Xu4<=qi1M%C^<5M1t'IG*&oLas3c@NXgR!0QeB
%5eR?_J9>+A]dWY6;&]Yr46.j6Af;O1h?N7:T!Fd]Zc$J;9`U7.>0#0J0?TM:YV<W>Uo`/K5.'&oFa/[`]Z^tA)qpg5IV#=Y6BWPn
%m8\Fjn)U8>[W8RoU3?B<Bml:ZfqJ-TR\&rPDOg++17f!'<[8iRF@b71'Mu8M!6tYEC[:?&"B>aO_'TnZ*E`pN_-F>Pn:nOgZiMdq
%/PS/f'[XY>*RYD#%DIcD4>MA-)!?dl),fDW/.MHYba>MCJH-GD6*[V;ZN[GGpDE`9`t7S6')`tYF:[k1Qeb=/Q0)6o>kAT1RWPK4
%7pe`8VLcg`rA].-L\-*+'-15SbD`a:,ppQSVTOIC'ZMMbBOGEYM>2fS"#u#,n+9Y/RVtdKd6!GEOFYfT%`-r.dp_RCq<p(4ITf6i
%!]_W/=XQiZ'E_eZWZ2@*<OS`h5n1p^\KOTLWiQ?EqG`ajOXDBAGI8*%mEi(->rd%;n;A8jr<R!)Z!iG/aVtBhmtbP:&k+ae;*f%G
%g8%rQi10>n)qotm\o,^]F7>Z/49^t>X#S=?*N^.PjVgJU],8E&TLX-T-h&A@Gf?(Gn3*B.ia>XKH6u,E%aW8DiLp\]L<$khnY>T^
%dOXO=TCT*SY<C%o#\&PObbA&4/lsUWp4?/q(R9D2aB`AF0EG0A"8rO?W`'[koSa5fE,W+sl.CbWkmYf]CfKFYXNUnBD+PY1[W,\d
%]GB(PSSjZ?Pg/fA>$22d(faA;[<QU7/5#f)h**/O1\nANM:9N,?=d5m<5+VK^7'AH%*$,ASc6cRSDGoKQLW)W_\\hnHbPHKa7kN\
%TN*r+o6s*AMZ,d4%8XR@^q\;BP!&!@IN&X:>PYJ_PN>aXoQJ#9\n.Z=SY]b'):5U:9uB>boGRF(Ym>4a]qi?,Sf2S[Cnu8rqefXd
%Y7F1O[U5Y!Z@L$c6s9FD9dBVn0+U?Rs.J\(D6$U7FFZ<nK;S+hF<0sgjmV6IMlr+s7VO:hNIoP/7!]omU7%jP:+/`09N9%ia@%S:
%;eJSQRCn:t1^&*2+5k6T4=pj68AD8>>MYdB/^UYMV"LU\)lL0-DUWoIqQRVh<TW1"1\SB$<)^h9;o_eR^epF,eb&c]Q=jggIC!l\
%1[rg=.h+Wh9cYID6*4h0Vp_c-:mEsE&E@8+UeDO3KnV"0!FB?'R!b1.AmF@/5r7MIQ4@L3)NhD+ib-D>+*,]r&\439OO^tl53ct=
%d(P5'RE13N7r?uTWK5$maOd&!)u@U9Dr8:drTa'*gqS8Ys5DGq^RE^rS3/K[po-1^WE&'mit/RB*Nf<]8&*RRh;P!uQ[*-Lb%M\p
%UoXAG@m;dI1-?T30Dqa*UAcK8J2)l<@*.s*^$C.5ScSqW:@]n=bjgc%TL,o*W:/+mG9,GP4"rbd+S7PYeSQY3SIVA=JS</g\(^@.
%LC`E0b$2!^eLj%l]o1U8nEEgHS)o439gSZq%[1gRo'LJ)rEKaU==nj[f1(%d*FBTX0Ds6Hmu30=)($Q!\D3504c\tN4t633*bEd[
%ih^LhZ.4DZT)!g+n7hjQbl-:.H.tH1R(bnrgnW%So/+cUc#FRdm(1$b4nPL`j6OFk4`Dl"qYJM[?U)4#(;fk=<t%P@6,.eUoNhnr
%^j^6IdU@?D0JGeP:gcWm/R?kWc+jJK$strOIm35eLNhUaLA/89Oa0reY58G6'E(9;ib#q?hYQ\eF;0[M.5]_`*Wr+XJ*:NVh-DtZ
%Xug"[b8iSl*=C/9VcEi]&&[!>rq;=cGRAcpo'NouDa&SspDq2QF>k=\)iVW>?\T]q4@tmI%uDNF^X^*UBtHe^kK8+V(!;q!OOF6N
%-^i)mD_M4L*1h[.LW3s&bLOYZhu@$Zq=2egrb9D347guZmk1NadkJN'ftk4EQ)Y*mAX6GAO@`N'_^Lo[#!H?HT`a23i$u52Wd#/d
%F`IK;3dHe(qo&]s9n9J+cE2=*M,J3)!XBFUJ6(d9*9qH++KYfdjX;9t!iIl1*<CS3%*Wie0[R`^/`W@EHftIbTF![cl,'s@5hi=&
%,k"G2f&')A"GCib$j%T2WK(Q9j7QEKL[ftiX);SPc4CH)*te*^o?6h@Cln[:q=2r,]/QA=I<begj.CN[WLt=p#a>\8IC8qoYRTIh
%DYN1lX33G?5!Su9_l),5oW-g*f7s<LrBD9@&<MJemI)FNi^XCj$(h5"-\@PUU"(U.NF+'2c<\s5rbYh*Mij=6Nf0d^_B`tNcMe*X
%!8-6##ZuUW2C>(GA[hIADpC4M8Fe"O)GSk1JSE!0OC8f>%\["hE>1U"J/DIA^lU)(`[MGk4$t\a]f?s"a,83IO*oLSkkQfH4Nl7P
%H7HNKJ$o1*It>6O:uj8(s"m:r>SNeB-Qk=BclAm^+FD'$#Ve[I2aIMq,p`Tsj)H%#Wg^NP&[9IsC]aeMi"EtGl]/po15&,^9L.c-
%@A&\ZHKue?DX.u]!^`9-$$Ji"Vm:;8^edYY%5]M6U^a7u!Z577W\U#[jL;Wic_cV&N-l1t?,#;-:J!)nFHEQ/(_aVGJRKK&RYgs,
%qDQgO6@?4:6C_[U?t1BE>ClPYfHJNj!#'c6!^4QW&Ca]d:!boN+VA[RLiE$&CW?^=0\_Fl(^N[Ya%D-W46n8>bBR:HHAaSr]93@u
%V#d(u:ecAh&&>Cs8;Xm5M;+>Si\HHBeJUrun;Plmc8<i^7:c*C9famt<W-n?n/1+_>rk<B(#f6C!)!_mD`7*7(eZ%-+sNK*BnMKX
%6IQ3kRttYF%D8R'h?Cbd_lmDl.;n3@K\f2sojA)0T<\SO`Yr`P0d).\T(khSI`O\3n#s?i#>d?I[QN2UB0ug0JeQO7=JT%f&"3R_
%l"+[SfUNbL71<"6RK(0g\9])gibE:R4QVYUbT"ara&ug;JDSY@5Df\gc@^*>[NX%C0s2]5d"0l+J<_8\!r<`i9b&]h+>=:5#3ujm
%#aP6!'8-+'2Y.bt(R^4]AlNrChn-qN0a=m5aa[uI@bjMQ^o%?/li+\-:O=HK1>m(GqnGi1QY:Fp2hhOlU=,o$_mb1Y(]4\cb]*%U
%_2Z?B(`^D?7D@U?2_[9,LKT\h,lNM4HMtj=@u+j?Gtc]RLl)9%#Ma;*9R*pQ@.B+_Ur)#R]#<fW9hgGlet]0ob?2u+F7j7%lpYkA
%SQ1]00kPV<:,1da,B^)'2&g:2\\5D-JS<=r+ED$5;h3dX`(>3R&42(C=btkbY"^OulY<^2U#tDu.Y4O"cp'(5@.5@L6ldmr(_K&G
%9*25\"U34B_C;[lZ(;^Fc63Wf\EYb?&@t`NXYeb[OAYbb'?S6k#76Vd(,b6;kY8HB:;hHXa(TC^MMfR')I,/(r!t>lHO)`#+XY33
%<h]qpM.J2-'K#qI+o?kW4qdlnN_i5EN8_a+;&\4AnEH?#%EMR4!dKt]csfte(*L68O;dKXTB"h6dJ;oQ%ZNFLT>sa14f*`d>j$6a
%"(`'C@[OiN?p,_\A=>9E"%nI!+QS@"k>bJS[P4`W3kPEU^EM-Ua57H0&;\l7h:9XB]?c\o?'@/i(:k_M#sLB)*@P(o,gH"G8g3^^
%eupIdLRX96[SRR=ipg>%,0uR.KEBQVG7:V]7OBgPX<YML#;j9Tg*5K#<FjC@gK$$ZOIQE0ZeI6t%.)Y&;9kS@,5?U6HRYYA>=XT[
%grEQcG=(9$&i`^GR(u^imuJDmc\Ds=\-[P963>7OFpoXkPQj94+o/`W:G_"d*#t@LpclD%=+oVm&.T@rFr#:"I9BQrE:3%`aJADo
%%MhI]&[#_%#MM]#mi0:4@See[:[,Y<`#/_KR',,/h<&5ZZ!Gc83sMT#eO\>dQ:N$<&O#UE3o\"0M[oCd-neD0P5.inV5"R(Gb('h
%c(8SplirXGf/(FR%Uu4gYH7\tH[P?4ZH"mfHZOeI-Za@g\!Lc\4s(qU.rm"Z%;J>ZGjV$rD&=Wr!gt3PE/:o?M?-@Q@C9P;:YRS<
%XZAA/o5<E73uIQaZLN@*OUlS#[V*fbKYAF?O:<st&t'VInYnAKT2IHdQN83[E[6[QVo4nb%:Tpf':?F[W=SXRh4eoW`.Z^L$l[Fe
%N(Eo&L=n5,ll(&N?]UHf7Z8G8=<a6+^-nq57-BXFGg9=.\][.s:*H&!62/kId[o/r/83+Jb=\e8Z;-R1Wba.#g4p/NX2;Y)@ZVV\
%M.ID\V+f0OU-+_M0a[1nRJ(gcU<Wb(X/lP(cPSVheDaBb"BXkF&Wo]i/:Nn].oEQai4[4BlBj&27-8@O;a0^GX6dcj+B.fCVJ^r6
%'r3f,7!>r#J74c=.Eu[:o1oqrV2in(4aDa=/fU(;Ft:p"Zl`:U0#am<@:P*]s&,R76J-7qE<hB#V.%u:AF>Ol_]hJ(%6VW&q&Icl
%<-Q@de.uIi0d,_\59sqcoh6.]c")fqbQ1S;.7Osg@6Ta@efD)<E/"g([b_9NO<)7Ed>/C&83t38A__1AYW>'+:HX5#>(uW77YEJ:
%\"Wmk0@)9_n'*aShU`2squQSlRobDL=TBtu*N"Sb_M5&*$c#0<5h,k^2X!3c:_h]9,!2GIE!nEg&%GfZ,%WW:XeQUo]AY5YQm@F(
%L9&+N+MhU(<T"m*(`$YaN@M'R98j$TPt;:"(^mFeQP!Xl/F[+fm1?^25lKOO@A?iGI)B(U#6YiD(^hTNN!NY<3li?`n23IUbT)rD
%$AFn2.3l^Hjo?A<&@P=6o(iO,!gr="*Q#[(-(L51@0<;9L9O'J&.BP-Cko9GCaSL,&b+%'?EOhT]HPu)-,MuH*0IZ>@ACQ?iG3Pn
%s&bE7#U+-.NVH\.-K[)C.s),]iW<I3Y+6O%26*\(d'^`b.;"F>i)V(Cd\//s?S3]p=3sl=8kX9.j()';Tkafu\^1pq/$M9TrW6G:
%WWY(1n.i#oai+Ft<c)reDMbQZ0lfP3Wo('ffjS]FC&MeU`)mia8XCI;_HK#@6&2^f%W(;'lS,c!*>fLrN!7Z?fq1?bXhC$gSJ3*a
%_Rbi,U;L(M6*t44M1TZS0lr&SM9?#Q;76aalVKLI(H.dXLA9X-B>Hp%OMZ-"$Z/V\,L.XbfQi7Y?oF$uT,l2m-'8XN_9O"k&nfZe
%>\1_(\rrG0+?3RETttGoZcNJ1l>X1\O]XR]c;l(=N*,"SMJ>]GE4/Shb(-f)*.XbI24T@U+GOQ7_qA"UIO68lE#&oE9]\@+"g`5#
%@=bb-K)cYq3"%VN(X!G(!?@R35WB/C75jQDB>H/2XBFP!R`,EbiG=r3;KWWXhe](M)J?*gRFsaNi@K6ALrsj"S(e;ic=X"^./U[9
%Cn<?sF[4Ug_$V#Vd%N"4.U9YWffILb3Eq9EorW?[dfO+6'u.]?%-8)]LpQ"\EF^pSS1Ra"$Z:g-F\JA9WXWV49M++Dc@WO+\@fc5
%lmW!Y^tDuUN7I]XZT0Vb'o!=f670cR#S'Nq'OC%Jb?BY&:s>.GYSEJW=hDK#ZB-4I><sU(m/gL#AR\nPCVf5o-*i,*]!qpL6BqYb
%O9l'cQH75,qr_XXHt:cK21BXEib+,=g`R0WmmlJb"_!B4.KWq*jQN."ANR/K:Yd?tQPNe'h*3;^&Tpg>mH3(u+UV\9OKu_g6_P)J
%ECp:iq^N98h+sNu3sLTaO>-8''h8q]A?rbE3hSk^Gjr8,ZjhpDh(HLkXY#Rh/#5sL;epWbGqK^YYkVHY[O'.]PSj)[MAk7#Dj1RF
%_A-b2a>:/l69]Bq(/cLq^mQcN)."66M-r.,;V299=G*=`NcbbLA<L<&l@A.p>_DKi6.u."_#$NG0Y5=7F"E=\K"^O?>rh322McGZ
%`LM,b(BKX;L8[Y$cZ$VeUPDA^d]4&\K,o6T,R%=!""?nKW2("Aar2i0U;[+HX=3TR=?hrHq^Ja5[^#%c@)4-gV?h+1bb$IVnB6T+
%#Xnc\OS.pOX/PD#QhngL?jQY(F@&of(>Y#-O5$0$+t!a\1Wukc0T.S0OB;J(Ze@!i@qj+QdQ5!H,0P+e[>-E=g^<%;BA>[S5mO@5
%*uJL)eN`rWa/[&uIR+C3F8c't3,2j$"h0,cGa6/[D#u,krq(Vl>7jp@[UL`?Ku7g=:di75,9)$")!!.`Qq/577m"!'pQ3"<Xhciu
%3ZQ]dZYa4tP5>G-N.gQedicm#r2meZZ8An#i>7.*W,828(VkM1f,PQ'Q@5V14fXcPq'mr-GALr!Iu!MRRll-+<$5T%]RF*B*1Gf,
%EX]%Z/AeFGmCRtmZ:-RUj%e*1!)aA%'m0iqKau\2VEsXia^T@FcgmpIn)n-dOZr&0o7jOsB6eGcmKh:d[\Th'(p#a]d'Vr/ptZ!1
%3"g'9\Xr0:OOH2>SWQ@P3*jP/<DFm?eC,e/J&?CPE<s8t_%t7Cc7=%s:(DeY-gruV*`^1HBh'q!4YV+-[iQ6big;DV,3'#]AU[C?
%*4W_?d5-*Y0Kk?sO=O5*^d.OH8R"PW1?UN&aC@XN"GSC.<Mk=a_4aE6/1@8I'8d!eTh*j!R&TCXTsf\*38r3q*sq-^)/oEBMR=0.
%i)Q*dQQ?i1&lUdtq:%;n9Ga)H%4MrumfT,M%)#IrJD,V0c`rgm`H65%d>iq_$D9:S>DTg9-cN/VVZq5_Ca<jb61tBaa$PlrM>W,=
%JiBg=XTY;i>2bEpD1f2e*5i^ETgrr-g#ac/VNNP7F9\![8:u#<f+!>3$T_glDVD1Se/T5TR.j*O^]O>NTZE\akfnuS1TlGVj@6#T
%)Hl$2.S"O*?qVtJ*O.RVd,p#"%>piG["NNEi'>g=#ZsO783dT/VR@UuUP.pJAk\^=C?2P8^b0J]9094elP?MC/`.'Rm6DI1+F78H
%qGLNFd1VIE7PnE%?sK1R=:<;S$BZYLSPj)I'o;s21FdtV!u=X+lQ2)]19>+u,_WTce0Jmab$?UQ,)*gJ`pNkdE[1As9&79]fG<NN
%dNG?D<uCF(pN7S]!=M&5>KAgbCEm/h!Jm2S%"YBBjN*Wi_WT]:B;-3^CN'QX/i.ESc&RT(SNplra>p**Fc`cq[S/EqE>lKd=>h&#
%SMRIqb[CkrH&^N><:^3SKVlSAA&"%*"Pj29f5-cZeu#Os[obc_lMBXn!E78EojYkA,'o':B+cZW.h&:t$,+Bb+o]Q75p4\bl4eN$
%WipfuOgk`U'4B7fD5EOD06Hh16.R]sj[kdn`'@'VUC'A?+G/$O1psH(0'#!FEf3@Q=Y"Z:9F#=A12"#uEVtr!+6LBQ:Om[Fn,.2I
%3dR<h0Go@;qkKJR_;,Gci0"h).I<'ZZ6[?p*?Gmp%d&KA`L\+7(teCL(/Qt3&e[f7;sZf;7:a3DVa!'A_b;At8E;0GZIdKVTj-*k
%1QTXeiWLA/B7PF>p+6#gQ<JeF7E,G-g6G#qPb>/%RIaR]8/HGB@.\0@FX!W[$a%MOeME<Q@j?-U`CS]uAMAi034bt1BV(0\d$acn
%rLsEikh5`TKZ$Xbg*Ud3K8\aff2B[3d6sEDaCdKG+OOal!HJ`*;-9j)AsQ[@<cES4c]3eIB@6<<]T<[A/8pXgfTm!3Ml+SP\'"=k
%'e3/@=*.E9G)U9(<`/%ZT-Jf@o,;?GZ&pi+"U>P!aEEp0\R0T?Pj3_1=9jl'Vnor*;fWI0prIT1,p'#H$lKth7#$MW"+"##T-bPp
%U-)9iD[7.1BSQ.#Qm(EM:^FI:5V(?-"RGUa`!+PcL?"(Q.G4\p)DZgbbqib\7Y'Fu_KhjA;R.9`J>9!MOi0C.*pVF<?!%Q)O/X^(
%N5uCRN!;NpH9@Jp.l%<pIRpD[JITM!gC7j08q>EU)&<\_"'ZA`XcrYf5].'_ZqcQ)+E/52?TTsg--&_i&a+NG"\"lGQnqI?-%Agq
%r)lA<J6H&]F=\C_-9PF'm1skK&a%b9!3'(:a1#I:TPf%'AT"fn'!Ru3JEY)6\-!=LTdh;9nY4kfYkaIp_F#>)+W)P!"r(_R/FZ$+
%La)B:=jS#n7V'E;-8L8EjFQ4p&>!+dL<uF*/IUa/!FE@9]qX,<dKV[BAH6=uZCnW@8YbD2"&:q0Eef\7ih>/2I[,.U%EMj;K%2Hi
%k$_4=V.hF=%2S6c-3/]pYU@Lo".=!mm_a]S:1O06P^Xe>.rl3Y9\U7R--m3Bh9`4I(6I<Fbh,0#7qSof+Ye])6I@-tgFO&eQORQ;
%Q>SWhgGr2]#_Go[!asii+`kSuT8S)#7FpPU81Vn8jrg76)8](UDr>8j*).4>%OGg&&;$>T;D9M&RiS"'ga/@U\76)Xc[[d&iQ"g/
%+PE^4YdUZu^+<ojUVWheO8!H)_jAb%kQc;>4D-8pLB.f5;9tNI36OB=ZgY:'3=6abX'hZp[WP_Em?:Z"=(h[aL+kG_cj@*;Pa$fi
%)L4>c^kQQ"0d&GA<m;88W[q0:J/+G2ZD+'?aHnXmQ95r@e#od7f)gtdg6"7@[Vbn&p'$c<ir1-HOc\>K!P>]^"LBo6d79iWA![`\
%/?^_8,q-Tua>DU0"$Yo[3O0mIq>JBV_=>CIY`3FN0.k<(S"'LG.[-j>nF=P3R#0rYEe7SY*?<6<ON08b0/?j1ITQi]5R_]G`tpqO
%"lj5=W`!ljV7K%2SG#9<a?2GCs"H_^!APMkdq%a"c0g'WZm1I+jJG2)HmkOoSbgQ5L37VI1J\/Z%T0k\4+RAS84:2Lme_J0Ns"X_
%YJ?kB5GtAR;oK&qD@#1+m3IbOc-DH.GO\[0m2r4tINiDb>?nD>HgqM^JRn8ae[J0&kPHZ'NWquWFV>Jl_*\MF?Nhu:Ee$jX<A'IH
%Ee!jo2oi\dp\@!GMM,Bf2.39E9hBD:qk`?u'ZoVh.N28-=L):_d.!T1,@C(h^/$bta'Q%-5')DPK.<AKMOGEb^ad8,,Z&)$`q0uq
%CYj;m6\F1\qc/],WU0fP':DO$9YMh=bh0^3M#t25Iq6+0"k`27I,B"<(>e2d5)f(?W?e/(ghi,BDYYl.gIQOt]t*Ph.ES<hON.N,
%LhRe07_hSnE>r\b.BD`OKe[f+;fMJtg=tq-DS#tor*VXs5D!*D34%<*\PT79PBgKMbg$>'(S2s-E$e"H]`<=\&N%n2*J.m[8C;en
%p)&eN'o-E73*F1@"W@^sZ;@bLO]E)3mgoSbdgA$gK3:"!\)/lbX0S%EcB:Kp6$(_#i,.CgCBt.*#f&\t#X/bB@=_teGer?r:nE30
%cY/'-Fs?>iZ8K_`CbgXH.RdZDJ*#$JeA#=0Y!;bB+K?*r1\i?!Qq4hs9oLGor2J)i@N3A'3!=Cj_GDK*EYX^%@=A1b1MX@+RE]45
%RqG=4Usbhs/8g:b8N_#.RQ8kk_FbriZuBQSF6`L$0Hs'J/ordn$Tarr*I>HO(&^WBRjm"YiD:ULB_46:7^C`@6DNK%`tn):Hp4M4
%%T77dF"9Pm&4ZN.OeclVb0Oi1bXIEbRG;pj2PBE"3^SS1p(lSbVqN,QHnA7D,-tRl[euSodUo6\$fi[j#Tbn,Yg-"+\5k.K=LlIE
%3#2<:!;/sKGfNhcB@]a7n>jLO9!rc&^bV)+H;HRg-ZL=I#LlC')FV#s#mC2u'%\??C'DI``O!F$=+JZ*%HB1q&JOVnclAen)jSM>
%6cb71@[umMc"a^#0ac?$*OuYg[_W&3M]2'9e_S's%#g+\SXHl\^pob2WFEu"LB0V5#JY%i"qJo/k0.]p_1C.j>1lUi3.rrS\@%0I
%gDIPZh4+:LCRPbdak#IR(OEhf2=?_<=F1UJ,=Z(sY82:Q+.l1T9;@_IV3[Xo1k]Qu"KN8XG&MsdQRm$N/T;N-fm7H[DLEAPpp;=P
%ai!+DSdn\&oR$WiSLd:.i3&<cW#TELe1DH$Wk9J^"H'U:=FhLIn-pDJLhtX1G!a[p-Rg;%SM4Eg`Dn?%B-q9<>dV_0TiA^,BXFm(
%2g.GY@XtfKEa5u2(Ht\/Ju,R+&a1WdJi[RQbpu45[@]GtE\9XOf2^J_R(ZlfBrVCCP%8gE0laCJ*K,!$RW&=m3T(ICXt@k!0q:-I
%FiFV./qS2,B59R_!F;u$$.abE&1^.>#A@F6Yb_.6YRX2lW5Jg],@KH!BaNqo:]SetEFfqK%$=mceb;t98-g5eM0@G#;tsRSRL!E1
%C81cC'oER/Y3fIBD2u+oel?BK6r`D9^feS;@E#mEC_fD1(e-c;8:^7;9KE!YD(kDA1,)Xp[:'\"Q.K^-]+nF_)ZnC/gs4p:WSE,2
%aVF$P,ccQc`1[DL`k^Pbh8Y-eB@a8:V0cOA=_jgaZ\/CRd:ASS<.V@a$CO]N_m2]Y9]$U04X<lqHYpQI!'O<%lGO+ZJ!JK_FMeMh
%$'lKB$e%h:o@e`NdPqP5*gal\h8=,Q5p=B^JHoN0Bh"U!j?k$D#"aU70X1`R=?D$:_r3RD.Y6=B)mD:/8Se4CE-7pe>L+VM]%tH8
%+dY:B=*B_cU+HM4jKtQb4g:D[0B"`NSai/fePRTqimg<-HE^:.Y9g,.Rb1(`d*Ec7[+6`jkbp6j\^U_\"$dund/(1BKr2j+3ag9$
%9TlW_No.X'k#n]t$"rOR4W!G"NT5TMSOD@q2qG7b/QA$`'Q@YZ$_@aI5nQF(GD=cpkJG<^gKs*RIbVD-4Qp50,.*o]i4B.0ljpFa
%#rE@S&>JNQ[YfI<$=d_2N+RpL_*^OW^6&-H!U(f([Kk+fO'8a&N?Z+YLPPH5=5sDlPlq,,&,IEeP=5\sN_^XiTYrWAO]&>I\CJ&G
%'Q6#*C5Cq&7kdTK9fL^-W`Jh#eUYOGoO+5lenI(H9a^)b^ebW(ENL-TlW1Co)$BTeP34u.+oAmtC*8i\'3RIfnRTh%6$6TCK'?kU
%Ze=KFS2&)3E&'L;@ur4\ea(qJFhiIG#-c<Rf4g_Z$o*i%N\^l,V<G1%`o*VZX0`c1JGkF<#l(,fGb))cQo?8&Mj;c"CLL1Kb.+l#
%%[gBtVlZWtOK`;mP(:mgi;TS6-&mI,h2q3%/O[VddKnt"J3B1`^l9O)7b(`ZZniFX3dO))4)gt:OC,oe!#kNb\q@u(-p9!B53GAh
%[Yg&o%)>?p5j_1@?Q4;/k:C]pC]HA2#KZ#oJhpl)jrh*k,O"sj!#FFMi@1!Ef=6(fr6Y\gLH2"AK"e@Ld.:"m!7Q^1b8cpcV2oJ+
%MHh2JR/ts9Sdq:f'N`JPG*Ac.L9hD2(Zl+YL"t5GKdP&UY&:nB`4#8`JT(UI9F3/>7AO[\4s>0+ir93S'u4m4UK#ubga<%2^sYA!
%cmDb&I]-Jlhr8Nl@er>]HQ%fC""*B2H%l@dal(qM"X"$%ocr[OD6P7L^C,Rd*9dkS:t6tb/HEiE`*m6Y(nthp?@riGla>mcMApYB
%N+_[o,/ooL^dJC=L,0-f2dKPF(P"NWZZ"%/Tfq!#^^e7P0^f54Q'"H.%?;R`[+JjpcS8_h_Z8c1Lph@<QIbZN?(N<oA8L!74Ja&C
%:q$^\o3=c^!PXLBk;MUj0L4<Y"f30S9GO7&.>t4uZQDJ'CI^)-AXikbY"HN5[He*Hns)Xuj;6'm=B?I=k^abT8PfCC44-ZV/L@U'
%WlDi#@)qV[YVO4OAbu=<m_Z4E[ks)\QY&DqTkitmRR>E>EMAi$FUZ%B"tCVbRoZ>@&_>3VgN8uWhh+pn_0>]S#,.r%5S]?!*sPpR
%5mm.>q3QtD,>c@c*^'0F,e])Z#;@UceVT&@<'>,L77mD*E_&$\Z_O#'8A@Gcmos)R=6M]05h)2gR*"LlIK1:Fb?F&\Es,0igguXs
%e><SN=CeT-Le1jjbFokQ=WbeRM5Z;P`@FQ;,3La]-ON=(E2$\>&S=TDgsaDglau4G$m2:L$Q;p^;_=GJU#`siPUi`a,qZ?<WB(jc
%M^Tr.^qhmCqa1EX5gJ4\&7@ohH,NiXpquMunI8rfEtf;Bb[pGVjUi+Aac\!=PlB6b9/1@@3QK'$&/p`IpIZsqA$pRQS<u+P@&3."
%WO1G83$bXJTZ7D8VO>r)+YjfT'XDA$$#;8W1<"9?nf"5b?Vm:K9O-*DCW-K,(DOjf$W5a8(@[3/Z&fR:ibO&NNf<%&Z3SPD9$+mn
%F+nW-EYqL0C7J,JQP)HtX)DPMT\M_PTU?-o]u!/_6\jtmZr59bL(%:/!gV3R%NoW<.U++5bn`m*kZ5Y,4a*K-.j-0&O'0%<VfM_R
%89D*\PB.U6!4jRj%a7YCk969Z%_9CuL0'bFP>(,`+1%+)D(Og>!S(*.$f\XJ[iE@?Kr(?h=J\Eo;?D_gV[=#"[Mb/TrZ[%"!U-8J
%nfdN90$*9F5S>4*:-&Y[OWN)(ceF$]6K(AOI,e9F<6iL0N5Df>L/o#ufM^+qNe:9o$9K-e5`e#3JPSVjF>TFS^pD+'+Qj$gbU.L'
%7TMs[e[Tou$\osWA!jf+S($(O[M$)$U,kcJ',n)0!)#G^7?IAaL<M0"=qWD?"Vm]G0r#=^:V[H*oM%XoA@b%cn_tZ`Oht]qOu$Q.
%Y"6Ef+Na6YB#4qLidCaJXJNkdgu&WC<(fiB3]<+p>-&X;8<?)&LF]bY90pgL4ekP6Og-Wu"<3\JB,dTG+ID?])+DE"kp?ju,!foj
%Y/I5s,!d)dhYA1e8DmT^B;%)<"=0DC(hFBf8n50DeM2paFB\WJbU=)>W"b-+MumULZ*%^R!&c9`g..*R3j?&*'ECK<A7QB.=BRI,
%8[&K%'aURb$/dAJSl*:6TjZ;)$C]O+%?)JsM$Q_ll59bU0tt/1'EI4T.V0<E!uua>1Q!Fa2a*oYbjm!RW07@`=a%V0;OT%=VIL;H
%$;dTN6#FOg;R1<c;pQil>a0CdUIYqa&G!mjC58VBN/XK'@%F[A)H[;D`4T<>!nE?h=YbjPe$]+h-tX^2]42P];<*/P-n;_P3Vn[P
%74MH]=^r-\PEhtdN$8ui>cBFbLl[i84-WSB&C4`')$S4a9#<`d!2.hG<(;F(jiY^o!6c=CNDT\;[p`b\OHnk9>$T)r;Gf0OUH6BC
%WHp_&J2mm'OF'Ft?qr]M(^83d*7#mh@^]7*FMT@*be]!m;9Vd3[P8+S"33L#0abi9@UP0m&8I%9aG^2IO=>"l-k[GJ>TO_NP1Y\a
%;5?>?7d([X_Wk)&Rn+Cp)5N:q<3]_K"$ZD@:l%]*g;(OjB$_-/(X@%Dpn\4:-[4<nhsp5(#@^@&-QH^Q01Q,eR9@4G)p2G;a.hK*
%-3`Xm29TDJ#j*!Jr92s[O/GbW=Rrc>X"cR@#@>.<+;d1CN^gieG5t50/;<_djFDA\hp)^+;N)ag_--u+'#=tjD'Q'[7GC:S:3XB0
%+HJcK=FfjA@*'P[?=p0/jZ"pu;SVTD]!hPgBWnJ9H*]YDpKYRD(,6^Y(6F:IYQ-c8]0L5ld_\a0cWZDhPO!`E0kW@CG&=Q(+1khu
%O@LE6/AV!1YT.')]rY43mKUZrlF210CHKaloX^W_2qp.."bWL6'GjO4Y]9m<1''*(P(s38(g(^o@dsKSSD%7QYnqMqp-;p]%Ij;t
%XGG]I9Xd8OY\q)F+47K5TA0%MR[Q1i1WE?r=g#82400F<]M--2,]H'd'S%cu5Sq1U<d!JFD5/@#otC&a?2P0$r;s'Vh7lXm5X2Jj
%]C[2m[;DPjot$T\2qp-sX:0Kb3)r%iH(6>so0Cg>V2N<\jD7C@iAd,*@!V`he`60Ze\5Zlg5_EiADp"nG9_?W+dB@-RV7JlQHhEl
%Nd;Z"??oFJ.mDT:Z-I,s=&Zl@7SqLgPt=+ZJKUt=3LQlP-_$q7&NaF!4+YWhN7]<[TEkl0CF(J+aM8oF"0"[D!%gTtms+n<mS:Q\
%4(q9.Ch[)#XRTn#H4VX(<ihH9gB[CTNI@&"<R)hA36Y&%D?0m\Q9O/UQ>>eU,7uQlWj6[E4-uWUTGVVM(#U(dnep\blLAS[!4:`j
%`(uY`Ohd75(@"G0(gb\n?3:b::e!.*gs7OdbS>89H%nc=/)u>T&MQI)E/oJ0bmm^#COA2GAbZ^nQ/h(JZ'K`WR.*`0Cc^JnhH7%(
%IrS[?p,M\[/RbnGYR)j2aiaD3<X\#o]\uV^G$YDq,Yq5A%;aSj%iGeEA:^##H)Qtc+@(&N"EeKOgR6LF1:ag*Y+QHicg(kJ:#ImT
%T\H`&P.R$qD@tToA+8:Um-/ltl2m#5a"d(W;#MkEmc$*dD:X5O96$Ya>-m:caJgZlcq/=P#FuTl\kZmtnA0EVL<]Kq90m10;,RdJ
%[]C7o1kD3"REl.=\f$o"^"Fa16`:c6^kVEmW!]_uo$,-E6&"ITdVq6-eW,35ep5d/1UX;ZkttKK^dt>%3,2_/;/fK,'7hLpH.j6"
%,=(P0;SB!5Xjo3Q\mE2U=85e_gdF,<_[,SHC.thP1DYZ&7A^ao,#U09_P3VDg7Xg>6Y]@.:UP`;<K9]@_lMEqL<#<X)4(-R@"1SD
%g9"oe/Y--<>+jB+DEpPn':B[<K,#REI[Pj/(Q/$^@Boc#JE$(h7?5'C[V.&<'0G>)RMlEt5t%-IqE0Po0U,t8oa_X4c7`RJM8<aH
%Nscf)P#8:p=N-iuf5OuHIUNJcj[*D>h'=gpFn9#=AF:,(FC;'&2kUp.,Qd/UP-6nCk0!(Bh$Cft'B<Q/8OR!cE?e^Jb!DZh.WokB
%D<EI&%@#_=>s$*;#GSIuSo8"nbDJlcj.J0?f0ao<k9rUg3V&:5?/$K5M4n"BJK>SZS<;6NI<.KZO)<XES&.F54(Jd=36IYbOC1TV
%Z.kjA%OB.^CPTa83hd+8"DIT^:.EN6$^7L(kJ`ah5V>n`5b/]Hf_'*T,-'a%Be<^G-<I(6D`4S/(IW41@V<k5lN.<UL9.Nj[.lYr
%"SZOjn::Zl#b(cSjs[Ds!7pld[?1&W!:OaEQ(Z!p:cTC9=`"OFdD.%J#'VF&3)37S6)(.Gd[$MF!%aoAmDpZ+"t.N,2'Q0YoM2*3
%I[u'i$*l5C#h[P6hlU40!).;nA/tj,J44[dA\p?S=Fg9g*)J:M0R%QHh=kD]!1^$%.0SR&,"ll#'NjQ%S#'d,RjeJ%:jeep(pG-H
%ZL7R.@d8#7J((It?_mIpB.EmpV>)E9r3o>;J.8B5M".j@2a<Dk+DojC2S`[94#k.0=./e[dt?c/#c.)#dt9U^71V+(QcfsR"0eM6
%dr$'`Z$j<R*[!4p,Oa%Ri)g;a!d&22%G;esS.nSqN>KoXVI]?(KOWWNFI%[n)g#M5J,sUtdUma>1EN*c2AdI]J80="F',eLErsFI
%-MnMh:E!N+*oLh1&A+APn7Y-5_odAH,6JaZLTrG#*\b%G9CNh>"N\VAdmH]:>>PLF9G%Z_1ED!.LJ,em62=Me]RD>;Wh1@9i+/;<
%U:L:eQh3brK4/+r/BP$NO$GQd0\A4=AaUd@]p3jXir]CM`eU^61GkIGasdlc+c(`-ed#&aOV,?;Mh2rHkR10["%!Q5DWd/i(^b<T
%-TDS5nIun\A(Ad?"?,R5=geM"6^.l5W;AA4YsDm,dF.l!8T,V-/On@%\,[#>cu6PKMK(JWOg@p,qB..knkn?D19rU\=W\o+TC%hU
%;P:@/pkZ!`(^TApq*DfJ8mSWn#L)bLOj<PhI+CV?586$/77UM^RNI^fj\'F`#Kqi+TM]X98a?8B8@_hV@M$ipEZE+f)Zs<(W;8g+
%Y@)iDW$if]4Vg4\$;D@0S?`8ZU9S,BFTu?JfISa9m8^1',#C+%/r&/hQ%5<s=$4nt7'NP"_7:(RF:9<<<5h8M'ip4bbHSKY1Xc4&
%N3Bp-0\a>F9`:F4Zo9UqA#-al$r#=d=;GL/k"O=G+s'>f>YXhuT]sU/2(0O._/iFbYuB1Q'\a+\U]qMP#bL`F[e2,Mc]j#J5disf
%;OlCPnSeU,!!]ckl,;@#!M:AD;NW5.Z3,G&IZ9Ypd]_Z?"N/[]@$HWF$TPB0ks5@>"`qg,:^q4MkF@_[6Iq$&U6Q""Y\jGI;F(,q
%_K#:@Ac=@gWB1kDOpPtB:-.Unb#)tO4,-ij+9pSO#@MYN'e*p+b?9$slXgNTeH4g).o:>N!8k"i_5VC%gF,X7BZ0CP"iO<XdXcp3
%<NR?-\(_.)'#BI!+4,PJ'CTIDfacJJ:`rYeJK`3L3BkM8FJ6K(!&j<M$@h%aE71_'=cTV"5b/_6''e3u$@&=CEHEdWJPoN;dC&7^
%$]96oRXJcuM#VKG8DLY*Ck+Sta>l)]dg[a;du`"I7Xdlq8rfs?2uo7ASRm7<BP9:89t!($(mDCf0cOLj?JmDFbU1t>(%ZJi_;b`j
%0Q.nPd^DGS"3d<P(j$&]K-U$*E"hgVCdN/)n\QW;[V\>cTBgjLBhYgB*6HkC8r69Y#JnFi8k5sK?-c<Q#5*_@DB.Eh7;U%B<190Q
%bm+HV>bT7J5#[_XHiL*Zn5'P$o>NbQqKf>^EXSPVdsL0OhA9G8;7ZB="&a=aAsGg0i/K'P"hojO7o)G#,;@KCp=t5_UnP!*hLdOs
%Q[ij93t,rC-P%/toA?l2k^$%>kV'Y#VqBOckkDElNL^Y((Q+UEJDg?_Ta>C=K(AR3^T\=;J<:Wd).=hsU]WsqKpOj+ICOtGiOocH
%YZBpP/1Fk/1B`*hH$k$ZLfaj(hTg4.!qkM!Hm5X4,?(&?[gupSJm;TgMi3MF1Jj0K*C\G)d$R9dCO';^RR,hu%\Uf2['kD$O-;5)
%':f+le*/*6S4!GN0h86.p!H@*7X*dl3dYmVHL,+4?j(#;*9*`Vh2%om2?J@\"1ngjrIhWJ(jrdoa/l1;Y+rpiElQBrYtkAo_.U&5
%Z>C83CeJ0`[;""C@O1(Z:+jVdqB-@<otqOjQ2QuCGhC2I#@p6H;-D(u*I&a<Sl)*H"h++nLV^-a7^Ms2,L3_T:OQ>qHYKNZ5ISC\
%ZI-qG!Uu`aICWCc,oAc48:.KRjIRLu[5h>`qps7Vc,JB@&+\)Ymmi&*Y5;NR8m9kb&;hBNOFFdWCkJ?&'X`^,@r&V,c7!Hr!+Uq?
%4:8X_J/r2=TL+;3=Ge3B'bn]^(n6)`A^*I.a<4OCE=7@Y!0OeZ\HAh<_-j7/`@&BBA32^keHe9<):EOYapbT'RX/7D3"n)"=A/td
%g!KfNRRl@@Ys%R9&\+2hTSrk&@q495UDfWH/\ec-ak;P?E,6I\=>9RPf_??.=%`GHo#l-^/88WX?[E>V#-\@e\YXd7;5Y?u0,+k'
%&YO0.R@C.?[5RS(Q@U-u/k*:E[:q[1YOlsRRUDL?agi'/PNLM>ib%J]HofZ^JNGSECVc0&iO,m>m[.!El.TT,2l">4K<?C%3t:1p
%[hY>[heh-qoFJ`T(#$q@Ej3gpDQ3rm^RKKa6qQX/YubUZ.hpEr+$_JS+)boB!*"rXK?cV,8Z,9WK3Eie@2W%UX?&tOrad]je*Di2
%amDH-f0m$'7EMO:W>CI2G`[F9<5p5['749Tf$K]+1H+%h%l2IuLq!n3U<rbKNeg#;G5AECpG,N"l@[ao%l-pE!*PaL2OJu_24)"C
%Jf8l)%:+bl5J.]k^ZbSa)RdSXfU:N,bm)?&3/7^4@YYh*5e,&:kO":6fV2OX'ti53*ZWUPIc(nj3+R2-jYR(0*!s/:El(AC!?TRK
%<>'-2icmYo+mKBZ&=k$`XeDf(e.pnm\FqIfR#)Jqi4r(5OTJPnD9,m0V_Y;,o=5N"I-CM#1kb;f0r(77!a]Q>kMBcF33%ahbWN4E
%#gg$t&\io6Vn5JP?i^i]DZf%R=^E?Z^9Q?B_8$2Ai2amnj=I&r?E>LMbsBP</)V#Jb'bY+MRO+/C1s+[pSoe7*K,R2*\G@0P9h2a
%!2eG>1hH6hj^qE[Gs7_Y"cgl7J)Z$Q$j.=/`>UD<1$AVG/Wk&eEt;[Sk)S*L3sYK4et1[P]c6`j&65&&]ghqu3</#f==q_,f)2&.
%,<nPFL:Eft7i4ILON<\h(P9I(YVMc`7q*lk5VF6eersJ,ohUd*UO"(?d-^h>rT_\3Tl9l6qP(l<NN;%\ou1F7;\NW5F+<7-b\RQi
%(jrdmF6:rBkROEe)us(4`\W698kE8EBH'(H')!N)a;k9TYCq"Q=j#-.JVR=8\N9eG=$j\):Z,tBA>52[KWmiK!Q3rqMaG`YmIFN3
%c?>&uRE]LqmLM)7!\tm?[\k8?$CQ[92(;Xf0^RYp@!p'T][D0uN-mmCi,U*X*+8pkga/-7eTqCFb!BZ;Z+[PJ5S/'J6et-f!tTr5
%l9Z,LDRm3b2S`_/eT1l?mmM.BgL*;=Fs^^gK5E=%J,.:IYPYVhs.#<MlHca[#R5V#]^?Q`.&H"c(:_t0Zq!F@?g+3J-tU4\luX4C
%SuGoY"+uf/0/mqQ9E9Br+e%Y#"U<7SirtI5PI,N"Q;X\o[6rRh[2K#^W%."W!.2l%l+RBJ*6UFc6B7>mO\#VZ%@V)ndrCPk7`M?>
%_YYJ(lP15*,[VjNWH(SJeGs,jJH?G112%h39'-Q2b7KW;L3F&dFOW$EK4E@O!9mIpPku)LMgjCgj^a-5;O/pJ(We=0B0]d*AJm+7
%LIhbqgRUluPL]j=ql1<NEPS5H<rTAT3<<uZ[\7["0r2BMp6^@T@DCX#]FTV/EI?H$l0<i9>^[VU0P%!e7V^i`OKCEC?]QT\#AW\;
%!tdhXSf*'l7VV0&\/56BZnI:V:g,f)4hVlbNY$"XD`EdqfhiYdE?YBda,uc0Bt3Sr?O,a\;u,61NY&^V'S$ic?";kFRDgX0E1E,g
%$<[N(;1]o.@gJTMl)Y"'3\K$=SP".nH2p&_W;!4q<hRS46,6`B0p'$BNkt(+"/=)KK`N$dW3fUA=S9:-Ue!e!g9=^%'IqYk2(0K`
%/1DHq<L"Gh"c.V@_$N"(8oXt<>!3s&+R5itO;G.Y*#)nea&=L6g:`ar^]>Fo[Gto&R0u9%Mk`doZ=4D:jO$jW`]\O]Vt&cXnUC17
%b!]l;bMXGSoRJ:rD2q8$2tof^JTj[#9eKooo^q#@kP%Q4M5DJ-4cdn;fq#-"HQuYu>S7$CQLs[-A0hgq0nOl5k9-6scg3P.rGFGu
%F_o5jjKYQOTrjlP+EJp&!D[75dH`\NiU`CtE[X'`(23>ZR.VinQ*O!gqa`cU:fcoC&1MNG3<k>=iO4nb?@dQsqkOWDX\=Gb=6')1
%_"aeiNGt]iH3B:jSuV:KR</'bY8mT\>E+A*=!4,T%6um;?nWPa>"#&HXSG5UL61I=jftrFR7u6D%(7^4,X2(8K%ul`^S>A-JPO,i
%$SIaY4O-S&;ei+F'cQl.B?m8T^RiILr/ONZ^k5odPL2)9KtpLk6U\,nLItXP$0$^H6%O>CaJ)mf+*dNHOsGGjIfO:2b<jK&!?a0G
%W=5EK]^=WN=ec1^p9[l#J2^%&Xl6#,ldtUInbe8RB7_,qAC\F'@8WP]!J3n/\0`Z4m+&bi8J;6uC5mcTP*=hNm3k^8PfSY%c'nUs
%Lr>HT.qtZiPO]41#p5jmGn!=YSt#d:S$$.0X`1ll(ECM%0$6fBW'\u(giSoD"Wdf(6Q39\"t6XG&+r;RE5S+8ft\$:^#D'?4G;?-
%?@c'\XL(k:W>/c18%Q;*=D.d5<K\Ih$lY5HkOS@$Y,E#%X"7VF#p=:9@.ORMY,;:HNf?$*nSjB!(eLeM'uK(B;_,O"Fi1%V@g@D[
%5&(<NaCd!S/FR?:4(;%j#&<+9`,?Y]&M&Tq>\q.dBr+Rm3ae4fM.]15SDjkupW[Y>Rq74`C:/59q2rGr/YegfK9TFuYYGhjYh#$A
%^j<+M/Qj#`Q`(!`59Mm6bH[BFDaBp4V;7!f.B'5n1L(QB.o`=p")fo':ca]55IjN2!Mc!s[ji9]YuF"a^%@&u+5$CJE>`N`MpHMm
%&d#+2]_Yn)b_?!/aSO=N,KBNW'(7(X2D_$-\':>OY`TTe/-U$'9.\dFrN[jh#e,PI(cl+SF1*h)V/uqHbW($bdUC_n&o.iBfbRW\
%I?hAGV9nsAP/a.G#dt@nL1NO>NU?9\Rrbo=6pq:N\9'4/&50utea#tAXZFQ751CG3,0:SaQOi80f4J:g-RH6q.gU6_ITpQ\FgL_`
%0eAE>(qhoM`J!1.\$iG]KKtknj,K0F/`#r='KlN.9O?$pj("/nQ"o`u1eogH.XdRls/[qkT>tUa6Jtn^WNeA.C5O:_@4Zsto5WG^
%pjcI'U1+V&#)_)VdXgAi8Dl$[/lGel,I"]#P"%3"</RN^)]Cuga(PBTh_5-H<CsM)Em>Mt]k:*^/#!VT..9'](:FmLdd!3.bNT*W
%H3skP9"A+16+Y#;@$iPmRO^lT"K!^nC1_3Q9%pfA/)W&,5.(f>(QblfP[r3>^OV"rkm;i-SMOK_KkQBF_dOh-N<BW[MRHngTlV,l
%QFIW0Q3rBkbNubANb^qs`E;MoO"Q"R3]Xi,76+j`o'Egg*s#T3oAhkr!#c0t$[_q#Q4Fe&*09cS%br%eHuG;_E3M"^'g?4VP4/HI
%Q`MAsM4t&4Y(M[q@Nn-s)M'd<7ErmE&>Xql`G28qQ'$/HU/3EnP#XP2BHoi8&Cr@_]%#:EK)h.u)N>S3V.m;&2Y^\Jbodo9:a3FW
%8Wk?N<UA`Ud.Sk.be,WaLnVacVNQ4>Aj5Dj"MTt\!,!ZEhR.T+Bp8=\[ACr$H7@8PT,TVJPn(5-/BmMOfo,)LZ5*K2:l9+DCJJ;M
%^DE/@k-_HL=9Hf).B;paV4@V*oZ>I2D:/G,IfNTdq&#+\ntC+-j:a7V#:SoS'Q68=+#OuBkbdM1[#"<Ikl@po=oo*'!_[/T8cD:.
%.froGZK/Q?e&'-l60K*G!W\97,*RSAQVM/X'!Lh]$7i_5>H%i[lXK,R3U.`2a=6)N;%#eoDR&s?]p^@(@[.9DK8^6>c!1](>e%r1
%XSuh5$6ZqglPW4uHtEX,N)*>8:0a]_9SEU[h&Rjt[gqOEXPO32_DjLj%`saYRVHZD[jk@n*)QVs[&g9.X(1@h?a9#d#>kVnR18H^
%1h&.)"\.>IbS4H73>kq^1J6R]Ul&P1N!E>iJcrr$m@YkiKG&0*.KX$MQrd7:NOK0p*dECt"B?Y37JHA#+PD=#$bPY`_=K5T8ZWh,
%_9E_O\@=>$%2I[`P&[C+:5/t9.YI<W4TjGiPVNh4G\+*V,Xsnj7SF.5=@"o*9:%HZ%g,Bd!TYI%h(/%17q$nu>H'J]$'^7S/4;n(
%P/0hTT6.k29cSI9/QS%3i#DGVh?`YjJm>#X60OkCJC)h;r>IPB(ck9AJ0jJP*)bi6Ct>#P#*hmH^bK`2SG!9l>"f^H%7\IR6B<0,
%(LUZ`[Et5"Kh4-1W0a=7VQ983.JurR3SZn9)#u2R'<mS?+nKEt4=iOd$7mhr9qXpKe6#UjQ3tuDK-.?sA$qbYQJmWG[@u$bHm76:
%Zk'5!+:)-(j<;W*fH@[Y"br>LaG@/7FWZLblR<JAATnOubE/P6M7AHpe/AiKkCM$3Rja/M-ioV(kN$07agd3Af%QU@]ndklO$iU<
%,.nf$1]FU]l?!<PJciD_'U^C[9fh39V1=MD:>m_s9Lu?r!shbJF!W2:aBsa6_TlV&-^_u1:=[CX8(.La!;b+7E.X%%`CbPt0.M4T
%HEpfF8n)$A1^1pF3H=.orF%?JM/hF8-kllJ6aZtX%np5>L"RRg&=%<AXFVEgMjmSNJe7RaNM6a[%P+L=>^-HX'Mf?>)0oON*C_sn
%S:ssrr(6,^3%<+pB#`gSZ36oR2#f82JI,AuPa=7tSH(_bGS"'n*[dLh%dPW)bt[3;JlB3omLC3DHIai,Ej'>>3+0,W\.^M%H>m?Z
%+Bts?P-d9#;i\s^Rt*4T,C?]:bJa>F0"PKA+c8,n>f>&@T:H:U`%4,<KbGmS/EA`lQ(HY5/cEu[08`5u5qd]PN7D2G"ispg@%kZn
%_Hu-ko1]<"@K=soF\VBLklVK.#C5/r+d@PYXG:BpiWN?bf&+t9QATi.:&mq?9fipdVpc,\Z(gW=cod!/$]XY'<.3,7T)cL5G5Pc=
%'71CDbS>7t9>),o3DI:]fu1@m@U_#33=n%VNdroPcbt:DG,[DrHX\a_]L;\Hig+WGa:iODem]'^7K$DlGjrlC^$"SEoR"DN5-tTd
%gq%0eD4U/KG!pu+]eI[a`$,sXU;ck0GA.beMsC0jMB@(:J2@ui;:M?JjPU=iIps@'HWm7Qo[qX\B+!pfW_uU<AG>$/$F6;1jO_;C
%cUNd/7.rE9TVridmL0cl5DoU>]GJ[;;`]h,COg0%KXO(Eib^,c:nF:ReiD)W#bX@,TbCn,o0IF]XW2Bl4`bd,DB0q1'j,Tlk3co6
%Vq4qsS?e;^@TdrKFqMueWs!aQrs?k8]"7&:?jm#Kd90d62kp]f[b+K#+]SsOm)2kT??lSrZ;Rm!L(_ih=gV.98NN6.GFgC;hTO#d
%aGTe<:p1u,aKRuOGjU$0C'<U-\l!@L!\6Rh^/^EfP"\)B]O2"2V,].Q%;g_7KFO\>f$Y@MP7qX7^g83id'(Zc&4It4JlUZ!i.Mq?
%F^.Ar1c%dZ%A)kQff#U0Y?=U0&^a[)/26._1/M7jE/[qaI`;6ckHS2f.&B7F"hH8%'Dh!nK38q.X!K_'/B&!Y&+CnJ+X.^7oYcGj
%_'48/.[>]pjpHp(@[Uku.%DApA^L\!.o>dbrdXXuF@hYU\/'OFH&)5`1Z00a-MGLp9g=.T,Z/:h\,`r+b%.fLlG?4&]m\^"TYRK*
%d[/u+R9A&J3!0RSQp_SVNf&cY4PYu>&&O`ZU_RQlc+t?ACE0r$4t'`fKHhO*9XQ8`%!M"ND?[L(V,Glgq)!8$1s:"VdPJOL^"dSX
%iTPDS(4_)%(loCHZs%<tn=(")UgSpHSDn(fEI)(=N&4\smQms9Qun!dB^Q;25jm8cp(ODD!=)!O6DpES@ctsC:BU$Xn7Jl7Ql?1J
%$2#C[ed"0iB^<ad<hjn[As&R93%[!(V$KH(Mi].r!,P1\?kB28DY;uldR>]RY=l^TZ?^m@?m=iqEYb!4XUS#1!IVH-g6OnV\m'^n
%UY+ZNFoVSjR=d&iTe2Q?02Yro9';uPdjh'9@aq:lYS@R4K?]%VA#[7;0asD8jUkF82qZJ(McK@sRVJQ#`9"l#qP5YhXBAgWcaBH&
%(_n/.U]q=V[,t;Xb4OAt.3fEUig%WWq(9<&@>-<PkoGC^REc*;@ta$"8t%CX#,EK:aElrBN9#9SYoBh.S:qL)C+"7SJZ"Gb=rPYl
%'^E@s17:N'Ku5qn)kq#1-q4f#MM,YJF_,hkUJ)#YX[39*0)8;mSJ18$jRh\jPSTbnd-5@:H^%#*8ED*t*B#t%q*m-Y0esK#3gH24
%P()jc.5U0^:>HO/Mh7nhEi(sR)6s%_N(o/G"m<u6WXX@!,ej+!*;+ajU\Wep9+=+-Luie";;O`MBq\]%R_X:^Q^>oi9W\ADMM%X"
%!B>HrMk&poo0kU?RW/E!0'ZQ"f\M+[\k#WA8NW_PPQEo214lWoEjuXq.m(9Y&&Y)M6XoqK#/hZmX?oBL;o[6t"3":kB[A1M`3^PB
%.4EL:*C;I`Y@AB81n[\1?6&t<A-p5H=O&Na`bq3H5_5`\fS'&QB%Wc^,=!36&[R;`7qP64W2Tq<o>4<]<1k'[>-fO6A,7;pfLU1Q
%mfrLrL16kpb?3["qE7l!CI<&Cb%_J5/4`K;S8EapAo=+MV'Gk'VG@?V=4jcKVJ,QNR!*;,U@:fMF<bFLC)5;Nc0l<+c*u\"(__c_
%g5d-L&p/4;Wu)/+X8%DlY.AESW37qm(e0P/&g:555.NWtVD1PjAiWad?=G0"5m?B:7+^TB!H1(Ok&_bKhIa8+pmNWD7ngdZ![qXI
%%+CEmbO_4K6cCn$T"eg_2[o@%NHQAZ1d4pd<ek.Q@KV`%p'Q]q(6lt.[U%$@<*/+cL^H-\KR"e0D[d."9rZE473)F,/F'klrDM-U
%W^&kf<.SY^04LqH"mX;"!bt;>P8>^N0%DICW-c'G1,.26/*:4f"Vp6l7MUjl6@J\dWCfS_hI(0M^u+d5(a-bBS@mZa7BSjSTN4ZS
%AJq)n63=+B";;_;D1pK/Q5@(99e:gDG/=?@QNH*ajKI0F4[m8.(&?C$IU7RWY"661]I'1D-DC`KcFmtClss.-C+hkLn8,/6`W9O?
%)1MRR:$nW5I4dSJ5%9_[(fY(^jX0goV\hWm43o2T;"W3;*393!0EI_lXC</"<5j[fA/1&W<76<dlEqo8i`LbKYJZ/.MtT0jQGr'&
%MK]Y90S%mW818Y."?N$/8Tg8,oIOOu&pFNd)t&"URoZd!dZI76,(rG9G1oX2J7V^,2Cn[]7+_^`XHa:(-lUjoJD]`0@+36&MFSTg
%5f0hqR$kH=,!6D`dFNb#HYEop%KQ$DZWT*32NCG9>3g$19HPG4ZGU@,&>%,+H8Cf2dnLRU<gi?c5h:18BcIZr'ZIPs-%eARajj9u
%`,TA^m:9^r"_n.E.W@M4)A]''AAit[Ma=&&8KJQ-H#REsj.Ji.,_95+43lL\l*HnbjuuBs=^<peQ"udJF#K(O9StmVL'GehOAs/3
%I?F7($\=oq:KIU0\65OsXMe".?i_HN[k"pq7&t]#!f>9Q%[TkT.2H@?r8Lk\;u.YW\e;*C>%h%854.D3A_"RdCT,A;nOE;%NB$bY
%*>NO1,3NgO2"o1*$4?FgigO+AUPLnNZ^[*/)/1rcCF+*3qabu=7%!?(qGq"8GLthrJSQWT!B`Dq74)SKd3u*[0ch6GM*O\[Pt79+
%&lKL+)Jg%;Ik.[+Sd&$]J1rZ^$$g16j[r%H1I_Uf(I/`U$*XIs6f,.8qb#mN,;SAHUNSKV=aP1R!2h>q:<eVHMu_ub_^&BlJqa[Z
%JfV$FE6(Q`FFP^Gn@?=d+u6^,!c<PY&shGr2CM0r,N,EPJ=p/ql!A9%/V,\jd`1<Z/-ueR^;$`Q3+Oo>%)=;e2ZpU5AH9$H4<+(0
%jR,pIL2\^JW<IMe+bmWD>K`uj6m9EtdB8o`S!;BD3XqG$MG#'Y/Hs+k/f:_P+5u@B/K(&;6g1$p823u37Kc6r%<u;F<GcY0>2e[2
%=3Q1(q&#Og4_hBlAeGnj[/kl:ad!N_WHq[u0e!g?6>=D]@qs_i//UMXJ('En1'uuDd8cGXrJdBcH9*s71C5Y%Z+K*.f%VBLJ7t^T
%iG?ZP@OrFUOKAq!%5\%7AC7-VWRM+(nONm;?=o%UFBXB55h/[<YlL92jFot-$`a.4C9gk_(/ngg*)/D2(q&#LfP>R7m!'BEdLt5Z
%f/RZ:>JKu)es0no-@q-bQHGLo,R%kh(Q6E[Z$O'qpjF8k+I8&^f6uG?<&(TZBmjMZ6@pA6q%UGm88)16.6sLSh(>UBQ4BLEK&P/+
%MU!\'9fR%k%LGkY5t<[[.*,T1YN,^uBK>Qe8k.\fn/gOR0PD,F:E!2Jj*T]L$ehs,;Nm+_L\O1O6SGmh`R0i:'aadNTfO4h&<%(%
%<UGeg'Jdp9$p]7^e[.TLeff6)M$gNt&H%@V0dGDTQ?<_\=6ZtKA.$:X<k\)7h:dc1BHaRuSe8'S+QO7q)N%Vuo*+CKC<<U[?9I(O
%8IO_%rC;gJA[E<J8Jt@b6VmhQHMi#_d7tpVp>0US%<4aE?gR,UGOa<KD?8Z?YJ9\[&^rdR@B\32BP3+:E)p8kOX&FFeNBld93nK2
%TFb&)6l18:J-#6^6jR'TDoj[ijWml/Ac`-3R*q`[I#uSU0m6<WZoM/j]F/72b[TV-VF@g/61%ft"8i7t4.k2!Fb(@:32C7X;MG!S
%PP6c7KNK]q=H(=Q4G;k2<sRMgOZ9=^Sg-AOP!1!g#b5HU(?7>1Y(L1IQ57ZPmR#MaNFa0l\U'r]!GKM`"*7H#QlO%,S08"Qr@#`d
%6W0kVNl,21j9UAN&4id(N.:5S!b@(<.3@7J%-2r2a#;,@;+LN\eQihfd=C?'6\J4$Jh,GK3j+lAe1o56?>$'rapnL=IkGmX%D8n#
%48s3438U[;bZ)ge?CIj,eR$I+`/RB=TEFgQ`<u3Lb<osq!SAhXf=2.i%)AW>gY]$f,HW*A.cQ+`W-9qbL1-EX(Hi(/mCmn]f!0`7
%Vi!Zt/Z+V%We?JiY[tYp=51_<HOB!7b@#+';/[Dakm=DCc]86g*;K#<6Qd[_X6;ZHrs&l'=ZL?**3jJ)Zk5Ed5h'+!9<).`<Xn9\
%l"C*4E*$;C(^BV00PR7\HK.@3-!1!6r^r2FA^(=IKe7pYb[qb7jY;%^@c[ip4]0_?P&>ma\3Y0'1#;nh/L:$LM`L9(Ku#r7,hU$M
%jMikidsaf3R]32'!6q/CS?B(B1u&<V?j=RmE<I$lVVGk;3NA_hE9'7ln.6\2%t=]hP/HQ7R\b7QDO1+[a"A#.]C&(C_!V5P,l3[q
%G!kG>Uu)Dn2KO'N#!m?chBjM&H"P'i6b0"GCCBqH$,p:uL]ZHNZ8#fke^T[#;u=h;CM4K,[cn&SLs(/\TEbh+,*-?A+me![C2T$n
%?=VS5!f_I<XTHjXoTKPIVgU/l)V\5$\X`F403!m,8LG!8'e4+>R2X1jIR$L#9JG+#N#@&%.'%f*p55l-Q0_Nh`=.D,E;bi04J@h(
%RrW=i[KA,.89,u%dTR%6kTF;;O$Rsk[<%:P<\Q]T.NjM,LBa%`*GT&[#Pc=$cV=]8bT1GSNB]HB$%O&ioC$H^B0;Pr@9AL5LO<lF
%n^bMB)U]7l[H,lT_7?_e`"$cEX=<2\#mJt]p,Lo18UGE=#p(m(8#-I8d6bOZnL3HPSR]G_+Vp?:gkI4/6\j#0!1$0E]p$:b!%l%%
%b&HtgkN!OJ)_Ur@#g:%<ce^EQjq`9=)76LL"j;tOkTWE@W_qX!.NH->_FY?Fh]l^_.%iObh\BG<S-Ku$&FhqqXFZh%=$t`sQ>/oE
%^p`S;'dG8caX*C0\sh,8#$+a>\hRAB0>kVg`ONlGGuM_>>L?Sq.l)"'*AZ(]A<cYZ9<'=FU`Qe+!,&hY#R4Kj!:2O60TlcF!mN$Z
%@5SD4FgfA+DuaXBT%RrD)g/%e8@P'Rp-K43ctgc"LMn@1C)\pVgTB5[SMKiaP&0lFB"J)7%Uu@OBQoE`>*X+m*Ug2-dmS_E&258q
%Xmq)L-Nmdbm:2eSS'3MX&Yg$P?bEC>(C($+A7oO/T2Woar1&s+J;U."8^s?*A5Pq!4^%P3qi"B6,+=a$7"l][=)d$dnIH[:13su*
%msPSP<`25t>6,,Mo:;jaY\%X';Sm&POL"uK3hte:ne1Qb>cCo2p(Q3mJB`qXn^7gP(Br_nU,X'k\TVdJib7E*fj]pM?pen`UB3nf
%b)c^i5iX&K'P:Q)<YskY@/tDZIfscAEB":$RLGJkQG`A0@e8#n#;q-^N>F()$1KOsbXca>&<j]Q#4$l)pZ@V;5"'@+FUj&?[]1-u
%//;>A(o+jT?)T\bi4D%RkabRjIj"B?[+BoF5R%MPpXlml*2jaZ#BB/#LjLCL*+1Qm0Te482>.2hCnn&4MM*@B<ln%#UsW@RZ.X@q
%E*:Ng0O@Sf@%lE$4#4kb;9ofDWlCpS=*qe$N#!D$j:jg@/g*aTEoF'\k"+W"pG.f<;m!*\D-dcCl.E2=6WF\_$lJ0AH*r9mQOlo"
%E.JK'=6!$5FZGck+<^fX#A6#q;:Z^F#oK@*M)kbWN"63NGA7p4N')qO`L8PpdAlWOY7B<UT;+9QPbW9L15OS6gAh9&cCCJi:t5k5
%%27aB\r7oW/-*`EUn@`,*0m)>);.aE];<`&$"M9l0<(:]*RoR`&#b'__Bp+LeifN"EH%Fg+EWsM^rClFn?.CYe4H)u&L'Zpa9r[4
%F9GUU#+cu.=jZ8BZ#@hS_jFaBhDmABOuU7/a*(,g.P.0ELc2?/I>H86,B>Z=;L3?BpUEUs6[;YLYg`AF`$TpD)rt\U.T^\.Nu#o)
%[<bLX)u-N9cA9%C%;RP'X$R<jpL'H<Js!=*C,i:"MqM9p+meS&pDX"HDMjT<$oXl25dM#U'7m?=!I"!5,uALb4@<_P$>-3?luT&F
%.esIAR_<F57Z^ZqECjVXf(-Y0@:N.!\Nu$roLhNI`V35"])b0lYbA$i:%i>PGch`*^o-c=@D@$-*1&M5KS6m<X,Qf55Qcn@7idP9
%V$rYMXr9EL-=iCl=qJKJ8%(_QL0tFi%*\8@C$;tY/6(2QiO(5K63_8WGR')?3e@MG>W*AXa,id&4=h\=SR\*$21pda(5o4s[fD>M
%9X\%N9^\coq:[=+jYM;jm%gC??q[bQ1^L\pS=^]&`]=(=#-lOb&VfTrR8=c[SSo'6[M4WF+\R3k>2cfp!S//5'(PLpj450_?Bp1T
%.P/BE<nA7jROJ'^!]m2N*uimc,sIcYe5eFm+9;T2;IH;cmita^"bgPrQ+R\t2$\!=7o['aJ+g5uLAE<-Jm*X$aBlN<9-0$R(b]2T
%D3L&k*ih7'J<Dt64Wi>A,A,d'G^nPiP/.T'`$2X*dJhi5Z'_@?)!J:E`g+*)oE*mqgspWu&9Z,_kOGFm/SWK-o8SYI0ge)QH+$.5
%EMFR+(5SSj^E[:d8MFO*#gi8_=,2=LZ"*k3(8"+/Z:+a+mECCI+kaBJU:ErgR'Z8(Wc129L4W8o>Yrk#1G-a6)d,Om7"7`(RrrPk
%_X5Ua0+'B@H]-X3Gpt0,?J]#FJM1,h`Nq6fMhThg(*&ZICfu*h!7G@D0kZkO.3Rh@`DPu)Cse>e63/DJ(03[o_U'08Wpq60=`96$
%TqH4s.I*[2jt56>W+CmOB8ToPRMq%q9__l1R\5sekgqslWtM`fX\]PQ,]">B,'#!2=o^gPmqf,mcaclW)BAPZUL"iD[faAsVIT?r
%>.+Ud>/[Q/C^fmgMlu)h)"9/9Q8b+9@(LGNBTuZ@)nU!f%PNMG-FA[5Wo8G;F[3q*UBhW9mL20E_ME`Z#0<\!>;R;C,gfN&Z>`46
%MZt/(bGJhd0k**P.5"Nh`7&NN*&\GCc%sFo%Ea\?/$:-jB\H;,*MFJ>P7Y_L-_q@[R\jX8Q_@=U:hqYeEZ4stZaU<]auJVDb[FB-
%Q?TbDU8.c&TuOpT_+'G;(-3EjVR'4F91Iul9/]?B/ceIOm"1sk7EDsJmR>%?ia?k)^-fW1+QdlRJa-nr,6P#E\6cZj82GM]O&1Bd
%RX@c$Zi1qB+*_e]%i3-(U#JKD%YA=)9NI,AO+[VfMX`<%LY3[7ruB`)];qqi2h!T$W$nNhi!+.(`<HU)65@:9hum68M[<bk]j4YB
%clD%r"*o49QV24h$jNun+gn6N]d^t#&gZ>YE'FZ95o`r73(IJa?k2egrKZ<3'oi&@oSR\X)U`<+&pd3N)AXU'/1dIu)k!?n7\bJ:
%0a,V,6OK^iFTZ$.bXd**G#Mon@L+X2Ttpqul-r!`=e^GkKUI6V=XBnLeU)BlQg=B=n`9N\APYuqVHeSSFX?jMA,DTqWkJ+Y"6+ZK
%X:ice*/F$n7%B=ZDoN;P=_*pBk8/2R;=*2Gm3_htS[<KgOu#]qetkMMD4R_l]KHAVr<OOL%i#hOcc%$73EI^L=JtnO3WE1k,&SDc
%+E!IWPOWmQ.m&0ojCJhR3*rHN<&V!mPk2+FX<mZ+nbsF;YB$AdR9o4LSZVJVn_3.pXPT*Q=C/q6(em0Nhh/hQmE)#jVt]JO;o`M>
%RZhfX?jmhV.t?:Bm+GQNo?W3+3>6Hl_!0-HG5m)[,2K.e]npO+?/:8@lUh'NX#EG<BBTh$c-Tb9,ifcMj?![%P]nMTia;@ls$(Fo
%GrN.iL5g5<_N3i7Z=).2Il"9j4QG^j=F[jo>Ke6^<b=W0%gYt.^d8';f4^"%L^^\sI@ub'.)C9FTgem'oI@"3bpC]/P/5gXP9o^+
%(i,t@6#lY"Ha?U8PiMklr%FTD9kHWL!==In%%>8HN[#)a,mea++iYD\o3k5j;^S0"a)!$W$r"6,9P@tP3lm5*=D6)0YSo+m^&&DV
%CR4uA'@mLZlA3okPI6.6bR]LDC,/ka?t\@0BMKKXr'+5h+(UR8)p0KP(/@FWh.4aT`th43OX*4?,hQ`ERD$V<j[]#.?:g,n.ldq'
%Q"@",8;%9j`j2#7AO8L\NQ:>&ef`ZbS0VRYN0%)gnDLFk4gN;MSatfm+7Bq"ht-F%H\K%^(C,XciK1*#+Fb!*.7Dg1@LCbLR'N/*
%5Tp7bpIU$m/#ILp4`#DR.DArpJ>pRXb>uDejkhN0FMtpI2QhZ&3XNe&Wlu]BZ,nDO:=`((FF;R@`C@0g;9kT"A7&l!!4ntcV0jam
%7pXP(oE.H-f.q19Nn.6i^N?t\")93`Su:6G5'H+g8JSg:R=jjVAGTh\SrRucAiieP_g+k':n4H2c;WVmVo?s1AEPBFrp+i5FII0?
%(7gb#kGb&<9nF]&iNOTiG+K2hfqB7p6a;K!B_1>iAG4K>m?l&pH"pgR2NCONkNP/R^-i>+^45U#`0]f\hqQu1q<j"5p"VFSADZm'
%2OPNN4E^UJ3nS]r?`XLCa_WAp/8%%?9h$:,HCdSh:U?Uiaj/@Ck@ner.G:lb4=)1>S>V"1VkKZZ[[&oTaj*fu>D$U)i&og?96Lo#
%?rcWW&LJ/UY'-E)'9\npp%,j`h8!]d>=dLo)S:X.4&;>jB]j*8o<bmr1u!;Eqt%2IH(*H43nS`#B,7p:s8-9cWYMe&A@m^Ik"O*"
%PNC3;e#_`3ARM=O'Bc>AWFM5'4&;'2VnpYW)Ze*NMt;$J>'cch:G'2cBBLDKmc.ZHUoi..1`t8e>`sM*UWja+/V+g#X(RhS>AaZ-
%_MNTuM_>dA3l#iXpGA\oA^G6p1K3,(P%FtfJs-t;'Y62Z":8!BFgdpb]'f-:-N^9h`+It?KADjP;6hrHA`,Ft,a;;;<t*Y_9cKF'
%mXo%T'009uE3b^.7#KuPa3^&fq5UufRO[7M\PVm7/1VP_E&0#s?\Op(B(KUd#%23^D4QTaDpC,3-4_S+&s$(7(mp@,-R15eU!Obl
%gO;qJgZl2N1_4A5:)7,0UCaM;D84\1,H;M6F<8dCVQ.*+T6C:lr=N[g)*?^g_eihI")0N#lB7HeLR$8u?A0A9A.[=&'mKjiYi@%f
%F+OXmC*`q:_)dl$EmZLaPS5`PKNQ=8'eg;J,d*rL.e't*,L56;>1\1=USPi2Pjl^U.i_j5_bX_a?T"dJK`gmbc%NGG!#/HH.M?Nc
%MJ?9bb$a^tRBVg*ektqMdXk>Yj!/K[@XOR/k3M@I<KjMVU2da\$SfW,Ae6U``-"oe*^JI(Jg*iR83jUs97!Os/\Q\37k:G+h+*!N
%9B/QI2le7;<U;7SM[(BM3D#]jar4l5-3PV?_0\#s?\O$0,/7ieWap@8pa2KJP(WqgoiP\@2>^e$D.%+ZTOUCrAETs#/U=RT/J1p3
%7Jr?/b8+0a54>D?08J7ppb?6SQ7h@J;YP3lq5P_snB-^=-n9r&?de0J.TC@&ViBd'$,S84+POrM!bHGLDs=Mhi86-/*tgY&+sJSD
%L</a&%fdbBi3LF=:QFfML]p47@ZC()VG%:u.Bt$%%!5:^!W89mKG$bgW!$otQ1f#g@D>gl)PZ<cQt0(gm7\A<c\cJ.\BpW985SA8
%"=lWII8lD1&&REPmiTHU'>85D=f%-mL<E`Q:7*=_BbI]]LC+_!<2'D=]38DgcS4"/<H<BNJo$LB>kfLB$62f4,tNS@K"@L&(]\ZS
%Tb2Z:lIE28dh[UiWR8n\.%1R!hT]p&^ne<b/eq@5f"i1BVm?);REc*am8R,2W(=!km7]K&[kQj#7>GaG_9p6DT:kMTX'L`N,%e9R
%SjML+10pRnN?XR]_2q1`HUY4VfA^@8P6%r?F%IH'F>tNsL^E''+kD/ZbS-)UW+_QXe>pY@&o+N*\mss/6TdRk2>fF+oo_fi-5_^"
%;\'t8#omN"+SF/ljK\@0Q+3IAZ4IJ2opBL@p_q!rLcZX7a$>CQ2+7[)H60I@A1_-\CMOio.e`f4Y%XU5_Z@UsZoo=3A6Dod%L03G
%=l8m@XXhqlnP;,]R0L1?5^5Fd>DA2]Bo"XfT>VEJ?t+u7+`Xr4d9Y!f?b<>IL&,NY,XLoU+INqC-V+V7k%c1;R8B12RF#/]l=rnl
%o$DN4M8$nT2Ll"9>%Xf1[he?4L=B[bpddeh,,;GPG"#/&6?#TP82qGagBo\PR:3*Ai27hndo24]HQaBLYbqPI_u"@PeX9o?J@Ff/
%LNqD97`i_)<323,L#Q^F!J/3$KsK#>$ghpNPgl)^P(7K74DF^iXb%$VS]-NoiDqI:[Y\Qu"UO-uHb7Z$-L[CppkDH`E`/(1ED`^`
%e:dr\Mm4VLP]l_/%[N8MS_T5>BG(LX=3-rR`^Pl4\gE_0eJ[)FOK<srJDVXt[R1.WlQ#Qa?hD&AMF'2boIr,/;7if,AZ"<!"Yu6;
%mKjM<"RaUS27+,iPQhFOs4ls6K-b-o\tJ'9,/VCoFT<H*!-H]O9\)b]Vd\m[,NC?n0Yk4QN[$HB"ZoRa^$WC*SrjMAp1&WSgZ4[f
%RU"BPD(1H5[A]p\^(fr*MtZ2<,Z^dudMX0;6H'>W39T\9fZ8XPN9eb`]VsoDn5?:>PHI=].F)B+;R9u4:X+Qk"86+lSAdi`\+t4'
%U0cA+L`XC,1"riHKLk7n']dUS<591\9ans@/"O]modYohKF-2;F0oNAXMtN57?PYNgR4IgFd,HsI6TJWX*,Xb"*I9=-g&:bd'ac>
%==]WO$o(RNKgQ(_<XSZ"E0/d6Qk6138f[Ub83GnU["tI3.=Af_qn<+ODD9a#.M`X$*7.5$\aDfM>Hl^WJtG[ken-mW\r=%+QK'?W
%63CjeUMQ=JMm,Ad=1iY_DPREt2%kZ;qio.6qNd:qo#!"^X6)Rt>1["SMOS+)'S+#!k@AnZ#Td+k=:!,)U1Pe.[$85S_DM)VQCT*C
%W`fX$N>b)VB(JmL89#Rf*AVQdBrP,f\WRN*]rNbB)EbP.U*.;"2l9!*!CFrq#c[oOU+0eQM/Wl3e;d@Va15\)gdWh5gN5@]Z-/!W
%[5clEE$f,lMnNE3!?-XV>;`.NAuchXnUXeq3(`7!I>PpgSo[$*U@J97?mg;$Q8]G%gbtu49*^,-ofo@aCBq2!6POFDZe4$'94Bd-
%-*rJmd'V,tObVD=*1M,&lb[n9p6_KiHa,`YchI]7;\)*=JE%j,lDOaJ7]EK%iG(WbfXq4c8pLB<@)gbC&ITd^5#6:DAjBA2KSWg#
%D2Bg]BSfP1Lj0F?/^sZ-A`-V]5l6kq=n&JSQ#TW*5i'hKC=5N<\$!Os`!>sd>;X77n[!M5Z_\;8_+`rnn;M]5G-lX>ddJrDW98#q
%>`WP1HQDWj%3Si_W%2/4+CJ4Dg+AO7UiKkl1U/GKWa,lba@r./E_0hu+hPEo]T`Osa?MXRf2>6Ga+8M)ZV9nK78>Up)l@gT9?:PH
%TH(FE;(l:L,"0,FjrW1gBNA\Fm'$ULb;q5+"F@pfl%Ba6lT28a*+&O7U`!ST+gLfhah3VOp7j$P,#gN_=bG6K=I?2pEQT1P9@e4g
%oT&M%'4D9m7g!KBi*DmVhQ#ZJ,0Br.-USU_0tLG!Fu'IDp!G7>"kB=t<31:YCD^%`Z'`$.'h\CEh_AP&^_juj7:BqJ"&gd==AbY\
%X$HG,3)4Z_a+BS1@;%e]lQ,+59gibVAhOK_!Jqg6-AcV+T>E1/G#l&3pp+KL`U@Y=,gqt6)sStnp671Acs=-HBXp4J#]G*!n/l+J
%@gqkV.+:6E4Y,d5,<p\oQ[TtgPcI)dqB@!*A>,m<C:o-t:gYTXUI-JrI^`uMZSXpSlD7*hUc)4KGN83nZ*8<A*uiJ=?-OeO8?Jhd
%j]!b*OI(kB>lK/R8ai#-#d.25HQZAlX<)R+TAsM!IBl"j4dq6?.62X!/g(Wp2?F?n&f,$8E.^nn(%W"F]d9SNcW0$5Z0k[d*L*Au
%,1P9&g7-k8&s\`M+83'>NS@BQg59h`7=<bi%BQ<3Wc]JAU.@Q\q?gMh_:E_\m"44OR)]e"X?%5Ti*&9jUg9tgSoSa1.(1&nMipn&
%USN")>W:r[.L%f-O(g'mH54QhS:)2[a=/!aMAoBFhmGc)@!'hmEJlE+@R^H']BC-^Fq:kl3orpV!Em)K[#eB=3Jp<>MM3b#8^FSn
%,HUs9!R<*m8E^H:SdJJ2/YLPtM3Wsl0N<?,WM[LND*`GOAPVfuWR/B*PZF^u]Y%!G<N'!*f!.;Z5eW%#_9hNhYP%T`jO4rI6^j*f
%J])*F_]1.M-qYTMY@P&+fi2$qLfi%\QC3o_F,(-fq,B'A!74OWRYurB<Iu^@M1L?##SHQ,D.tPk`$hSYh^C!^KWmh'm/eUOBG;Ip
%pA7Z9KS[gT0H3mp,4)10q)`,UQ,Sq(D3St5OVtQ&nKeEF%^et-Xit-O:_o"JHC'Odbog!OO;n)A+J*;E9,^tX#Z/7FDKCtC3C:g/
%<KKb(q*s*!m%)5+3Aoo+ShX"X.6iZ;>Jjb*rDF2#a<-W]Ma2J%hG9&9$uDHtBuHat"I,)]C!oO#e.j6&B!(]M]hqBK2fq,ToR88Q
%+Sp39MK<PSWl`-)C!Dj^7b6oQ+q/L7OO0Gt^`QO'AB15K?).'pP1M;>VBm6$^gY)a3uI)#/a];)ib4[aRd-2B+G_9OKXIJ<<F(uF
%@M2oO>75iLqmt]iGD2HHKW`r.V@H'IBeq"8d.8uJnnQM(<+ut;3[P7D.S+kWjc3,[rjc"_'JF&2/(!7pkL=.135JMm&A!<UqTa4t
%Liob12L[Q`,4gs\LJ)\*'4HfR!O&L,mV>'Da='Z/#J!qmk$%nt_5p4M,9&?R1t<jkj>]O-UrZ$B5pqTUcPb4>FPnVo:1RT-4uDm_
%M/fn"qH.S`ULkN[hM?<hOJ=$>YI*b[Gm&!66n$oZ%1#D%)+qSQYuIFfhKaYXD7'H#mg:HY+kV.SAX]DjBelDH'fY<gb7JH@+AQ#d
%8$o`V?$mtiLnoJ,'d+C(#:k3\V[=BU`8=6Tj](fA`BS"a/A8jK<@ICqF5^R:)^AUJ"fMfT<8t&urlh%^&%^tF1k4Y<e^34h*A:.+
%BgU3#MAaSPLsY/XS9+1i3(YNY>?/$"6**`2^a)UNWG>K#HL?L?&9A#YhRp*qj%a]p]gL.+HZ2gdE><!B+l7>SCD-Hr@N(NC.!$Fp
%#ROdfKninlhOJ+%e-ic([7R=>@Lu>&<00db$3Kr^7_Qrl($**\`UA'r(.(_HW>/f(@A<sX&Q'p1\up011i5AVGo&LS]NgT1NPlkO
%n!jP[+qJ::;i%Z=%L20&@'(fHUb_.1=a=4MaB#\0UcFu:khuK7#)I`!UY/sp"k>Xt[^QL$>&"TeP?dn<"1-K"2U]fm4JZFc<u`TF
%*5O5'-7fd)gTbnGWb$C=#W84ePuZP37S\Y@;1ULQO>m_PHFcLH9;m$BLq0++@ifAG*5pdSGpsD=\B8E]]TO,$$q2t=`j2(n#`b^H
%:7f1n@)aC<fFTRAR"@JK6:+GlY=Or?i"lcsLbAn';[4q3Me(8X"`0Irfp65k5%AFV<MuLO&=;*M.b?'rE3rlF@J&j%K)L3a4@3`N
%^q#gDcfhWO_0a,2(S_=3,fcWVSR]*QB-1n,<sr]-.&W8Tb\1F`l&k2\D#</@]VqJ4:=k(5[g\JRX91'+$C+UI,9cVuR4g^HcZrcR
%9$#)I3OYTM+$'sSOJR0Ok@eN;o[tq:g0%B/7ZXj"]bS1$.J2?E@F^&O@I)1(-5'c&MUe[_)ESSS)[j&W"X`Ad*NrLGC3`J\ZDNpW
%%b%k/574d-0a_?*oQ2djl8YMA<Ei#\$[US[nnb:@(E3E;Kj:*B8LE+6%:$P\!aR^#.]Xht7@Cr3KMkDd9"V[bT9kKFE$/Yf+K5L@
%,@eDC^G78=K"beoZK&fPfX7*L\n_8f.RI&K0_h2bg$ar=S=5d*C.Q6989;(b[ZY51*E[aWgs.0&6*UYXPh$7uQ"ZSC%Fmn4,h!>q
%73)%p,F`gdG0';;`(lPUCsi2:S-`,\PunJPb;69nU2QH"!J]0JIui0uhCn!Yr2Co9@9&^dBZka&mD:t#1S045f4`LBR,Mta`5Pc=
%)K[<,_an<*#-'ppSX-Q>+s!&8KiqRE'qpsEQcdJ?a(U=OH^Zc(X3i=N28@3:9i4S(?7(R9f51ArZW`dar`I.`_8g"%X^ZrJLRK\N
%.jCih`AWUE&CkNc#HAL^'[UOcgU!'meueomH+K^ffO?Ua3>s:5,fHr#]2WmjfauE./s2n,'[26QZ:,L=(kSO!Xf-&ZD8'Gg;t-3@
%'g!(-'^<\L4Dp"0-!2(]Cg=G!7_Pp]iilj#b@,-:B3L-oV'+>"MKtt$$*2&#:2U5QP/BAs6q9:TKJq-eFqLa<Mc>'XD$OI=al@<D
%(D9BV/-AM/p,!nrSG`?N,G@ni#n82#Ft9qO+9S'SQ%\-#m44!3N&+-R[dYa,AIalh&j]Z>Scls?F&Z04Mk7&*VM3O!a#s)9gLT_L
%jEq-OC'*h!(Vq!<qsUg:Bjk0N<@&:Uod%Hu-D33kR2`.hp9L3/9Ll70h:*_?C9aU>ODDE&BPNk\Qg@4Wri0hN'?HN>[BTA+qS0`r
%PF6Zr=HkL-qV$]!GV,f<+7HCDm6`QL#OT$;4MG.-]89Y-bHdNABuf1PB\'jHE2+ZV4gNp[`01K"El$<PTg_FMFf7k8:5m_LDWucD
%(,Zn^*DM4$i\2Al;nY[$,`+\B-gUaQYD1m9_14lY6di]d@T3V>kJ_Y,(Hls>DY)3KQ*a?X+KWOcHARn)bi#:J@2CCo>>)@@Z=Kq6
%kgiVp/Fs,)g's?"4HU!WSHXQf-2j&5+am!X`2U:>U)466K"c'/#/D,i,oAq$l2[J@3gc:uVM(5l=6(BnQ%ik.`k^Vt2pP*TG9ETg
%"ETge)p:*Sihfi^Q;DW[Z67sC?kau;I!RJSaDq.f(7pgCV$uqDW6is5.a2kgAJLu`=EhmpYJ][fmC19&$Jp3VJ7(0q9-"i9Wd*W&
%2Lo!&@Oa7Ibn^a"2ZtF.d77A!QXgYObIJTR!9SUC?uZ[$Fg-"d[_i>FFCP"^EVSb9_>'^n>i%VH+#mKk)[VHK0skG/YlmJsRT1b;
%?e3#&<1nFTgU$8A6J+Pg<57,gjUe@D/0RtN2g'#+#cJ!&iQZkU)5U.B'st7P"f>7@Z6H9";4gH%0O_E2FW'`]DEEcTp(i#'OBc'+
%)Z@<mDH`e(R_\mT4]T1h@Yj;qBLc/<[hQ:#5LCr^@X52`)`"n0i]9W2]&drb%7!4rK!J4?f55D^GL]JWi<k;sT8>RojB0CBhl@e=
%&]4$1f58C(Lcj<-aULZ)OrXMTZpI@nm3.G)KYX^O2X4HujXcE=.dLSNm!C=b4'[C(Q5*ff;m8k\"n6G@92:Wg9IJ#[KaN@Oa[5Nj
%AJMg5oda/]n9E-^SZDlUA_<;eVjrJI<:u,W`.s/P3H6it78qAa^7*-O>S2IcCBr%j@G;I&4`@iYDeL^88pWl<-@>6/j:k#d=HdLb
%?7p%o/ueJNl3pU1LeuK1mHe#*:(JGH=$?'+r8-EKO/qtpL[@dBO6N-t>%M6;\=Kq1GsJn-DnDQP4,Xi'l`W9Ii7VEH0.25(4$S/I
%q1>QESpCTId3QLP'db';?'X9/:k?oKf?VdMV3EPO=D.t;8^'85dMAFRg,miXJLejnjJoI:e#j`^lre("jskGjY-!SGg3><_A3"NB
%#\/h@,$&bHH\rBd`+a5sLl8q2WN6plCGQTe:cnsC"06ZDP?>'Uo2_Q:Q3VE[X-QdKkqGNY'LmVUEu)C$1)'7GKG[PZBYj]oe3JSN
%X(2+=edg4ikRW;]M;_G`k5Z)eb.]:)6KS6,S[k.<d#3]^8:X<*&a0['@H)%oEcK;6Pua0>aVa),U9]A/iSYNKk(s_U/4*!6QL#L8
%]FjqP.]$+O>,@%Yd!"CBRc/'C9CRF!8LgT3E&Dc4+CW':O,llG!P.PnY6kFFfoLG4jRaa3)"qQg9[;c5Z)+cZbUQ^gnbMb'2]G]@
%K6+;dX4`0D9Y+?:Mb7%=[:h!1.;U1/<C4gI8,0[#1?/@X7?2g/W)9pDOCYF1]<p]tW6[G(84t;7?;lrC)UXBgc[=>3KYBG_X7qT&
%or<J5B`^]$;-G5]\NPo-K>*C/+@C?HF=e=bC7Vc*Q)t2u8TEt>3Zo#j(GNX8Afhs$7(6i3/#un[=usJ\en/mp3?0j)jTK!/0b'%d
%"ETnCj3_7C0?E.HoJt-_V^`IYENBKN)Fqk*F!$0EgOn9)q`krV7).%RX$A-UipTk=AJ&f!<1r#k&0F90dB7:?^sn9'BI0p,.75kB
%;5+*(OpBqVLM#:F]e=4\"G]\61_-_jXN#'f&#3G?ZOeQ)<[5u^RR`MRSu<0Ap'h/:E9Io="d.@#8A&T8\ds(:WMis_+,e([DF.nl
%;S'4KZgU/4-[YP=SkC(K=bK`gG*[UVP&D?h6hK]=qo3k8J1HE"]SQj'jI@o,X,GBF.*Yf0Ef=U91o\GO,tk+]:tdQa]F*iM2KuK-
%\*/J`)kuG3Y"FUo!O3O-JjT'#=C<V:RL#".qT)P*f9')fQs#CX?m5_o.(3qNc>^WM_uRVM+8`1BRO8CV?4]W*\[*'qap.Hj,bqp9
%D0QOK"KEZua#$PQ8fCXHXC54$e-6FJ(#O1]a*)6NNY$NVB\Ac*>:tiOr-1C?7#kX\:D.G.CMkc3&RH-*5pit@LbY)*PL/#qp!,b!
%'1\\<JCBT^[A-mLG[TTu+)41JA@0r(KECNVh.YeU2VqRepiFLIeOfp6^a.,Q?;%tVei\Bn/?<`,KP'fVMR-u!;G62C%hYLmPVH*^
%]LXIV<'^8Q=fA4r,&6JlZXm:P.-OkJ>sGNc28C)L>?@,<n`->E=X%->=9>Q2,Jn%`WWjE)*hua3CUIN&BJE4LKH3pd]#]``U#h)g
%1;Zbe"6EpnaVmZ(.qsOU&E*I0.JV^G<Ce*0SIHtM"'VY2#SeJ)9U=Iaa!t+&)n)eXX[-AH<)g10=r+6.=XF:C@jL"N,b[.h_cE\_
%FJ5B*hHP<YCt(X:+KrlBCoE5!7U)7+:k;*G;-Tf]Fa1$P'hd#<c@jCo.2<\j(/87s<`VrCD#lXYS4RG14!ftcU+!1!e$gDdXN,"l
%(^;2f_g^!rH<q3i"tk9QX/B_fC/aE"U5+ZS.0_Qu%(\7I[>G<[\0ROJ-(lDtcd9[9_g.-lAPdr40p5Y&c',A@a!'.'>R5Co0Q&k8
%cKDfA`"]>?#f)Q,8*Q0M-DFZPF%^:Ie#udS!72o2+DfbM#[m(q"L'-A9ei7u')jdI1>3i`PXHC54Z!6R.gipmn/54LKO:ZE2dXL_
%N<N.7Y(C,fKX>e8%T87tKD'Nm*im8uc-'8nfW6o+&#":6]AXo:$C=iSgJ04*j\<YP88>q<3_tI9DSEt3(mcDSK2Tcs+^S33RV[G$
%i;P*].<#Brf+:)h/OUOmo1TE*KXoGF"P%92f$HW1rC0(,2DQ2jg'+iRMc(b(l,[,uZ&2$ZMT1!P?E`YcS;RT&p?b9\)[3::VF7BF
%5*Qd*0_1,/5a*Y>Xu9>.LrH<WAkb."HT!QL'2(j=G$56c_.6%I.d?'1!nLO#HqAg[IK0)q413/WR>l-`LcZB^0*"XL!'Z$f/@&QV
%qBbHZ7U7rb!R>l8fRQ-#@-XR2@;8.!B97(g%5F[('+.e6=q^Hje[T#ns._LM*ao[#,D9ZP-XgMGBOTr+fE5(T]LAboAr`NRhSa*\
%Of>[AZAGD&N&H;^Z+uH1hXC,VlTFrMh4RL'e@XuJ!)a@MUU7<G%3P]tR9!V<p,`SsQrGB3i^eP0ri0^.6kUu?'^[ga+hgo;C?ht4
%>/@LMjPgcra9Qd6bWf\KA'j&C@;NMA]p_`lE!0k&.R:1*E$IAp]Jnu0g/6Jsk2N=INq(s+jOGYM]siu!47"b[Q2R'IGB/@6au)=s
%Wk#i8W&pRJCrkVlM21Mi61p*UN5S-nUKnh[h_2R'DkYBB(G/'eojf!M2!$T7aC$8@,/h#]R5tmWjIMiXj)j)?-og5u)=?D92/DPp
%<SgUj'CWOMQb>-KQU]ZpfpS_PBB,RXNRIHZ?$]*mD%Xj8<-SqmRq/9oX5G38>-(`5AB'Y>V->cTcQl-i=/#QXUHRmT68g?e?DPJ9
%Z.1q1Bf:q2*:eA(e:0E:Dq7mr@'?%,#S;HE^mnQrSRK?+X;c/dRr)3"dsS9')g,:c"cA!T>'t?l"5-ugH3s=4\(Y#XL+[UiGK(%3
%,gKV'C0KDh[`OC=2=iVE=TnlEB*VlMs8D:\A`_!..1`j0#)#7##`D",BI;;3p`MarD1lpF%J&f@H\URDFV;ASZkuPdg<m`,9Y;3Q
%Ys)2CJAFY@+bLY%cri(=WuC0."$2F$CV69r9Ns%a,R3YE163#^9<%T@[G)*bUCW>Z**0,3G2!l_(qa-Jg+E/D&q[hBrB*nF7L)ET
%g'-nn9Bn^Xi(V!un)_q.L.OqHO&\:J2%/G&E%fQ\-IeP5IFc>U]/95%.Vhi=kUe<35;Of_G,JW)&o)Ek(2)O@Uc%2M@<"_jluh-"
%#?3P'm3(PLMmYO%5;!l;57+Y_lD'c;L[OguY<_\/&GeO6h*b;Hg_c%6S*h*Ne>TI3km`5W=k6af'sQsib7:`ODK(ma4+(*.b!FI#
%*^ab$&;ruU9J-3&oXgT^G,,k[!stZ!d2VK;fWreLBmefI&SpA@C@<R[EqH61GKhm\DlOQJf2ukE.oFX7fT_K;2,9bVb3u(+jJW'i
%c"nDGJ;6[sZ'$Asn9M_t#F0kOFmRtKZ+iWZHSRK?q6%9E(s]_T#"6P,,Xu%69-M;K#+r8/Y>dV@BaXJL/K1Kj$I^sMHSr25GnfQh
%l;`-N]!4*]Q)Y+eoP!mBHK@$%.VJoSJROCD2'IR(FTr)g-8rk;#S,Om2Zbb72KrW45R^(D%X@O(/M\N%=N*m-0FD:/?Mk<)kmQjN
%J6iZHD%4nPc3N:07#Xqc8d7)g(o"WT1a[1IV3IiOpgtt,B4*PS((t5\VPr7&Cc(uZeGK\dUJ[f\fSm_aSt;\Xf;Vo]5'XJQk<0sY
%)q,`m1rK2=Ntr<Wa%46A6adPE`(.8S6:C<\QeWl(J;&ed8q7IdA1%RlZ_\$3B#blI'0;seQjZ!f[/t$hhq9cXU8e^2Fi\BNh288[
%[7A\WB'YZ,!Y[YNX><I04;/@GF=g2;gsi64p2H@[=Nr(ZMdtEsUdJ8Q][^"U6W0#9B*?IjYiILgM<9C2!MJA>qRW\9FlE/tQkZk#
%;i<;0i^E:j@hf)7hXZV&Nnf/jLa&XX)IfBmK-RJu5o)knThk(`5"r8a/(26-TZo=Ie"Ip6M%'Os.Gpm\mCbW4)4F.%$Q>nb4.4lp
%WW+QG+Nm3JSP[AcXFf"ZhJ6=(NBpX6f*imY5Vd2[$<:Z^[c>'+U_!X;V*OO&mE@-XLfU0W/SoUam%)8KMXgjg@n[.<G.j<RN+R,K
%/F_qt\1RZ%h<VIL@B^c(N80,E2<k<R&Sbu)V.NW_S0q])]-Sj_'=g`EW'JkW+e&;W)nFj2W!VGf%:e2=(Y-kV%bn"RRKZDuh$'1P
%N6]"h%X7?#d$ha1Wj$an:Lb/DI7kkKZN6OXdL)K_\V!bPq%i$//4GDV:mM*cPeKT53mbn]f09qg._)<X"fXYD,62a(BI?m!X9IOS
%ogX:fP1Bep!7W]&T:cj[$l5IG'P[Y.pq9%qQjFid>ffValik>]2L<h"N"/1i]k%ZC`gg^-;3b2OnX*T:)W@;I@O2WoE@`#I[(fm[
%E'ZrunfKk\fD3iTH!mEj_l\\ea[p0N-\.,-Mo[(c]d8U[Z-nna,ClF_.:KtMh>hRZ8Hr'-%ru]tGS"UUKg,o@Htqr.;^Xs@Pgbr:
%9$0lF&Ul?/6-Un;Af^7ZQrVcX25aPn(&[IU12*=Na68Y[pmUl^#SfGEJ7kJ\)nCd6PUeSd"i"t^^/jEk<SQ&tf=YISH<?*-;>"kW
%R8GQQT1!/90<##l!fiQcbm.`U*!O=iqbJS??gM#'1KoGL[>pD_`@;G"D-o1DI^@=9CB03PP*6%a-k1?")Jdui1ttYDKELJLR,$1_
%9TS`Q,IP5kW4PMM:1EleO(/$<d8]pflR7K3LfJ5c`0nb(_Ibm5AOf1qq1,t*b1oR#=*13oJMebnR"3s?8*>Dh3a'9%-V7;d!18G&
%m[2-H&Kd!a,e"q*)VV:W:ne$@X,)$6/)(C;KbB2phWiWF-8`s3<Ln(cg:fI2SA3S.&s6m8<mW1B<#@HW*O/!:48H_=4*Ii8&ne:d
%YVhS?cNTl]jaO/J]BgL(^oXW#^Xgf2Y%^$lc3=nNoD?bM%]&SX,)h3hM2!?HSG6cBa4^GZ;#4p.2m3u,T%'gi!GkYET>R>HKZSnl
%8fA)Cc-5J7T^cXH%8'Z[E$ofnM5[c;l>f@rB%g$78KqKa#6T<OIKA1b:8'ELe1eJ[<&mYWX.cg$im:r5A[2&?(Y$hQ!V@KiQ^6dk
%UKZ4!ef=b_aQi\&/NC2-T*q@2>n=T%&go^9n9_"4KU@E&^=4'j#1/#0Bt.-DTu7Y6P>G5+$2k,h$]:e-+DZM6OLK*5>t75@bSAtP
%MCj[Y!>VP5[9lDkKsjse"]6^'k)l`jds?$(%a@f#-0.5^c@?X$XKAED)qW(0:!so37focKIW&=KHec!SB4I4u%fCi&XA,Wq^FWP4
%.Z!d<%,Ril_=b-<0hdK46463R-jmUY0?a'.D:I6<1]g`Z]M4X]';Fi@Ss:4;qeR]&$k;9'(P^RB0j5C[<qGIS:nb#WMYHJi4GQMU
%YtW)ih$/4"(<!.gXKd=,8%Y9#"_ZY.HW[n1,Kgt9DY3<o;[U<TA@Q`<B.OJl^q@Vfe#,h$3qS$U-?2s\E4@aYh<l9K.<\9F=BU?>
%bdrlM-Ij-*9"ACp2HA"iqIOd^[l"gm?dG$1Y<1[K=:EDLW"BtO!i8n(8?c):Uq.uefH0?jfqK#>0$7dPDJG-k0PgUgSl9j=FY)H)
%Qkn[JOhkb;p[6L'dBs4:#2W]P*"gPY\6`gdA0b-qMmMJi,V04>E)"MW8cfSK9f;_l"^p7>I30i1L3(opF`J-g=Vh7W>:&W,8ljpN
%X&XC8;1X%_8?=;0e(f0>bg9'VjW'qD>UP!'_([-8-#k779A`uf\WC)A\lGJ(&\;?M6]KZ;e"JqaiPfn!;F,mBQo^m+<$\Pi<,i>2
%#[s=)Op2a<i;BdA8ba-3O-_1;q'Vlq@d7>@mo6JH!XT7uFU=XY@W2T\-ukR7N7]2!/W6J8bX\WA:d]N#@@k'm+U72299O`pb3Dp7
%)mHT*DKV6]N[dk"NeGOb2O]oO=UI2&N_oG?j[qekA'C_elc5$YMo9r"2Fe*S1$&#jPg>hPVP-#n8-lI+iNjS"8*lPofVo[.Z._H7
%W-?6p`\lA(O;Aqg!$-A`Nm9P9pho9&_JQGcJ-qa4/Q`i.%67UK1MWM@Y;.-GFK-@@[^sHnFp$D-&/F3/nJZ!uMJ7*[<fH26TTXV_
%;Ac$4LNEYF/5h5T+%';K<!'[pCNc/Wcq_SMQp%LZ-:H/(c:6a$>S4l//9EX@M%I+U5l_0kY<iR#_5h8R'd(Vf.s-3Pj4k_-Qd$po
%hu_no":QEsG(\o:)D,7.ZY36We!Rg`<puuQ*&e^=!6)%\Q/jJcP\N)IN\d1$]EL=4O&qhX(L:]u)V@39GRe\j!UuND)KuA]A4rdl
%1*o(X*Qk!$6g5&C=_k!7olhc.%3a[9rq6U&UGGqUc7CVl_g,,Gem`m%e>71/YsT]qq"uJtOM1@f>NUhU:fK<CL?>aK[H^)t@.mP_
%;bpOB^2#4#92!eK7k_N+PjHrgW[:-V'gBtHiZIC1gI9"ZN&q33-:*?@EE+Z4<mE1^26<j/dU$+j"(EC71<;?,nC]3@7dS3N&dPf\
%S,UB!lkHrr6IfNC$fuTmb;H4#F`]<6o0k2KJhqe;9,8Vt#pU(f67<SUa<bKMFJj[_mH`0f?ikc7aloH^qAKSKeMnC-^ZpDO@Ilsu
%(<Ya`nLt9MqWYY5c;K)U2"2M*O2MW8q+t>.:27d>&L*BW;*bleoALPG>^N^_<EGh)Q&5_Q[:!$R6?#-a$oABJKZXqYOuSS9jN>&H
%$+XgI:*bbXR8qUebtU!pf1%ZdqVXfi>HY>LN6eh1an;+FVJFP&Qpb!%n2YZS*j7&%d"7N8+NrrEZnBW#6Tm"R+r^N-G%_Io4BjEP
%KYu0";AD*WH(0KP&*BCLD=oc4IZ98#bLGZKR9N*n8D9JV[WZ%rnJ:EN>%jTG/;ad7.43=h]H(97K8CDB\X$7=Lc<%<(P1SaMR3^I
%45-d;-JcX%'-[:A^'ing`%KBejRGj$`*t!6aOjp*,p9\a]OsMeP51g^8;i:7Tcuni/^:r4eI%K0.j4LU=10ir]-*[q&].`0>/XKU
%0=5-,l<q./WMEDE3oaaj/acKTo*.Sh+]72(T.Cr9;$#HcZO2T;nKP,hKE2,//T]aL!Z',&E)o9LLt$$h$7]_R_Y,797NiQ%V:h/.
%'Ma*]?B+h!+,bqlTs>!>Dlf>_82@c)'0C4^(QfdVc%R!E&?K$F;)5%miTO"?pm-YUpJ[i?TS)`pk^D2-0n]#O:^%/i7U909PL58=
%Q4aYc&pg#KRC>JHPhe#E=rWD*@"$*^D/^LU,Wg0%<1GOLIaIHEc65&-):6o29L@baY/)1@Y%Oldp^[uUdr>\0=jD0jp>9<d7ht<3
%UoZO"e9i07=dH,j@m5DRQb$aub$!u:8>p.J.$7<V"#]gCO?JK2OZ3T@GF;Ij/YrW-e[X#/I:kC"dGho3(bs"S3(olb`XlY@&6-5M
%R8$I`X$RrD,TO_%>/jO9g6SM1.r'4\!TqTc9L_7VK:M6?^EelV"^nB8Gg8!BA9fctrAou$+UQ.i65;<WMaWGC8[W++(;e4'op]([
%*#@h5?q30_ogOI9;$"T<rQSNQ_-3'4S:jVm*5Q8`inSSF%/)7^j([<nTa(G%]sfPn;5,<E$,kPDhltH[&LDB20lg(pTu>EcH!IfY
%=97g@\cSEV/o,^('WMT.@%mRnfb@"?G[,OLJn#NS"sd=k/@1B,3YGj-=<)&AWl7CdPo\A*:Z?O`o-%dV%sDk#!+DRi\ETm].b"#F
%fLfBH4cC]>$7n",,Rs9STqY-O/k9\cdg1aP+^m&346>C4Tu3b4CR`6o2%oBUj+USg@hDe#p953ab;OBh$/VJ@8k)2r?qA3#F*cbZ
%XZ?`2>a&"3W;Y,hAbF.R5O//NH8Wp#"0r0:fI4;\ANKi,ha8k%C$>rllW$G+7]&W!#bBqeW:Dic#Lj`\"Ij9,Z@Ef.+0WVO!j!K^
%,bWcNa4./`ib0BpKV#T[.aYXHR*P4ohh't:I&up'BR%R&3-\Y8<?dSp/?e8dag>)'gN$X!IP?+\QI?f]'_]Vn$e0+[,Y.TVP@Y36
%k`:BJOU1_#nsF%/9B\YtJgj*U-hpN<pcUhLEN126Z\nFS;iNe1."n1WJe>,Rg&VrH#W5s/+87!bT0ZR/pqBQN<^4"2eRG+^0i2gd
%8QJC>.bUsOF*,_H0Ubp$feqE18g7$m^Mf-Ik7G'-?f3Z=D/O2bFkGN\3k+^M]K+p7au;#XXb'lCi3MsHRnpfr[H)EuSLo$ie($"W
%Rq.X1<.h$t*]/RCVb2(^[b$1qKQa=EV/.Yr;XFUfd&D(L<h[ulP@:_q<qWgY"N7C;D>IS@<AAe(Fh=>o3[M&I11p3&/eWqY)2M-C
%Zu?@H/Eg:m^e4(uPk`h6"s,*C>-0`@R5nT%c7.cT<KSiO]&pD(59tc#)N4Zh2Wh(F94thg&L`$4910qb25\o+gIi8fW?\MF'U;4f
%iJh6:K'D(s+Un-GI$OJPC)dNO$3N+j7u'FdbqMS7OG?m:0n"3V?NSS*rQgrNdgmI/6<Jg68I3!'Ej.6R[3L:E*m%P'`gkbJ5fKr[
%I;IF^OV9U`6-fuT:Xp:;[[5"rjf]\c6!q,n)[G'mK+6_>jr1,:W6mlAW_np]nOUVCgT*(/Ot^CA)]lW4@s)/pNg`dDD&!GPUba3'
%1kZS5iA`+hi@kalK_;>h0k*ug[7i\*QrSbd'8_E'>=`SK,GfB[Zoi0D#g^1E"aa\G=VD`&Nfq//MaTpiII;>9/K,e%-V[l7pq;DH
%pDqGuR6j5JrNaggCMM*G.a[[sDK*if?"sb1a<9ie$:,'HYhJ%6fgnGF"-)q!fg]Ec$s4PdGMgE5[^^[q9p73n`eHlm#I(QDAmY2A
%j$&%]ctDBhS?t&^``\Z@*:+XDW9"psU3G+f$9XSSarkVoA.jcK_SCQD!'gd!Bb:,O//eeF10?]Yg]Kapf(dTH#'F-gY]i.EfSqB`
%8O^6+Xs7EkBY@DrgFA/LF6)MQmIHR#bEM73cjHdNIPK^:BLL@+4KG-5'="VAQud'kA@/Bj=r2;@l#F0+n7fooP/6BgF0R\>C<*rr
%/rdcN?P&a5jT8m!3,eUeBB$p9]<6g%s4:oDk+dtrs7,QaJ,7\C^Dm1LZcgfnDr0?bq;UK'DKg.N_G>BZcRrkiO8ehCo&O8(\u?c9
%F.5ss]mW?N#SMs_+5]fmo$>cLr6HYbo-S='^\Q4UEgtNLqB''BUP8mUl[d[tM`P[,Ku?9)4;S7N\q0?hPoL@E8hR"pJ,YB.&gq7@
%Ot?q8T1SFr)Zl$pLWDDQM(^H@ia8;QWVq9\5BDPhRm0irRGL!1>_4M4j;@%0.kb<gi"E<')`=(CNS32efb.\2)N^(F%8s9@#n&U4
%K$Z&5Q_`tWboMBU%:#3?eiJK"Wj<mNH-["a$IR#!)LqbQeMJPCOIAicQo5'J:%W@a#"XnANC%590XLN3afY7#oWpi<E8'W/ISG!.
%-]dJ0FNRRbb!Ci50Yo%XST9nV3HJ9CXdE&1^?<9VPuUQAH\*HrjXd1.2k!j?de=(@*bUS\i.gg5lCD#_<Zi+gFVhL(ZqN_]*(GVU
%_kiZNV8=HPBXAmNK*lj5Q1'-TC-nE8+Mq?]Bp#0ZjnI:L4N[2K"@sN5TXH)idGd2K'16F-pQPp/d`mbBR[bq%3u^CMDE<H&0XePt
%Zf3PnJp0,t[$&pM;eVUS!n$.\PKQqujb&2KQE:AS39#kPaC5\B2KKI5=G`#EEFU%Z?UBDKP7?Lb@!Z%eNS=a0=cH,LkUaVo^_MCp
%C9h.-TEq)rl&]SJ8d6[j-P.@W^G-+V:W<,aD^D?^(j-r9OMqkqj$5JA,`SWTd!Q!!&Q4_3$#GEI5*5G:E^j-Plm+pY]hV%9`qOiR
%JqE)7C[e!<VJLhkOsY.C"G'2u59:EF;"2M>$O2-W3H'jm_-lJV(j,O_a?BUP*#>hm9.HT.]on8pM7,^f59S*$#@il2NY?/.)Wd56
%o/D3t,:2Y>UH8/m,k?#)d5&.^#:c#lB3BB8[\_f]lYlVdjC]$d.>nh`3ZHBdOiS209YR-lm&&on0C!oEhh,"&;FV1E=MuCf_)?g+
%i$lWXf$6<Yh'g6UQ/KR>i*do9&8)_;Ue"s8*7<Rt/LoV/TsbrU,H+B%Ne=p7#J`G'D.ZLi7?9DD&g'eiQDcje#Yn;\jHeP?3h8e*
%)"Ns_K&UVZK:qM%pDKnh+"HpUXS3o?J.,*"`[gt%U1==O$n"[jOM"[_jV/[;\iYbT_2,#NTW!I@+c>1BM5aYsr@6uHoo@ZGoN7<_
%UV&F.-`HuFnrE3YB;P-bZ4<dM)U/^^GoOD,.[tTJ;81,1=idl.Feajf:i89$A:<pkpMY)u:-4uKaQ^F8$StLLJ=H0>R5bbaW.,R#
%R&?E!a>U$?s-lMu7o)KOAHom!>C%8lXU*Hb%og!C.NPBHRTAfTp+'lLS2>2nf9,b_P,?l813M(3N[MIY;@HP3SPDVJ\E/$8f'27,
%F&D>2ma+g=kopEn.?#t&=\s=MZu/b:H*rfKR@#c"HC&<h78!5Hg#80-MuM+(9t`Yc9>8klcCA%#ZVK>ON40c!P\&Xl[sG&`Js-d=
%%%O=W84N`bYckdEOuu!$IZg/D505;NYREd\'\\r$rTWa,_EP;5N,[ZWNM75=8_RF@Fs+g:-#VD3rt=d0'YS_hd0m)4eQDQn<5jO:
%VsSdoYG@#iHM4E>Ieh+1h/CWJG@t!D-TBq"rb`?s`&*kA&3es`r9E_4m.0i3UJF,QA@m8:n`A<W#o3D`oBWC6Dl3OsP?E#lWVTOB
%-L67b\n\S#16("iYkdHL5F@9f8S9&F:#@TV)Ja(sc+0TlTC]Yi/"]u)pKBlTL(O:$OI-@5Jkc#.m(gqpPoe8JlrsX"]N&r:Cis!'
%gHM5uUU.uc+c_6CP8>_"$_Zchppi?b']`CK_#g%Ujcs11pS@Ts`iN`=[\"eO6t&Fa&[:2^jrPF,hGl'I''uA8K*p.>[\j6"b29sQ
%l+3Kf;0hNFFl*&.<A;0(.L%ZPp_fTnZ7:b^l\6`'Y0n8I&fJY''(3AL=>YTtaUu<"9>;:NB3nR)@jKP8f6-uJiRlMX#:m`+$lC%@
%(8hAU"3"4a*Hn5i3us#-[Nflg%Y21p9-[Rkn_^>Imr[D69aRlHW/)J-#Vj@k_rjUY&I=+QO!\`I>m0#mF.n0gRHcu<Ac$)Q-BB1H
%Yan@pP18Et)GeeTJb9dDg.Z&&dNMMLi2BiPreD=njN+8*g85TjYbHo]b)M((KY#BS&&Wo&,O_q<rN/]<ra*3+\0GF1n1AdW;sGBh
%>,2;?X;7XFJ6RtoWJSl\K56Kb``3LbL)nA0ec>!,:Q*'D"+_TBcC;&RURNNq)2lBD&6Yh3a`J:%!FNg7Q(l)X$RT>%(B*V)KO56(
%Q`IMpcj,Yogat9G=`t12lY)saMH1V9Dq`VsBb)OR3nr(73@[D8=NnYhk)J.]A;[#u>RR66=Fm^00LLSGP4V9g+Wr"?.;&g2E%M3I
%Yn$JUopuQB!)[QBK+AAf_oFS?Z/114/J1H_].fc#Q>=4tjViGXbELG2l".$pJUQa&dF6!Zd'J!s'EdGfN/3jt-2/c>8oA$)Fu#\s
%#U`o,^<Pq6<j&7QbTb,"S3/QJ/*rUUdp!HY]M;ZrkuWb^RPF<o86\pPa]+Ot=G8fIe67R3AKaX.('F`g-*qFta:LYn9qeR`j1K'8
%3%p;V"?QaC&a)LQD@4_rAkFnXaI_pNVfN0SjWKpDk`%jp&'3a!_A;-t#&E"FhBBnT;Q$j?!)nq%aU#+W2,lYi+,3#B,K+''iFZY:
%Q5gXQ2G8>V20`!:=m&*b)G52u.M,q84_*skO)dkVi=JLs:O\3"dt!edGq#,M!g/mA,u$c.%RJ4n;CQTJ]Z!<_klj\`iAGWi?oeM^
%pnImRp??);Z6"s*JU&0/KY!)G1!N5;;?u/k&RhYAb;(J6KO[d2=-l:p5*s+J`(!H5K%4LIggi"4N%o"@<A4l\M$G8Tb6T[gC`NmR
%4,!aGaV&0)_&/tu(;q-,*&+f:<*QjaOTC.jiY3k]_C"gEZ;=JddL^r<WkuD@"XAV:c0_*1_;]_2euAV?:G1[@;\PO2oFOP'i/=Lc
%%C*=7j\\RQH?*.oL:Q&K0q0u6"nH]tPbA*Z(7-*U#-6!m-Tob-CkEHZ&t&PRf#9C,]Ek#Z6d8QSo+M"2)5_9l2jPTgETqesNjd![
%W4%+MU"FT]E+g$"dbMNZ1Pd`>>Z$%S+sf\<LnIsgWtgR',\>!A;_<6jo?::Zb>c)U8]'j/[%J1'\r_p[*>Tf&6t/2h&%+AS^\CpI
%V1??TY729kpe%T`*`L>9.Y+KgUHXM%1uK7(n1kVg>\l"%Mr75dZA9"^@n/:_,[;ShR9AE*RORe.@CX_9d&[V-7:l^D@GuHJTSqaP
%b>s>19S@PqO&6J_^M-ih&6*.aTHn.N<$OkN9[TbJ>(+U6cr%!HkF0'nAJ(@sc11r\ntELR=T+T)+pOL-Z$VN4ha,/6mD;M>qs6Sq
%]lbCqrgpRdmFB#b^rUPp4r4[fDeMR.fT[E]Q,rEHgfB%]5?<a:Ud<ojVQiLD)mEtdp.jsh&_t!+(5qKScOMPF]hA(7ntp^hQr3@]
%#u$p$m5_d:Lu=#Ek.qDC\rQu;QH4Rn<%OT0o'RbJg?7g7E1s-c.C'EakXq5.#"r`%GVV:'Z3R!&Vb@4bC``(,l+io*eo/K'&WU!a
%mSL;U2BNi+-k$l(WGi3Y)*iYo6!Vah+C4V'<Wf4D;?:i=<iR=Y?..:HTe5VSaG>(L'6aJ,0Xk/ubmt+,:R(Pu!V?Y8_]l#3>/sZq
%6'DsF(MEC@iY;I4,dW#M.>%B+&Aa3)/,jV`-TZ6\'6UR#5i`>bSIdM.O66;f'LP5Cod0npl60;cB]eBu)3U@!\a_*Up&?;_7ajud
%.!andga-,&P2N[tC914)_FdI!Y>"-tpZ'W+%W`7_$o8jTZ.Yo",\L*hBs1,mLI'T,Ac%GW>$tclMFCB""_+9&,&ij\_:>in$BA"F
%e*8WQ8HtH[(p8=>%Efu5BJI**X6&k3.'r"N=%8!<l9'C3HkOsY#Fu>=3Y*W[(mA,X@`o3]OcGrj500!hJ[_Gp.e+!7ge-+[lrQ.8
%T2dQh_bZl$No-gg2_KBm><8k9%Q@*m7;/&eMKthI]Lhfc1_!*gS`j".+6#eA2,&!Do_]PYRR[ueTS-bUeL1Z"am[>&3i^TH;P&.N
%JuMc;"f8[I%9Dk@"SFCBNbLZc@eUNUbht)1Jp1Z*'4E^m(J8(?ZiU4Ngk_/Za$m*_,>M:F09*u96q@E`@LIc0iG9ejS\F(<BH#\T
%1QMmkBIp6hEK+?q,o`'-M&gleM]PWpWGeCL/:4&@""i0[g:dI=3sO0:&XU]!RQ[8S>Hhb"RLP,<VTd,8!)+/@0Ie7%\BFU&)f:4j
%d(7"9J?V4hLOV/U*g>#_<1pdC?.5hZJVcr%D!ol/J`#$Ye*TY6IMF"g$DT<7T`V1IPaNhM#KW=4cRc;QQkEDKZN0E.35E@,ENTT+
%U>0B-Jcs/?YFfheb_53RER+[#c0SW<7W=*7J((]_.LKoW1\VM6Q#^.N)"2&s)e!5d5+4B7[5$Z?@jj.kZ-/]@2CNkGg7n/9G@muI
%RQX=$?4L*@&r!?98']dT4/oi30]*aN%o`e&R;3G<SGo4KN?Naa#:nnN`]KSG7Qe&I@3pI^[dgrV]\=UBked&L%*q!<'!l\TipR%#
%hDCl.J\38f#ge>RiHU)6!\V,eU@8H'q;b_a_^0"q^7!SB(dVZ!los0K9ou(Vl5GlN<c&cUKk25B/9j_W)Na<sJ_11R/np4*<Wi1R
%q[eFT5$E<EZ<`5hXm9:7?8eF!lfG0+-eGt+cZb_Rdr`>"h/?l@I.T&sMu<+WlWq!"*"Dde8o-]%R7<c+N$E^bm`*!Y6V!H/m)<4'
%DArmmTj0tmSkbS@MVt(?#bB<h68e@8G).0F\lRNqpqBEp'77&j[7Vl+7<)e=!>%j*XKc'aY-Y7]oa#L`!""*_B\V/K(S*VtFL1Uq
%\lab;WM$m+X(>1A9WD41.'g4D@'DJQ6!'0@>W^fMb"en-#7qY[Dcs,FXW/:T=B,)Y,k?4rB32>';6+`nHQB-%YbtB26T&%PH4o'3
%@NcdDCONTQBrm)JU-^9&*,?q?BX)Jb<d&/2McOU@e.uH!+SLQ%DRC+Y<nrX>$QoRm\#%bGfre\af(Bm$JAl5,Cl&"b+#$%GqOfR8
%$!F#a.D]W'@@!aLB%\P>o"]CC66!+YN!^uVB-QPX;/7PD#0:a@WAi\r<bZ8)U9+G-_SXYtb$!EKXfg7:#fp[Rmgk"tVJ3oZd>Fg<
%7>[qW=GVmKMJ;PfI&EWojnp7*_mTh3;NW_jGu8bS`a.D8m=a0pN#0Fh&mD\H9?U_j=ob8'^foKZD>ia7?&\joR,#+1oVCM2OqFjV
%=qXPJ&/'jt6Z5#*esSpPJRW/Ulo33W-cCN=%AduSl$uk7YiWXcGIPo\@KP^CLqZmQ`+:t/\-h?XXeB%Resihn<R21__4SC+/%B:V
%'F4Alg7E6jOfr\"J.7?8_2O+6-=K.@>M/.O_@DiL@N&MASC;>R2R,OSKOsME7-?mm+bfH[.neQHjGhG)$CDKaM%O/Q*\B.$MPkU<
%()R/)q89dJ;0H;&`pHb,pF&p\E>HHE#c@aHZ[pn$lX<$;0YToCFsc0ts5E86MeT?_VWiR/>f<^opO@G]L[.\ms5NtDo\Z:UqOcU;
%mb(+&S6in_WFGl(PKT0A]:7(.2lF9WO73,'7fIXSEdiK2qW?l8c.Q,jrpf:=r8jelY4":KE.2i:H$N35O#PCWIDk6\UE=m_mE,0P
%jeZWUdCsM$CB"g]j6N:S`9TLfC@gQ;gWS&m>L1(*%R!8.YI6Pb>`,RKd4_CFcklT]3kO0K)!1bek2c5ZoBH(ml)lPV<NXFCe&g_9
%29ka["#XER2TNFnYIP?KFeIq?Y&<[aCqdJB\[eo\YMQuS\\#F4gWEWHEH6,E[QWMN,Gq7%o1M,cB"s5<Sc3SLp#l:MAn,uUk2^-$
%eRiWIL&^YN%8gJaX6PS5h+W=5I<0mL?Ys_acHeFVln80U>h-D>SY[a3RrVm5DU*ETZ#X+"iPJqs?`-j"hbUt7Y\L=UWrIJ@p?)28
%meQ\3mE:PL0C5p1D=Vmu=KL,lF<7e(2Z8Qk]X6>MBnpLaFLAD`ao>#Cs)dOiEqba#*YRNCa/*DHa6/K[pqm$d%rT;bTjQU,fC.+/
%Cq!R%[H/Ap8ltdQl";9cBDMjIGbWC1g?lH,drcj5:!q$-WLNbP>MV4:I),\R7cmL9NLD6pTb/pR?i#8ubOckuS2C7O2QRoAd]bt&
%retF$nX]uNs6jM<[ifaQeim^Q`7+b.BYNdEm#U0i9pOrbZ:%JKSabut/-GePXm(DD?Jd?gi`"tl`6l3Vc,/R#_>>Cib?igmg^`<=
%Js[G3Uf2!UL&#"JJRY^=B=9D7PRJ6\3OSZOOMfnt%[:692PKGrO3-54Rs0/G*4UU"[s#T/f;JWf2a6j58&tW9S%iS2h"0X)Mt!XB
%NF"Qmb:LabIp\fWo+"Rr.fW9K[H'5uI/EeZm!HH?$Bj[D1>)LnqCqm2I<N29>5[@DX$o33*Ps769tp5F2GI49],@Qne,PL,s,ZC2
%]A*Pd<0sRid&^dDDsT5u0/r[@/4][2:Xf?bKkmR[ml>%d)?\f4d?rS?+u^2paM4oZ5j;L[UAVg/GRLXj=tor[/SJn$[\LV!6L>Qp
%0'6knq"M<afFTbZPWW^dZ]=fSN$H_+/6>C&C0WE!-jMud%Qp\Q:QsV6j3*uQ[XSe$qe+OZF6rlda?Y]HqcCmp:LU_(oFZ7VQVg5i
%]p$"<Y@%3d=nF*Nh:D"@dIf?(IiMFYp9ek#Qqf![67+#!#dk;mS\KV,gs_\jRC/Q\gi]B-].\#VfFduDAj1M1NUiEMo6b]Th5&@[
%Hhf=]=+@sFJ(abUeA^h..D<B$raBQtk1@pcI^6XKqf[b0^HB*=\>BZ1+3r/'?2QcJOj>X=;F%$"b?!4=^Y\^[8VQ&NF8q:b4h3`1
%p:n,JqIXs?:BLRfq<'\?G,h@IEDCqn])-NW]t-4p`dR]Y'[s4%*pY?=&uS[Y]<=0.ff\#:e5\jOd,/[7X./!/gUnf>Gu%e-XtEN-
%T%tFN7fUBp2;F+nd?r_hK6p+FIbr*.o;MoVdt68#E^s('Ym+u&[G>^!e#RHan,M*H5M?E>j^nU1?`%8&)Z8j,aYk7>lg=,HDg.P?
%T:S5e[+RqI<t#*/*[BV7,C@nNd=-S<_&rH*5B6ZdI5Pk0K4R_kn*/Nnnnp729R"^rY.mA`PHepPLi<>J6N6l2f2Fi)IenW!K(+4*
%_,"K'8"NLs3m]C%,f&N_XE`2&^R#9*U#u'R_t0\7IJ36<s4qPL;A8g9r7g>hqrud@rc3%#oc[SSn)>/sD/"=A^O@uP%n*t5_B53D
%V<Bbb?Zt/jmVdS;]/tN3,0uaF?g^[d20=3=(S66C!NhO647_6%&hLBDMn:p/4>D9bNJ#l)7c$)/%*\'+FC(1Vgm?:#m,+dN]bLFo
%<K_QSkPTRg*Il(M*T-ZtIrA'R4l8g6peMpJ),mXmYNcY!4T5fF1?WcUPCql(-b"#;[i`J0oAf1,7o<*Q%s2JXm_DRKQl7&)J(80/
%EVc[Bfn%FCpZ9"HB0OPWja4`,IlT_'SKBe'[s.#mI0dm5]2Mu6hq@>1S@i1m/X(GNs%'joDeX]JPhtDnVVG"+06an7+8=3I=1;8o
%DsqlEK5!1j(K:.ARHS7,reX4)8^C.=mr!VAVp;nUA3\0,LQn8opZi'\chqX_r1D([HusCU\,#=6am%?J5D56q(M!CSE/J>#"M>\S
%TR]T._k/G$VP.2]Ric&qp)^@9E3n;9IQM7:=#Y?("*X[a4f@Y@^uLI/kp6H'aN`;@on2aDSa9QEHjA9Fr17q8b0B2Z>`Qlg45$5%
%igt1Qb:tZ>[lR<'n"bpdN\<NBeTHA'MM^\\!Z9W5r1RK!RQS\m9d\Q!acgPkA<MB<UH"XjiVpQ]$U=Zln[$Ej2^dLG)ubcePIoZ.
%k4K#IgV!kcr>Wk8p.WJ%bFV"Uh?/1Q2fFTr[;RRj0`(K\N5@eohhFLH90`*`X^8X'=oK;.f\Vlh3@&bt'=jjl4K!;f2/uqW$EX,u
%S][\ErV#C=g>5s?'lN`S4W<,RmuLB).eJc\=#YX)\/0P)]=HC7oC&QMqWQK*-$RN0@B[u6hQW[;2((??n8Q%=<pJuHA34jq?([YW
%ch:&slgM#IhepbYF=+N*gIVSHgNoOm_o_#ramI&#=Lo%*H2^+D=J'nUl4(?#oZd@KoOEbtb/?E:s-&hoC?&YH=5OZHkP`,Mr;5-`
%IuCAE'r$S-OqR]g8<fl%9acTdTKg88nQq7LT9R(^nHM&;07^\'F[uIL]A%^QFna&grQ>ZK^<Y`a/p90$kGOfq^>&0$*/Gf%A!!Ro
%fZ3W91':B7S,?4'6.]K3k.bLk0O#LRafuCgGIJW6HquEPTCR='d&-Lj/q,>c]BdB0JuG>u"oUrq@/N]9kq>g"DU,EQcF02qcX+:/
%rm5k8>os,':IB>JF`Y+*\_RL'mf0j?e3#8O3:ED@BkT674c!cr(CJ1\Om1%!+"Xn!lg(i^s*n_7-KQ(o]&E>D5CWUsJ%hHPpii4!
%).<'_W4hQ81T-[+ddI-]7PN1;e:)afH[UA6Sc%f;>g#@NM::-<3)f(.RJK0\b4ZVNc[Bk8IqEcq@JEcMJLnQG%H?d"p%2$e]KJD@
%s4bKp]GQLUJT?NJT(^3"aUd[9r+Uq])2P:#8)",qFbenY<oMQ%^HCbXq>BQ^Dg-Cn:[r&Ij4W>`oQpN28+le*o-o-:HT19e`VJ3+
%a0KC3qtE=AGLqoBb.E,O]njQ;3%hals8>H@@/p.cg+T@pqWd@l"MHiXrS'GLhk+?MB42<4kf=UuRj[5Zn$Vltf_dF'e6cH_+38_#
%kJ>ZBcQiYUa$4Kli\n;:Rc*&3ee0Cq3Lq^XRHcu;^p,!F\M=F^T1`$qOD.Au@@7Sol\M;"B87Q$l2C;Dd20s_^hNZ=QM_.um,#.6
%iC>t%5D2;Znm2_3qWN?SGCF^,*MhRWrS>*\q;X)a8%7mk0L3P]%1mE\!TF^][tbD(+1uprMZre0*fOHCDpD\&HKV@?+,n`fbo#TW
%#E':poQdN]S!.RKs7kd5aZ$9'W,tg*n<^%q"470q:UGZEioG.WAgTLLSH%n,RQV<k]tJcb?K`Jik_Da+nlYgB*olu.3VHmOMB##Z
%7+[Yc,-Y3LL*V1L%ud.(U%ut$DYrR/`g$)4SSetM8H/Hq:X?N4FIB/!$bkHQqukl5n()^WI_9[8XINWuc7^^2Q^.0cPO]OWLmIJZ
%f69nUqG1b-hjdLBq'?O6k7i^C'>RIpB`:l,jUXb!qP_6DPQlJ\_7<f0cf=L=`@CDkrr%Thr:KdtX8r#..(.i^0YqS##MBahG'FGp
%\GP0q[l76LNdj'`IqD4C4$N-tqVo,VPDccrgQ+9VUdP.MQ_Zl2UU[c</ui#<k!ZEscomZ6^nHb`Km+468+tR0$f'qBS]:[i8Pe37
%hu-W#&:\hGEID^0E?i=7eB%B2^<*8L@QIBS]#J^g\Bcd'5I'Qp&#Q#sioGK2GIQU%I.?KiA>AddO8eaol*%R?2^d,4s.[(!O5":t
%kni*W0-C/iRkpf11EeK$8ihU=jGST-KDX22rMMu3.XV1`-Ld)EhEM2?;crrhNjipPear80T!X;<d=:2C'H/4r7>5LUeOBm@P!;\@
%A]:sl#JZr\()4nj=`/@*AMk83<`bs*K%AJ79Rl\q2nRo-k328h=ef;BMXFW::p@I4<LVLNCDD`'^0ND/`\!X5El#/<2*ss-Xgbq,
%mke4_D\_e=`G26JAQj*err2@rI=\9K5ZldJ@!4XTBUYf"8&<Pe$riu40D[-E@JfubjRVsRj53XE>g9.2V8gcX1b@e=MXl.;e*:$+
%C.5+QrT&"5:A!]+cE=$MKhd[G7VQD$O/&!%G5hL09,gP'HC>;?Q0(r4rh`,lV=O_q_VEeCHT%fUL:1k^q9,QtnlkB]@;@"b?<k8A
%>*JIM1g>.*(&3-[EQ*&!Bm5#$:C1k!g&.uOfM1#`DuCAmIhYR,+%sAgiII\;hZ^J;.Q,F';uY7L2dC=nj`I2Z2u;Alp\r#JpXS);
%GJ<nFjC\"qh`Xf`]VsARM#IX.Co-iJC/0(o?T#0QXV5V+Dg)_"Krr_o.m<q3Gk1-I[lqJMs8BhRl(/to<DQJ,]>F2==d`Vl=5r7h
%4Y';Ccm_cLMq>R2rOsp[5C[FBcG^=($6nI/qY]FIj''eG[kj'9.l6A1k+aRnq84:=s2/K=9hj*OIWe,erpR0Vip#'%HtqpM["tWU
%[QU2rM-aV*q=XIB5jJ1AQLTQR(^QFI/k[1-#FO1[kaWe*=)[Hf3M,j?2o6c^e%93RD@'KIl5G`)@?""%n$cBQ[hk5Hs4`aLP@qZ,
%n!EhD8[kLFl]gJphjmqP55CcD)_:a7mdBK8k'4J[hG-^PC@Ut$NrSt+J"%U8J+1G%mWNgGm;>8n0Fcjkh8u_(o<Z'tUi=F9B)BBR
%R5F#,=!or)S*ec%e]kJfVBL:sak*o/+'J<fUaJ^\*)[U`(CdJI&!lQ#n6jr#!.V5?r&o.OT=!b(gZt&mh<"@Bl#UL8)h=E&RP=*g
%k5+.bHLT^]?+`=54^3f^Ad5"sT>/(OIQK.9C&..6cMkZaVa\g)1&HsVZet\0GPgNR?b"eeT45X,9r4`+48!uI->Bj\_8>)7?>[Hf
%RMtqsjpLG>U]:8jme#l57JFXul9`>]/Ph6>-i`%_/Ao(/]r.[7jXS;kR7:Kf^1-/!YKpN+>'iRRg?52gPM:"tQn<*qouX0cT&3?H
%2kRar]<]i%!poWIgO*ii^>WPI^YNbqVA8^fjS\(Z]:S<@:TbDrH8f]Ka-F;Ko@:,sMo+6?Zg2<odL5\sVsWu")RTg!EK*\Bp$M20
%RSKO1ojZLoTum2HDboRffGs@oh4=#,T9l2*gmlGM:1O+Mmei\Pm\\Z$^=o0Ke#_Esht=JUb>)F$h>H]MIEDK7X;0)`nY__EEF@1e
%V<sr5`mZ^@m#/&*T.dc>gO*2eR-%d;]#Eo.#NWSQ:Oi%u0Z)2?A4%tu<V*LRZKPWoS#iJ_&$70q\uq&Xg,ed0bC%jDTQRLa>!#6c
%G/!=pc==:=eSrhUSfN*C=)G?^c7XCY?JVnEi=XPj55]HtgiTa7^"_AW]K*[9IBf?GnZ.S/+"DGSH$Rq09;ZN*#[?AuD'5FJFhtPR
%gBWW&/nr.n5&)qO+91g&Mp$PT=1(g-Y-(RX5#C22Tc1@@o*]G5J52C,$X?u#KBH9DqtGJ29=A?Vk6!$..sep.GZX;`H*]&9HYQDs
%Fu&NWq.lDmqe(=,1bJ-@\aIO@(7hhOh9GBeqT_7kJWm]m$Vb,TGBJ2Wpi;c13mhmC.t1j9bMDItEZ!V:kg^R<61*T]L::r+?R9&d
%hS$FIqs*mHN_tqfoBVmLYO)2C\&tN!`RUqG\a1@)f,*>W\2_%pk4\*+Y@"rR]!KlD&]J\,U\;dWG?<CW/pk>0\dcH+_UJ=b4'f;k
%&]M@_5GGNmq@R:OX^9=:Q"AeGe]H'aMjqlFFEZ^MMI'(SPdAQ:Y9*Q2:"PU-7CXRGL.k'l3deO9R]a[qT:JSb_4do^$ieQ'X#om*
%5?LabU9Dngn(V;Nn.ontHcjS#O+!k52lA=sVRIIcomJoXb1pmDQhP>d.<BpOeQqY<+)=d@jF$^]gIIRYOaWhpc3'?D\p9:hl@!7#
%gu!EY,jnrM<,.llCL@hdQb'aOh<fbn]03oS@G8pU0dY[X(3em5e_NCCL.\nlDZ;bef&?es!L7nPG'@qH]t>O"Q0)DCgrb[!;=s/Q
%'lN,>O[8-$r_gS]h<in]bD1iLqYK=X5HaH8aLKTd.ulN8W7[^a=7"3"JV-uQHghT7$FMmp_u=.[.Wfhg*JF#7bf0GeG?;V*In@6V
%p?o:gY$D'N%#9`6,?+NV@boDt4.W=kW>Gm/3=MfP&*s#"GNW/pqYKjR(TEdNdE3K4E%43On[qTQ4_8?Hmqu=VLH[BQnN?$*b58n,
%?+T2\INZ&]eSiZb7o--\:jCIGa:CD5%dcjafZDqO48`\g!cMt#<85[V%TCL(DpGM`1\1++LX%bT"5*FXYCHS"p$-abMX^DtmJkJb
%jYuA3G;#inM(e'PD@a:=^::`-:0KJZ6P'0DFptS+Ip_j/r,+RNe!!DE-^>0;.d[bmD.!))G'ibM:>>b@Hrfq%CKq8/_013SZhsdZ
%P+>S(cATB6;ZD[(h;tclV&sIJFBMl+I<Vg<8WP:U/`_?+Slp'6pn;<`]mk9VoS**/\8RG8_VrkqKkL%oh`lGWL*nS0n>+#BT!Wa[
%;\j:rdc(^3=hJ1RGhibBpHdI3j9_kG/6;6<b:tPLDg85U,?JfNYMP$A5@O6]6`]tUdfhF>U(8k`s7k^AT<s"EPErD%ddm',=hal,
%bL\siq>0dTXUcsis-2X2(X)RPp#qacp\n+>5C3/%V^u3TPi_3@/`3>l:+dVn]C,3)f0*j8\gOUcpS>4_T!EOqPLcm`b1_"([9N@Y
%FSh[m@I:YFg:_tj]&hXoYjt;e?2'Sklh\#9O/B7S?K:00'@$AtQeuTbOg(7aeWu)7".d_W$,;oSm)SKI+ibtfm;<>A$=jKT]aM_)
%AAW:sOrhAap(<YI9M=[GnejLmmhS++<haXs9uX[kd.ErCDY)!Mhq=FaBUWGoH#Fhn+Z9C</]+$5V3S=i!FaUgWU3psj]&6+TX.h#
%XtKP@bqnoR?UbRs-B\<A,X7<E0B\\:r;Ff2k<JV+^OH"YH\m3bp"[^Ub2]Vbe6]m-)/[$_=j-..95X@(bhaNoa$\P(<gick[es/u
%)i)YH;;)'8mD*k[H>@#nf.Sebdc7@f39hCrOZMY#i+R$jD':82a3C](H*.)Bl,D=,7sN7b.11L;e[.MPA#?_87q?,D[?XP3%V[5-
%ras;#c?7Jd_t0i^nlr5oR[e;VPJhnof(WB?mA+^n\$Ab,7m@;0-h2>\o;@#Q8`;cdX_WN`g"n&gbR%t-8S"?EFno4_Ou%0ojYRpp
%l&_(KJp9A^e9uX_#.`)YHY[`@`^fA0`*9+57Q0sElDLR5iCp<D[I/KqTY,kSh!JW?Y#<dBpoF9kOZg'4e:,3T]XmC11S7uWfl+Lp
%L%XZZO5iFO#>_X$Xa4ip*rEqli^D`.Fhp+m7+[6BH#Y`@4qZ)\>FBDFSU@'+^85sEYal><9BD>sDiE08B68:%UQfj+`MDifep-NR
%'_BPH!`KOfrmlpP>4fLl^:r=eq<08le.67@KA+GZP6ZB'H9uUDX]"C?WXXBHCnPt_l+l(GngV4VO(fFYCMR5QQ"!a-X6WIP<0_aW
%gcOmAp"q,$r?T*SRC\l"BfY(o^",RIak(NQC@BWqqB1:\e>knJ38WfnL4e#OH;>\hOPe%r*Bfs>Z!3ublW[.jCAJhr,:J;eEOgaC
%GJ<aA(:]e\.r(B3o&0GkDnBUrU%rQ52CXukp<6gQ4nOs4PY3BRO6t_-'5+4PfuKWTaYec&F^+gHQW"tqVjFJ1$EHcVT^$j/@NJUK
%#VniU;10AD07?n\qoRAeOb8X77a7m5`iQ8N;`F9&N2"'_rB=oAld9QtM!c)!q8,*OrW.%tr;N7HIXh0kQbWIqQhS*fOo()Vr^$CV
%"FX0o/^u.FIl-oo>uLWb>uLVW\tn5UJ,fAkmX.d#5E29R'cFMV^!B-F[.A#1mu5CqlXQ6A.EX#jlNq'6C@1g6XHS4-?PoV<NT\DD
%2K/'.)JrS([SE;H<!QWX:6q7!Bj7'#_"hN'*fgk&N>QdM6l+C86VaO;pmZi*qA75u*C-<&7`gB,dSb,V%KnmSn8NrKYA6DQ\3_/S
%fj%=pYE#Z$.=hU8b;J?RfBSFMG?AV/F.!S&m8-/I(pO/>'t^J]bYX+^C&(E=8)!.$l*T?T[&cVHH%5XPZk&"b'>J#s2VHN!$rl@-
%jJX)O;'^r2.NSQcLljtt6`\a`9=rLtCKudXTc_<])f(r&F=_;N<b79t*?<DNL7rFH1p)YA17BrflG8bA`R_k<:N(R%VN26*,_NtW
%rD\F<fIEICKLebdnO0uIl'm_3V*n,`A39f71U#\I3u&(0r0gBm/-BAVm<n)]pa.MH0iWlFD14]Yi:f`Uf\D8;Y>EKf.0l3b6AXq$
%,8S%71rcW!Ks)IfYZOP-78amNNV`U0Ks)I`rqA)CofrGRfDkfarr"0,Rm$emUmF;[d`\7kd^,D8muR5A9f2KcBCMlPo2ph;Xo4A2
%Vj$"S!]l0iDikJA9(+E_F`N@gOD-dnUt6:42_Lk1gU^)Dq4KhCJGkbc$gsaM$0d/UQ+t1R81htjm,D]?iZ6>\UQn6"7(,mJ0kpR)
%UM&f>9EoVS7-_$)T>]VB=#=`%ZIu<rBpt/X(,(g;WS^op8kW(/WQZ*UYL6$bPPS8*jR[G.69&A0jP3@@E'_8)W'ZdQ1Kk\,`/g\)
%Vffu()N>RN/4i8L<Iu8Z?-qe2,(0Y/'$$cWolI0jX.IH9'[*/-lH8+"(9LR'W&l>(H'G8B1*;NsWCiVBU`%okm[Dp@jm7%_dWTY\
%hE">`V7%'-k=fZ6A:(9$<@+C2%&P?C,ZSR0Cba"0I*L4f_-Et-O:@62+AM?:]1_u]h*=PbCBo?]L/(L^*tRq:X7!-JP*R8-9l\^8
%R:hW%Y0Num85aI48=,,s@E41E0?_L5`5sa7?->i0\=(>sh<I,sHGn)o:TAXX;oidGaH>>L(A^slOm?F<0HkUcCiM<;O8fR;NQ,Kc
%eq8ZCb3G%C)T6gZQC6WD4?#'UqUT8?GHX\DRT$nr7.$#SX/G`"\[.r#&L-C&Q-&8[)j@t!pe)teA/:6'at71J<Taum=:lU;2^d^G
%fiqbIO6$YP^5k"K<,-6,%N.*k_PFEaUNm1>``5UG30fJQdf>6G.RmI*O.A6God'cad$jg5`+^I,ULZoe-kUBGED"#H:IG)OdU[BQ
%L?`\K@jI8UC6>;>%HrV44h$<r+_f,@MOQrP9YP^#nmHWuSGXsfm[1iG/V#X[AbuVo[-B)XAsHcL=KW#DiHn*g?+m@39pcc_";-V;
%feE7_k*?i*92a9gWT]N!^:H^'N5ZrmbQ![8>A%u`r)A1"GWM8eb,u(Ug-_1'XABXD%8RKPLc<^aLZMdk>:lTAV;JfaSO$nT%YHr8
%#(Y@J&db+!e4eS\jN6oDLj\[`%lLq5H)n\7V\1&adAR9I-&EAg#5MSgd!O3".Wb\'':Il(G!_;ZNRNj=<RS[D'[JO:Uml%c<&$h[
%BU4Y2knD"ce4^FKL1E.rR=Xb.Y'A#FNi]%JN5qfYELXNtr>MGVN*EW^W?B@HjJXFDWR[+f:,GkiRQ1cpQ^q`g7]DJM,$#54A@/8L
%h1kaS^jBe\NOpS_F\=kkg`[Q_$u^JU>kP1o2_!ZQDpU:#=_F@j;E0X[F$Y(X/h8t*7neu2j"q1D)UHZ,G1>63<8ce?a:V7n/&m\>
%a[@\B4XA?td>E1jP"t&C@nN3c>?U(nNi=+f@O:;8dd4,!`J9DSkrTeaaQ[.bIC7-ESeD,\)*lab%8VJ3`YBY=;1b4sC(\>3#>A/9
%=r1gK<k?f4PLhko5sq,4Na^D_?+.)Li]`)fb=;=XQ\`CRerHn$B*C&4dKKJfm0^#Mepp5U8hK)o6i+mhX0SV"6,cCSX%o3E.K'9n
%ZPMV8BpM^>$66ABQ3jHEP9b<oDg97,A8Q1.12NY`GY5Bf9;Rhnd8`g7#5&@"-QM/$nUkR`+At`]k/\fn6cVPQ#DPg#Rn^rA9s(Ib
%QXh"U_sA`A=`Q'X@q00.dFDoU4@n&W$iWK+?nfU?g4Z8/DpG.j%[$Cmnl"@!f<+#kmE""=m=8fkXGoeUTq9;.&%*gR:HSMZBShMo
%\KBlLK@gf4Y;td'Tca.NC]R8nXr8n3O;4tW.aP]Qp,E'\KhUjcONANIFm",%Lfm-'V_YZLLThJ4dgEnWmmUue4h5IO4h4tg4i,u(
%$sJ!,fQ!#.-p)T*LFkCFm],E.rR:jZjk,u`g1V/34=&?,U-Is+DrB?e'%$8c-[\Ig\#7fGdd-;[h_h'a1;NJ*K`V6Q',RY/T[^0(
%ZG^f'`62T,>`$B:2EVhcPg[p_>q>R]\(snYdCRU=3MWUTMbsi8XQr!i<H.$&#*mfZ\cjZVhlAcKg<qf`<N9"-g@MO0<O7QL*O<`j
%.e\su`3lb'AV0])Xu?sVWgV1?k#5F3+.ILRrI%5bjTX2uk<D&-C,[HrF]$NII]!Q/7AB*mTSkPr;8XcP<S)ecN\/QOAWAJD!9/VF
%?ojJ81^>[rd_S\VW@K,U,W[0Y=_nkG#>Sp)[u/*h#?SK!(kuET5cis@#AQ)qe83OKg_kC_#"60QZO5orl'd0`*=l7/@>Y.\Rak'j
%8r'*qj;iuTc$K:LRVe3*0][(-^Fhp0`Qb4:*B^5U,3KgO+(EDkCOWt7n3d'5H?]\\LE4oF?LO!TOMWNS54#1]?s-=;P67f:pM:0[
%d=alLfa4'X82P<ToAhSAO_C%obIiSR=<&MX'L&R[kW]uKc$drDHK$R'Ak5g^8^'8SE_,J#l?BBWAP+Gta<Y*Alusf>1V6gQ6/hDu
%6u%K++Tc590QG$)-fSZ_M+H&D0:@Ed8`GG&<tZsM[L'+jmP*`;Le`m4`m\QgAF[X9fJm\g,P,jo"eE>j\[jJ9c1?5<c"2D$@*\XT
%=DeT1&.^cFb".`7N+!Bj3ZCYl:Rf=>P/'B0']++0+sd8P,kjH6FN'gASOO&Vk#qjZP2a4IJgjq#>#H_+Z-+lC"(m%Nkc?[<&0p+9
%A5/RKRV\:;l;cGfGs[tnHE<'HejO1m!7#?n)nj,T2j)["&tM:JPNW8%[7bI;Vn17s#DpaY#KHB3*0AIubM5=1/a7qqXUl&=SO7TA
%JOn;u/SbfHd#*MQ';d8rP#&[3o`l<c%PZ!M7u64Qbq[h_/s5eeT%h05*9tig>"QAMG9e?V/W.<l\O]hdk2VkOof'MFh_A[TVpj"I
%VPhY4@9':_ATDQke4Nae@lGp?bGMo"J>>\fYDltIo-h/=`cKn1A@JG<B`=$e,gBOK=4.K'<,^11QbA[VV'KWqbIod7UomIdCF%Fu
%Q85`Jr>PD2k[r$N!3=E/WRg]\1Xo-+$F[NRj7*:'iA0pneZ2=G\R@p9Z3+7s*NLZ,HL#%g4DZA005DQ1.qoni;N('Ua4</n<AIWS
%A&-A7=_Ypr8[FT%R\CQrm0^d6d+"e68]k^m5un%I3D6h29^O+jk#JQO[("Gdkp1ob<P*&RBN<lqY/-?.*[ED"\$KVJ/=b5Tj'tL,
%gI;ChSRUD!l!D+X.r(!L&EZhVg='_`3i%,qd7U<XQs<WmPH>b9('<kpM7.\<7uO!:KW^<4`d<)H-e-;$WF&dsgM9mc!_]BD+;R@c
%%oL$`W0X*gChnk;7'e3oc9P]@VEp2Snm/W97DViG\iLT/b;9b^q7qlub3RWOCnf<lfb[o_euHfle7Cp_jX&kKDOm*$2e?1eFiBij
%]$-Ip`C"/[9ipP'o;Rh#UG.rB>D1kEOf-L7#(E%T@,-i^!j/`b_Rh.G^Xp;>E(T^([cOZV?OOdie)nQ5D$:JT(5Q/,^t:8Kk[HV.
%RV$!A.]O5tPu[3.J_@3brZ]lV[1.!`.'#halI4'M4Z_ON7dk\kZk@[5Ahue=`W<1GIGJao[n#KrBe>HrP6`g(>1^or0Q5D<;Hif!
%-hP"dkemSNXrc9gp9!;XAAD!/Y/'ggqB/Zf**+JXeeWB:Z)r_Ylec>oQ<+)U7&6t'F;(qYSZB"@R\IS!+eA>kK:OEt\W`>!)]b?E
%9tS*gVE9i`KoB0rI25Cuc4anbQBEcCatO\g`CI#PrnkFj'1W`Y,$HjcOCRtGX:P+HYI63S6U"Qim>!&UPE"QTn"KW<8aA(p)?VGM
%7$:WanOW,t$a;5un/WAu9@^+;bE_qF[*[VCSZqQ1V^[YaL6[Wa2=VfT#/<`-Gks]4SF`A0mc`emGNu6uk`,9cB1\08//g5Pa^T*U
%3ZQT_VBg`ak`AC'Z@A?f[4iJ'[EfC=2>^^b3:JYS8EucWIl+aeK!<U_<0m"C^k0[E/L59&eo\<)#5a0i7>:rK^,11@PFUC'MDUbW
%@&;NXc+>H0V$c=F6rPGMN/57"GmK>2=H+"M4;)T#+.83Kd-<WVj^coq8ZOlJbH#7TS-3.jdBE(>(_JJ:LQ!M8:?&>dFMDJ98P12>
%TLu!rh4_*4m,HFRGqPPZWTL36ab+4)c7j6DU>Ou5*9aD\YpqL7k'\J^Ld.LU=D%8l]edi3b<^OHU,dU__43ANJNNTaUFXna2_d^X
%Ia4,#@I4C>6_q1#R7BZb3&cbPe^U98P3lQE_BQk/:nU3:%\l;"#JtTcrE0THd&!=R4L$4[g[G49Pqt_L_-NTUmSNMS\*nZsp5s1K
%LUSJqcg$7N`Z8Q;Zq":saV>^GL!CX.]O;JQXb>h4Yqh6Q2?EoKOl/ll%>HG]M=j5*ZUL[M)2oN4/o<:nQsMM2Qo[%#X=;Y^LrJKJ
%R\=>oXP*t42eR)5@,Je_F9**$1=D>&@-QIIhYtI@m<0I`n+;(Dk?Sp_^:Bo'A$J!\=3(HO=6M>@$L\FpC*;7'"t&pG/>4kAi`6Mn
%VbalCkNW)JdCY!@8B\G?X0<.R\XSQ!lH5+q[BW@)Pn)D:G:#Dq'tjhthKTj+.L$4T4(7`7jc1rW"M*!W;1RG9Z9f"@Vo]igO?60[
%Z%CikKn581#Dq[cA>4::Ci9<ee'=S+MgC.Z'NB+PhDqBI*fJlhP,b1!S:TO:#(!33:+=[Sl43HHIM28_\8f2L9.[-<i1Y:]Z;L,<
%E_*B2nMHa4E5b2F2l!/-3Fq8c'IXHjDcAiSTQ-[_ZUYZsR@ML6'm4YUkT0;.HH3p([:<hlYM+Q7R<^qh[aeZo"0#;2e"dle\T?aU
%>2JA$<^mWUV[B=;]+8A!["k\Z.dER:9-U$Q:?\`dT,*7H*Ur6<#=;M.dqGP;HAA#LfGS`eCIc(eC`:+^%RjdfW-9.]H&t*^[i8Tr
%e+>I-W1@Oa!8pDVmU!<MB`U0u[DQ4KgB_PLf>P$5e>I6Xp<[LiH($Gt7<[#\=0a(5-AH]bQPNM)FSG4J(Ye<E=]],7hD89.cGr5E
%(lAa*TqmQg@8NOabS6:&&ucc,cg)*pY-e[IV)@drPQhC9r>r0;U8ugc&GegsPHfP_3'&^/7;)6s"u\<1OFZIa'+8Q`[*d<T?g?:J
%Bb"_(f_B0PV1^!(P+io6Y<Og$&A"=+.]9JdB__c:Qo6ug>g`O:HIYJOo%]C/h26UID3a^t@$?LdAOO^ifMJQGp)RCP+&MG$dKGWA
%$9a8&k]r\(c"#YDh&+C2VN!a0cAmYYO<tNO_d8PPR=pD"!7q#KOtQT]PsRE9A0T&UHV#<On-2HLc#JG?Os7LI;=]g2TP6.m-@/u"
%`![+m4g\Dofm@8pZcNt*#lQ2k=SD65SC)rTTdfNF:pJDsQ(Ck&d2!YALG.Z1MFR8IVs6KC6R"7]M+mPT5;=/l2/B*ir$ZmdYc(;,
%WVl-_&ebs7m?\\5UHcEl"1@M)7!Y\Aje-nC)$kWg,)cQ<NK4c7*=lmES=glc,7HTD/Nq"eUg'bU_\[?im7W3oLNM&[4qKbkU#_n<
%Pr`kP77[5VZpVL`W,s#M+cudFqQj$?KW\fNMEidR?A.D8W3RKG[5*b*+i-3'mFL%..$h;nWE%KRY1,oX%X2-NJO/nSGp[`'?sn2s
%)mr-L4hNXGB1?tcO$j3Li6S;(+EX/6TVe$K[q-p+qIK8":#bqC[&b0=k;#*kFX9QYc@V3F-kL(p,mT4T@7!K![o?nKX5aK)MsQOq
%62&Y7!F7(JI$2Nn.UA[%m"(mgp,@sHA^=ej*tMZEAog8g8=GSr;ckj:9\"bi2ts=Wm1Jp!db4AK,uOKN3L&%po22/\lkC-q&ucf$
%S(F8OZrSp`$T1!6q+<>4WF'F$\8&<d%B;R.#b,f@P]iH(m?=pa2;6Y`Z'j!7[+H'3mF.TX@%1uGJjt/Z;9e2ss28W20Z/N2N!T89
%;Zi_o5rrQD@'ghXjccHNUR8(j;Yp^`<?(2%F$&)te+'iSLR?a1K1smBfHA\fG-`J12t#Tr4+Lpi5[]=:?%q.R)>#u8@$4$pH+U:-
%QN9?)G=ZM1^9GcV'_IbmG-jT>MT#?tAC<hHfi89j\CSUFf2juS"+l'+4NV$#LK[i?ZTM7=`aG+qOIT.W+>Lu*->DfpH'##O6&Q0e
%6[st4OZ^"QXhak`2r1(V:pP(h8g0$ojsi_f:bA/F;X=sXjcH<0/E;jan^,"UJsqt*@P4pYo:;2rlB(IfRr(LO$0*.SS3cgh#1_4I
%$\@Tb2?E31?9\`*"5J.magrGh2DX/ijR&%P@It.9/+$-\8Q0KR=jPs]<hFN#*)$HOqrhIK37F2h?t<pU98f*l'"&)#.jS-hA%=NS
%Hk<`Ta/n$gY6fp$\Y5jZCb6K68?Nlt9]lEt1\\8':a;gV5MODmG7[n8KnjOkgH7L+)GN;qAG(8E&r5`degNMN&#AGB3VV^-,_W<`
%BpK)9SLqD:4a+qMmNI.ARmLIAVnk)iETVn@CeJ`@OPakDTp`BP;dA$#-49q6asW0:\kiEeNM;1\%.Qb3'g6r$8C>Ncp*nUN'Tb+=
%RLCN*$H.8D27i@G<s)$lOYjle</#-s_NtR3ehOGK4O%8G=f87/(rV[h3%cZeH\[k<M8KP&)[Vd+n>@!LK[/+Aie^<49\'J!SO;Qr
%(?fKIO?E_A'.VWuLrmIDCILqjKLo/jbnd(N4`XYP`kkn2':[OKL<Uje0]_1PXU7uiOcUT?rl!Mui,"Mm/=dnqX2V?.j\3.#b^+o@
%mZ:a5Os+s_8gQ#ma-rH@.r!kF;<A^S+FG#+?#40NNfLUWi,GQR_,U/r,NqoUno!V7(Hqa\lbYV;GD9Fa$/P%NI3D[W[9tWn'>!AH
%HdtZ_mu<9PBI7hG`d;^/L="OFMhO_6Y.kY48Ji_D6;kM5etAFkaQeXY`OKpp`&/(ms497If0$iJo40j'$(C%VDFjA`4[h>_jrqa-
%)ra(n5QOHPPG>.t4<Gmj?X/t&LSP]+'T(p51+Ac.<s<mV*hiha`VbS]RrXLgQ!mqj.J8D?ZDFdn#8krRB2D%]7^X*lo=-l\n+oUh
%'&^bK%c,;fY]1*kI<l!kHe3"nc#h$0&STD+<c,Lc%i[BX=Vs3RFPAN`O?Cq)$l_Zf&K5b34d[]E@a<>m)*J72:#iIo]N\0&T%dAW
%,#U!I,Zq2A#s/C6_c<CAf[A]C&c)^3_E!RF\Z48eUFX&n&c*^*\GPWt-LICofWQH\^(:-e%geqF5<AK8kj</`mIBr$(M9M[)NBF,
%@69OgTYkponTW"%0[h9BZ9ZZRfPtbbOc38U;/N<U<OpI'i#:1UW+>\a8^KSA.:7Sg+BlV)ofL`GIPT`ElsHU2lP5X\V^73?j58a7
%l-[o7;H1oq<oSF^JhlJ>RrHr+VZVJr#Z>9f8kdBh>cIMIE[JuXGH;6qgKX,KB95Zt!e4PR+EX`\h,\+"*n)9''C&WQ.2QskPOJ%b
%3el+,6W^qg0SrE'`>7*;:H#T.6Wse;[N*fBYb97:kqGo86C5k1KC.m2+j2GG'!XdecYO>LXqpDd<J&a_n]X%^m\[8DKi)_QDh?NZ
%6LrnEGM/)fp6lVqo29>P%iHkVh!fMLL#Cbh\C*"jKKXGBga//q$6>9ckd[.6C=7%W?EhTrD<NC[*/Fs%WU$t<\'I3jp.n&jN5U$\
%ACAL3_$(paN'T&B=^Kl+bggshM7TJ2jc3c@L96%f'%tdqq@Sf`5ZBYH;&aeSC^NjadWl4i[`R)j"G%hfK!q3Ga/L7l).anP4?H:Q
%j_]3K_PSG:MPoR4X,1'+^;5[O&mLYi->Sri9D8_8RrgWn`LUAS;@Q9qlR8`cX/Sb\_M5%ab@#&8)(a`!]C6=h"f]*q<Fh`7;aooi
%Q^1EL]7=j0,5XZROa>]WLTm#VF;p"=GE\eT1IZ]_7'I+?K=&h0+A>rJRtBjuXVkpeB5#jf/mZ^l+tNZVch7N-kdl+k@Z\J;"%]!O
%6_Na!-LT-3o]gm[-09\V7=8kU%[apf_YskA_q:#()/2:ifH-2d[9E#gKfpGu/9Z];+%Tpd#l+!S,S7QT1nh@Tqfm6B$G"i0U51I)
%R5e&3UunoWKau9i\&_Ae'V$QqU(M)$XiR^_G3!JMJNgTD[PB.5Hg$nX<MdDYkf@/di8gAZL+K'OcY8m&4n*/559L;'h2PC./%.Bu
%Q>-6_+iVp5&b^U?G@S)Dh6b'(OMb#bG_'n&ZuF^'XJVQTKbC5uA&e2H5br:J5Hd?a]%42:e+QTSVk&<g)E[?!!OsUbkD?V/dg\p1
%1BR/cajW^9D'mQ_fbC1p>2ut]2/fhMp=al*VF,\Z/s-a0$Rab"+;$\erlj(]k\?=Dh1hnPCYH<&Y\qo:e_C9oMUbBeqV7B3\oK69
%_jkneeueMM>H#A]:H8CX(*6^p0/.5e'=J(DX3db(K>,ADC^Z^+d#iE\;skBU^2D(jm*I!*Lb%N"&un<B:e:Ia,h<&BPCAt?SJ,)H
%X>YeSJ)3O_h.h,A`N=$#2RP5K`.h_:O?Q@<0$<GP*[&0OM!h.i?,40/#akIaH`VPGG4ZJ//:Ha!mE5=+MC`aqMej-qoCn+/QLO\E
%T.ljCs$Nm;>s3?\D*DKGk9gWd;_d>!e?`:")o@@ojKc[H.6ERPW5s(#@/6t=q@q_N]As$_a-*7n$,5so4dIY`VW^N*;O*#!*n,LZ
%N::,A,2@>5aCn*Agl[Rph.M_Kl#RR=%TXpKM2k8eLtFGPlOPa&EajEMc'-[SK+N#kP?[#/i[4.LUPWjmEYbm@@;JX4MB4+$0B-Ek
%LUa@"'QH!g\>jta#KbN/)(P3^P7;Q%IGrQhD>rH#,=)1n2HFoe)g-lu7)NOSTfjeZdRcGl_YCPj-7)=;49H<hU0@sh]j/"S>js7D
%O`1(`7ZW4m_Ya[BBG'b^)9@V)UW$bah=AWCgZjZ[8;&(dZ!:[%Vp0*S0d;%!DUcgMG)+sQ+q[\W1!tC/P%DusJm//tpou3I,ttBK
%W$2D\[I)EJk3nk=dHRqm>QF]AXY?mUQlt.,U)J2Fq6Fnj0i`7.:SqdNJ^IVQ)YG@YR',b(cAj3V=YaW92,MYog%GE$:$]Fbka*rr
%)Z03$A$`;.3h(=Jg=`df_8*LMp&:?KgD*D(5*2sL@^&j-c_^J(T;j*D;Ng!jMaY+TMhpfu?UO:]VpVk(7kZmgY?0crOXou(EF2'-
%d(+V,Zg?WQg`+9sZnGWZAF!J$0jaa=6,nuk5B9=Vm'&F6EnS]-3CEbq4`i6>j\_,`2sCK$X2X\9h,Xqi*Y?4K0aXU7E0WpJJ,;*6
%6-4H9"6H^H.dBP_E)p*V&*.ChT*[51<Z,"]<E<UId8a>(%n0"#r+mRq$A$Dm8B317q()X96E=G@ae39H5T>4`r:gIcF<l(m&^fR:
%JgN:]lHL2PD^]/;1D765:9%d#4`AG,`t_kU669+K%"[hkP@:>NdB2'r9f?T^C9G;&U>+[p1q$L#:pO9Xq;+.2>*C]5OF@!o\e;Qk
%9<YH2J,75QPIL=S<.4Y<VBiQiA.>$+-hVh,/tqOcQ%A9C^%!]UrL=&:7r71K*%CUeaZ`LA=j`DDUotaE`TZ8tF=jF7,OZuJ7(A%a
%ZE.*LSW&61.dSV]Kppdtb!_9h2S[!`DnVMJ*3DETS!AOGJ80*ZlDNCQ:UqIt1mQoCVXBD.Hp_CA4+*14_MF'diQL,1X.u<<9qZ:8
%Rg]-"MS,=P=V[MsiTuLKfd-$74,""gP/?N;89,[,q4ih_Uo&Pj$PV2hj&Luie94m%H?2?6$Jr,kLVUHh1F[\.VSJuFOTr^>BW`%"
%KELLVH:4WHF7fa[X>aq\;mKu;APGtC5dtpH3KPPs26YD8,$I>"MG0GiKsjKPj>7'WTnKLrX]QhqOe%=pPUUt)!k"H%Zr\2M<aBPM
%Y%Wf4j_LQ$V/'tUj0FcNY-F>D"p<-$/Xek+W4dqe;TsEu(+)Cq1@BSmd7u/Fm`HfNZFmZ1#T/XU;.=65Q[LtFgpMmtC'Q;XZKf>-
%Y2sigO[t6L)-'la)ELNH&@MoS=^3dbAEQ=]=K7%AX.TcQ^p5=u!_Xa\.\@n.M$7Ig1(;=N`>Xu3.QT!n$&D"lK8J%'QFJb"(6D4u
%Y/mrh%)eLD]3LmFPl+JMdl>.7Sq>RkcM6PZ[*iL3eb&.U^[#U9pk!G7B=0pN^pj9aVmY6Nq-%6T<pS([2\B@l/!NK.2HH;>1qqU/
%:2Y'T2Pb^bT3Nja-ETo#i[K%^Rg/Nn447mOX5)%G`2,97_+7D)kQ$M/f7"Moli>5meX4UK?Y<k^/SSFa0peKF.<KCf=7")5U>_O.
%G@eAa32b&sqD@k'$3J!3>_&uf>W6tQMLa#86K6Z`6S`??FkiVrk_i7Q1a>)9i,4kKSmg#!@I$?i7J;0!84sWN+,_nE-(dUU(HX$.
%]$8:kJr=63BMgYQS4[?Kc!+N3=--d68X8/Wi*IYA9cBFI'=PFV;T<VtnnU?UqPk&]jk8V91(?X+k29fkH'j@^Y.@::Dk$c=6=G"^
%pr(Ok+IgGQO58B04E)Q7T!Gk"U\astOrt:k'5^TC+:Cbe%pP3tQXp/gposj06C-bnLe/_!W8^42Go_G'3Qr*>h?m6X[du(gNh+M]
%:ThDZeog]^=Q@CHnQ"/nO,,5^Ip#Fg?1Ig(OiRe\prfBXd?T[`PH5KR.2Gf%QG-T]Mj)qNkB"CB,YfItB(tJiXG8=[Y8[Mu]_q7W
%B[KQ\:T\P\O$_u$pkXtDod@?T^f<t=ZS[aJ7&g;1-P4i[du?20Yp1s59eVSRf"i6+\`rLJ6_4`q<m&\IZ1H^f8b8-Q0d]fQ^sZ[m
%QMO7e^Gb\kOV*\Dqt(NRS?(AfP-_F$R,pJ*>%/G6k4?![`9LuuID?`S_piqVQ=U5RYM!uk/Um3=V(uoY]k6o9NtX2rekDX)Zs-YP
%H?@T6:&dhE>T`dIpW1i:fhW+RF*+/6f12#INqBR(=>=siFM'WSe4mJU1\g%s2^.Xe]Usor4R!RC`_mpWZ(M(nBmt@o`.e13;'+jo
%CKSu<]IBbuW.n;VRH0E"4`'t?YGtaS0kC)S/$q]0R9'7[-e"p)9<8^KS,1+/Gr\A6Um);F\cL(L`%-oA,eWCG#2h2GYn12`1aN(T
%NQibcO8PmoXS^b2RM.Q+;f42fj*1ho]7MAOb&a(jAu?YFE)V.?m!f"f4`/%<>j8IROLCb[FOCD"ae>=P]?Q_ac3EKoVJSJjCF++[
%Hc["H8`WbpI9IsYdr'3[H/SnV?ZmVDq=K5KOo$l68Mq&7<E@bG:FFhnH)(=%&ed%G5fb(S>>R2!f-;$kU'[6((XdhsaXVer,Fp42
%>lkp(&ed%G5fb(3"BjZSArcru)*^:h6ACMFeW.24:$m65!HB989S?*Jknk3l[$O.$g$;A@h-hpHZ5?03JRlPmg5*L(2=B'rT'Jt>
%ofMIc4Q'n_rfICS#LQ3i=X2-K8*!B%gP$j.S:PpK7j_gKLtE.>Am0_aq8r3G()SIbHZkH^b`A?g.p4S8A-7s_TXUr2ECF=`(mu6+
%Cg@/,(h]LO4;Of(1ljrCA@X-Cka9R1!eZHR1AcE0$j)VI^g+l%PMS%;AI6_7B"Q%Lp9Juq'"VO8'FESQeaij5]!e[q5Rp=!H;69m
%Ci[.Jb6T@?@t=79`+9?o)_!Sc(gq*Dm&/#DA48([gDcnijXK2N\7uDjOLW3jL`T>F:bh.5/NM_T,ucpk6+)W.]pt1OMui'%#$E#0
%F%fOg<ShBs8uC=N@okEc[U"KJWHL?I-lHZjA-14qZS/RqKP]?Y)mi-bRhA1B<?>[tOBGpXqld:_1:X?`:UDB4gtj1>,s"r9KuC&3
%0XZJ^c3q.QXSOb(>176T(q@hmZ3_!,Eht99G;S0p*cC8A:K#oqQb7m)Y-N3Pfkr7*8+EfrU2"!M.[k+5;RiGe@YtAWp6ScdR_4&`
%[A2cTBV*q3'b*D(K'MG:ZYYLmH?UPkoG.H=Lank:Y+c4rhD"KH9pj]q>X_!j;q;*C0XB.NjZ:ee5$rR;#>k>\d?GcJmh&-+4Ch6m
%J,edO>)/:l@]u@p^/NYSSr)P;QOa_X1P)g&+gP)+Ln<Se^)AI15:UuuZ8u.sAN.@@)V$mDPbXudoaMMdGochIj<2$sP=F-1Lr^@s
%gAq$QN!uhQ6/U%PO]Zr@N3*/EWR%8ET[j:7fV%:Q43UG3=hOrR`[hP@.%bNu:GRKKdbL?P<")1>E*u*V>6Q3ck-D%"P&;%Y2.Kd:
%eI38<lp8lAhs+rsL'u1(OOgZE<6cUB3>36RP>!IO#Omq`@EsBp[OE&/$Z!Wo%$S5pF4V2=U6m)\O>5u7`C(guAru]L`5G?tQVgW(
%+B*o'5>B?)<n&P_!?@0\[LHc/\0]s[8DTGQQGMaiMtB-tesl$$]\,q'TqWeV(Hm+"+]1+Lbg]<oXCdjL$>P<%L=k>I=LEL^H&:L[
%)1HcrGP[/biE%U7$#8V.X(I`!@sZu'-.\$::&AC7+@87b]TR%O]k^s;_?,!bJ0bG&UEe0ODG,Mi`Bi'JFJP31M:jgqC'Bs;T];>Y
%h*hE)Vs>rSW6nmoF0-DDA_3]/q5+fpCID6E!#*3&q<<l/IaOEcpLfA<T/VU4dus+_=3hHBW]3Dm"JU2HRJ)t<UbV5VP/sO3P`+`C
%g6.$@jdWIT;`Ri9X:u?K85.;g"$)!-'Sck[R`&\9C8SZ:21`FKRgCHUM"DGC$kh#Fc9T`!P6?0pSnO/e.%51>e*G7[#ts_@n_>K)
%QC<oFU-U,`L0k[dW+^9+5c?Vq9"UjoTaPpgW27INbC`u%jMoR1Wi#;/AU`h2=N2(]h>&.,?A7R@6Q7TM3iKMe\oAK5BE3:8#:*p?
%!\k\agPj<EC4V8dCOqc!GIE)TdjM#eX-q"l<#G@$*E[Z11pBNp$mQEq*Jg^5B:rl7S#0eT][I4&VT:j"6-U,.^d--YRCp7K#(``k
%@'4+'8N03D4&Wb/)LG]'p,>>pBEQkCLsuY#);:liMJFoa8rXmIS-a3jJ],J8YTB@FR%ZZW,ANX)e/Fb'0I6h"QoWAFIe:-8J#K`l
%@]F)liI6#e1!9ie'(V<jrbi0#T-".@`Il*.$nta;aRV$WW*u.M#nSpeP=O7k_pH<G<^j?lUpdq1L2dD9VV+[.hCOajj$>TjM^-7k
%).kIVO[_-8j[o/5`&,"4+h6N1K4%#r\=Gp_05ipKCPB]#)DJRGc&PB,Bl(4\":Su8,m-$1:#:='6epanpL(.\L"R3`K,t9(c*e_u
%Iq=U0k[eX=$ID[GO+eqWhU\s4b*XN2k!6p/l1`GAT0eW7ZH;_dFJMX6rsggH.9K!Xcr4-hQ;bL(.lg:$,hZ]1h*)J#1!W&)+;:a5
%Tt;<734P(/j(J('NX?XgP3.]pDQm\!&eQn7>f]=aq=Ko,Y,R.8\<%l2#Jscf0UiN=OM5WN"en=1ZHUpTcuV*KF'-Kpd1`uqF,4tl
%Q`3<+8]'.Ip=J;%Wj)>=`U3Xjg3<O2=Fq8sP<'p]8^q>q8OI#HE32\;Xu-BW%6q/(*j3S96m-(g0K)BoJhCK;G=/^Vfcp0BJLeHA
%0TqlU86'?Z=0e9,\e?g?Od3U%Y!gS9F$0W_'KtK%m!;-WcAecon^;G@_kd'b_Kl401P)NsM/6u[jt]3L#Y>bW?:MKA*!;C(TUV::
%%\%.=RI1ZqbV38ci@tk1SI%RR%&+d_\=1gb']]ZV0hVGo"V%c3L65iU"DO$0,Bls@o^(QSQni8j[-0<rNn\-$PSL+1P$B@<WeLdo
%RethRN>'o"Q\_*(7jhrr1J+/X"[0a.%l^XF0e"&BR/CPicniIBcNln++,MkHr>7<Z(\7b=nlat;Yu*;kofLU>,*O"BXQ/8SNf5:f
%L`77C]gPA*Y`P5T"/a(VgBe)91\;dV\6[GMMkISac_L]M^$Yb40\b?ba$Ec5a1FZYHhu4#Q,2"Ng/5,JOXicAA''79H,6%-6u6a+
%"Uu(X1r*);nEZgYF+ulB-V0b'+%R2.7GI&iVK1o[@<97'$PRfpfXlVY,%uM;TS]c7i<BbIAVnG.":\WXOhr/I@UnBZ@4!dK$lt02
%)J:1+OEE\rY+^3B4UrTJWpNFa60%DP\=fgI3KWQp$XCsW&iEVTd$^pP\mA^DWN2G1$X;.TUMKNfG;HL<3No;GOO37e\t101C:9a`
%#$6,uV@+8&'P*rWKFH[-?_Eqsd=&IWQ@X:=7j`B[LmSYTAm^(f'rl;n$s9NE4#b!Inb)_h8#s*HR:4F#AF?I2A<E6.7OA>/a:<Q/
%J:W`SDiP/c7^EqR$l+Dt_RPW*Z<7ZZN*hcV3X10"(gsLVOGSu@Js-:W-c<<6Vee)T^*1Lb_+;q`1\"`k-=eShPS_o=R+5?7cWM`R
%M+C=_!:/$hMA`i\26J_=V?X$>Ff*6;)9%4!:/#]^0m3,K:0_F@Q>6&:>&_H^lh]i/c!G^j`tkrHZGf"%b72-qn.Lj>JZ5<!/._@*
%@+,OJ@D^YBc!e%uVimpL!LI-aTTY$^GANqsm0^o=)ZF#F%8%_![3K52^,S22ALSV4=Me9[J*W/f.88&A.XO;ueH1)0!c`:6XI&-A
%bn^pJDSXa)*n!qV1YM5;JK%N;(gLR6K%WGU:f;=p`k0E")8R'6b!jbQGQ-l641_G4,G<5JDRWt=^I33JrNVl$;IFet!"h#C[%lu+
%UC?K]]9GBJRI<QP8X\JNd'Xa;DK4&dni,DnVqZonn8C=3c+dh2,9&CWZ0%A0M_<TZr"@Z=$QX)0!9TW7^bWUB^nbocYN3$-8=\)T
%a;l6l;#5Pi\E\*+#[OcURcik#_!9$<gMA9>lu"h)c:#rc.?X+BQ3:I7rQYE<RO9Jg.oP7C!EX;E_j5^F$q)/ab62i;%C7<ej0K++
%3([`-Te0'm='?uC]X:Gjmc!=DcKFE)eY2G?o*%'/GL<_'OasWB,LTMs]a"%^FRHH/,hl(-#8s03.RJB`'-.Qs3aFi.h&^0,*spup
%kBublh^!9Io[+OA]9o';KMTKT@cAJs>RnTBVd"0PiA[KU9*V$%+uaVSP&=(TpH"ZNfl<0XaHAd%BdF<oHIaZG`qj#U7EQHSY9k&(
%Cl&nAOsg&n1MfOpkUs!GdFHTp&sFfUYe%i<M55Fej&bGZ:(<'3Yp5t*4iEu!Q$R_c>'WSX"C$6Lg[aRQO>A%R[ec2_&9RXc9aZAr
%!Cd;Z;q28)/mCnWb-/2dR8%1&:'bMIUuJ'm51CCiTQ(j5;)AV:H8?`WOSo1!,WiWLP/RPH,M/q=3TG,)qh%HBJ^F4U7>M!Eei9K7
%bd'[nn_Od']RPt17ia1EULTYQb@S"Qop9:uq5R\JOcR(,^=TbfbS;EI=-Q#)[b_K.#X.\oEb3E>g3[?VO89b]03)B:dhqRmXXoq\
%OYY/r^8mjYP`Q(k]%?7c)":Qr![Q8@;^rl7kGr-n4uYI34W_d,m?p9ca-9\<?Igt*1c=9NVEc@dea<2H`p``F,D]!eaiEr4Gsgj]
%NK?@c)Onaa($bn3WCpT0jK/OT>Q+'']&7$p9B=u?57$(d@D7urfu$?1Db<8MrDcI&qXRM8lWa/HZ=BmuZR^<t`L&h>b/_<FV\9R?
%QfuS%EB:EAA*O3FF.&k.2J:fm3FZX@S<Ie%i5-t?k<<\17iCibL>YZV&\=eJ`9RQ3B!1opM-ITR=<.OA2>*of4u_'T/f3;s3mZFH
%2eX%6?3\);L[HCZ2)`#mo;JA1d;:ASLrf5-D9tPXfh5GmfK?f2Ql$D@>n%7]_$sAmVbYW-d2a?AaHG\Eh"PfJ*tgAl^snHh\RQ20
%D5/!2&^@]'$d>uuhT`[1d(99'h:M@kEJO*+=gp8)%pcdoLkBnc9h(8=;mT,3DJ.UDMbtVHH&$:&T3)SoB\2R>DuYcLHLXca^pLT&
%37(lZTF!%?[A%O=ip$T4C(PKPHATSj%'lVnd>Kg(APo3?AIqJnD=6,QX229B>T)+7#_lfJ068&Z'u+5fZ4@5!6etaON()h)K8J*R
%ctbp-g>jEU+Bk8K,CcOA?(oanbpn3o^ln_/,,Lda3sp!Iamu1:/Eo&Z*aXH,D`[7%&HM3YBJR6I@7$0[`%[G6.9RNnpjf.)k5RLo
%.D#9Q%UIAAB@HP#35A+kX8NN\'&B:m@&-15km5JP;p9=l.AJL&BG;;b8^MO6i>X?KaHK0Q9!>l1U'G.Z5Fu)?Y)Mkko5f#m,?.qn
%PY9&6*(uJ&X,"MDcZKp=!6^",%>W2eA.p1K187-T?ntIf5R6oO&0"u`_#o.3"HDReF@q'TiSBU`JtF.8h\&E5f2)=82%1kFPr"LS
%QU(Z2Om\S"YNZF+?#JT]okj6MM^GI[2tqOu;-;8Uo2la'-']\dei$lAJ5%eO\umHb4WH5!c*B#"/aJTq'$V<.,GSnM<mbaF>suTu
%qV#DhQlPq*h]H/&E@DTk%:hfo1dsaK2t^h-=!!WKdIF1)Gc3^jiHW&Wn$63Z<.k&WCtJbL+<6GLU+;6U'0Zr1$"?_G_dpqI<.W8E
%F3U/)5W"rp]`bd!:AF%PBdPUo`D]91TKp0B"67P?;eLs]g1ge#,#?g;2.O'n]9SLLOdFRo^.'613j:5<Vukr?&]i0l?W0;2ftG]b
%rrgr!anm0%Uh,[C3Z7]%fM6J!^KpFc5=T`mGPMEo^5h\'9/?%@(K\^miXa\iK-A1s9k0X_s,^(Y9<BG$^M1Z?=Y#VKb2,?Rm<cp6
%O"NBgMuWUjYJ:(m:I"d#Dnc5Co'>33nB9G8++F.X[m0o^o@JITIsM"c:LAVGo5B-TqYIgRrp@H43F9r*J,..Brh$Con@-1.c0p/V
%o1qRj=9!5+J,R\XJ,SWd^\i<XGl@<eT3oA4hlgDdK=Lj85QC56s753RO/qqD>^cJ9DgqT4hgRYZ3Y'1PEVQ_%r-\M;iue9ahu*4u
%pm[o$-boZUo,in@Q_2!@rUG)],48edrI<ns^\R`LfADfW(s$(^`IIh.s6\qJ!Rf0P/H~>
%AI9_PrivateDataEnd

%%EndDocument
 @endspecial 0 TeXcolorgray 0 TeXcolorgray 812 915 a
Fl(UNIVERSITY)55 b(COLLEGE)d(LONDON)p 1054 1089 2126
4 v 1133 1289 a Fk(F)-8 b(acult)m(y)34 b(of)e(Mathematics)i(and)f(Ph)m
(ysical)h(Sciences)1326 1513 y(Departmen)m(t)f(of)f(Ph)m(ysics)k(&)c
(Astronom)m(y)1444 1986 y Fj(THESIS)61 b(TITLE)927 3009
y Fi(Thesis)39 b(submitted)e(for)h(the)g(Degree)h(of)f(Do)s(ctor)g(of)
1072 3234 y(Philosoph)m(y)f(of)h(the)h(Univ)m(ersit)m(y)d(of)i(London)
2065 3554 y Fk(b)m(y)1689 3752 y Fh(YOUR)45 b(NAME)345
4441 y Fk(Sup)s(ervisors:)1645 b(Examiners:)345 4616
y(FIRST)33 b(SUPER)-11 b(VISORS)34 b(NAME)812 b(MAIN)33
b(EXAMINERS)h(NAME)345 4790 y(SECOND)f(SUPER)-11 b(VISORS)34
b(NAME)693 b(SECOND)33 b(EXAMINERS)h(NAME)p 0 TeXcolorgray
0 TeXcolorgray 1054 5412 V 1732 5637 a(F)-8 b(ebruary)33
b(12,)g(2010)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 3120 1879
a Fg(DEDICA)-9 b(TION)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 345 1273 a
Ff(I,)30 b(YOUR)h(NAME)f(HERE,)h(con\014rm)e(that)i(the)g(w)m(ork)f
(presen)m(ted)h(in)f(this)g(thesis)h(is)f(m)m(y)g(o)m(wn.)345
1443 y(Where)h(information)f(has)g(b)s(een)g(deriv)m(ed)g(from)g(other)
h(sources,)g(I)f(con\014rm)f(that)i(this)g(has)f(b)s(een)345
1612 y(indicated)h(in)f(the)g(thesis.)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 3148 1008 a Fe(Abstract)p 1488 1319 2400
9 v 345 1938 a Ff(FIRST)29 b(P)-8 b(ARA)m(GRAPH)32 b(MUST)e(BE)h(IN)f
(HERE.)486 2107 y(OTHER)g(P)-8 b(ARA)m(GRAPHS)31 b(F)m(OLLO)m(W.)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 1809 1008 a Fe(Ac)-5 b(kno)g(wledgemen)g(ts)p
1016 1319 2400 9 v -128 1938 a Ff(FIRST)30 b(P)-8 b(ARA)m(GRAPH)32
b(MUST)e(BE)g(IN)h(HERE.)14 2107 y(OTHER)e(P)-8 b(ARA)m(GRAPHS)32
b(F)m(OLLO)m(W.)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 9 9
TeXDict begin 9 8 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 2914 1357
a Fd(QUOTE)35 b(GOES)g(HERE)2381 1701 y Ff(A)m(UTHOR)c(OF)f(QUOTE)g
(GOES)f(HERE)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 10 10
TeXDict begin 10 9 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 11 11
TeXDict begin 11 10 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 3132 1022 a Fe(Con)-5 b(ten)g(ts)p 1488
1333 2400 9 v 345 1926 a Fc(T)c(able)35 b(of)g(Con)m(ten)m(ts)2626
b(11)345 2186 y(List)35 b(of)g(Figures)2774 b(13)345
2446 y(List)35 b(of)g(T)-9 b(ables)2820 b(15)345 2707
y(1)84 b(Chapter)34 b(1)2842 b(17)345 2967 y(2)84 b(Chapter)34
b(2)2842 b(19)345 3227 y(3)84 b(Chapter)34 b(3)2842 b(21)345
3487 y(4)84 b(Chapter)34 b(4)2842 b(23)345 3748 y(5)84
b(Chapter)34 b(5)2842 b(25)345 4008 y(6)84 b(Chapter)34
b(6)2842 b(27)345 4268 y(7)84 b(Chapter)34 b(7)2842 b(29)345
4529 y(8)84 b(Chapter)34 b(8)2842 b(31)345 4789 y(A)57
b(App)s(endix)35 b(A)2743 b(33)345 5049 y(B)62 b(App)s(endix)35
b(B)2748 b(35)345 5309 y(C)60 b(App)s(endix)35 b(C)2746
b(37)345 5570 y(Bibliograph)m(y)2854 b(39)p 0 TeXcolorgray
2071 6005 a Ff(11)p 0 TeXcolorgray eop end
%%Page: 12 12
TeXDict begin 12 11 bop 0 TeXcolorgray 0 TeXcolorgray
-128 15 a Ff(12)3101 b Fb(Contents)p -128 77 3544 4 v
0 TeXcolorgray 894 3101 a Ff(This)29 b(page)i(w)m(as)g(in)m(ten)m
(tionally)i(left)e(blank)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 13 13
TeXDict begin 13 12 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 2657 1022 a Fe(List)66 b(of)e(Figures)p
1488 1333 2400 9 v 0 TeXcolorgray 2071 6005 a Ff(13)p
0 TeXcolorgray eop end
%%Page: 14 14
TeXDict begin 14 13 bop 0 TeXcolorgray 0 TeXcolorgray
-128 15 a Ff(14)2872 b Fb(List)32 b(of)h(Figur)-5 b(es)p
-128 77 3544 4 v 0 TeXcolorgray 894 3101 a Ff(This)29
b(page)i(w)m(as)g(in)m(ten)m(tionally)i(left)e(blank)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 15 15
TeXDict begin 15 14 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 2742 1022 a Fe(List)66 b(of)e(T)-16 b(ables)p
1488 1333 2400 9 v 0 TeXcolorgray 2071 6005 a Ff(15)p
0 TeXcolorgray eop end
%%Page: 16 16
TeXDict begin 16 15 bop 0 TeXcolorgray 0 TeXcolorgray
-128 15 a Ff(16)2913 b Fb(List)33 b(of)g(T)-7 b(ables)p
-128 77 3544 4 v 0 TeXcolorgray 894 3101 a Ff(This)29
b(page)i(w)m(as)g(in)m(ten)m(tionally)i(left)e(blank)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 17 17
TeXDict begin 17 16 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 3035 1105 a Fe(Chapter)64 b(1)p 1488 1458
2400 9 v 0 TeXcolorgray 0 TeXcolorgray 2864 1931 a Fa(Chapter)78
b(1)p 0 TeXcolorgray 0 TeXcolorgray 2979 2532 a Fb(QUOTE)32
b(GOES)g(HERE)3483 2871 y Ff(A)m(UTHOR)345 3140 y(FIRST)d(P)-8
b(ARA)m(GRAPH)486 3309 y(THE)30 b(REST)f(F)m(OLLO)m(W)i(HERE.)p
0 TeXcolorgray 2071 6005 a(17)p 0 TeXcolorgray eop end
%%Page: 18 18
TeXDict begin 18 17 bop 0 TeXcolorgray 0 TeXcolorgray
-128 15 a Ff(18)2564 b Fb(Chapter)34 b(1.)75 b(Chapter)34
b(1)p -128 77 3544 4 v 0 TeXcolorgray 894 3101 a Ff(This)29
b(page)i(w)m(as)g(in)m(ten)m(tionally)i(left)e(blank)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 19 19
TeXDict begin 19 18 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 3035 1105 a Fe(Chapter)64 b(2)p 1488 1458
2400 9 v 0 TeXcolorgray 0 TeXcolorgray 2864 1931 a Fa(Chapter)78
b(2)p 0 TeXcolorgray 0 TeXcolorgray 2979 2532 a Fb(QUOTE)32
b(GOES)g(HERE)3483 2871 y Ff(A)m(UTHOR)345 3140 y(FIRST)d(P)-8
b(ARA)m(GRAPH)486 3309 y(THE)30 b(REST)f(F)m(OLLO)m(W)i(HERE.)p
0 TeXcolorgray 2071 6005 a(19)p 0 TeXcolorgray eop end
%%Page: 20 20
TeXDict begin 20 19 bop 0 TeXcolorgray 0 TeXcolorgray
-128 15 a Ff(20)2564 b Fb(Chapter)34 b(2.)75 b(Chapter)34
b(2)p -128 77 3544 4 v 0 TeXcolorgray 894 3101 a Ff(This)29
b(page)i(w)m(as)g(in)m(ten)m(tionally)i(left)e(blank)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 21 21
TeXDict begin 21 20 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 3035 1105 a Fe(Chapter)64 b(3)p 1488 1458
2400 9 v 0 TeXcolorgray 0 TeXcolorgray 2864 1931 a Fa(Chapter)78
b(3)p 0 TeXcolorgray 0 TeXcolorgray 2979 2532 a Fb(QUOTE)32
b(GOES)g(HERE)3483 2871 y Ff(A)m(UTHOR)345 3140 y(FIRST)d(P)-8
b(ARA)m(GRAPH)486 3309 y(THE)30 b(REST)f(F)m(OLLO)m(W)i(HERE.)p
0 TeXcolorgray 2071 6005 a(21)p 0 TeXcolorgray eop end
%%Page: 22 22
TeXDict begin 22 21 bop 0 TeXcolorgray 0 TeXcolorgray
-128 15 a Ff(22)2564 b Fb(Chapter)34 b(3.)75 b(Chapter)34
b(3)p -128 77 3544 4 v 0 TeXcolorgray 894 3101 a Ff(This)29
b(page)i(w)m(as)g(in)m(ten)m(tionally)i(left)e(blank)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 23 23
TeXDict begin 23 22 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 3035 1105 a Fe(Chapter)64 b(4)p 1488 1458
2400 9 v 0 TeXcolorgray 0 TeXcolorgray 2864 1931 a Fa(Chapter)78
b(4)p 0 TeXcolorgray 0 TeXcolorgray 2979 2532 a Fb(QUOTE)32
b(GOES)g(HERE)3483 2871 y Ff(A)m(UTHOR)345 3140 y(FIRST)d(P)-8
b(ARA)m(GRAPH)486 3309 y(THE)30 b(REST)f(F)m(OLLO)m(W)i(HERE.)p
0 TeXcolorgray 2071 6005 a(23)p 0 TeXcolorgray eop end
%%Page: 24 24
TeXDict begin 24 23 bop 0 TeXcolorgray 0 TeXcolorgray
-128 15 a Ff(24)2564 b Fb(Chapter)34 b(4.)75 b(Chapter)34
b(4)p -128 77 3544 4 v 0 TeXcolorgray 894 3101 a Ff(This)29
b(page)i(w)m(as)g(in)m(ten)m(tionally)i(left)e(blank)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 25 25
TeXDict begin 25 24 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 3035 1105 a Fe(Chapter)64 b(5)p 1488 1458
2400 9 v 0 TeXcolorgray 0 TeXcolorgray 2864 1931 a Fa(Chapter)78
b(5)p 0 TeXcolorgray 0 TeXcolorgray 2979 2532 a Fb(QUOTE)32
b(GOES)g(HERE)3483 2871 y Ff(A)m(UTHOR)345 3140 y(FIRST)d(P)-8
b(ARA)m(GRAPH)486 3309 y(THE)30 b(REST)f(F)m(OLLO)m(W)i(HERE.)p
0 TeXcolorgray 2071 6005 a(25)p 0 TeXcolorgray eop end
%%Page: 26 26
TeXDict begin 26 25 bop 0 TeXcolorgray 0 TeXcolorgray
-128 15 a Ff(26)2564 b Fb(Chapter)34 b(5.)75 b(Chapter)34
b(5)p -128 77 3544 4 v 0 TeXcolorgray 894 3101 a Ff(This)29
b(page)i(w)m(as)g(in)m(ten)m(tionally)i(left)e(blank)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 27 27
TeXDict begin 27 26 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 3035 1105 a Fe(Chapter)64 b(6)p 1488 1458
2400 9 v 0 TeXcolorgray 0 TeXcolorgray 2864 1931 a Fa(Chapter)78
b(6)p 0 TeXcolorgray 0 TeXcolorgray 2979 2532 a Fb(QUOTE)32
b(GOES)g(HERE)3483 2871 y Ff(A)m(UTHOR)345 3140 y(FIRST)d(P)-8
b(ARA)m(GRAPH)486 3309 y(THE)30 b(REST)f(F)m(OLLO)m(W)i(HERE.)p
0 TeXcolorgray 2071 6005 a(27)p 0 TeXcolorgray eop end
%%Page: 28 28
TeXDict begin 28 27 bop 0 TeXcolorgray 0 TeXcolorgray
-128 15 a Ff(28)2564 b Fb(Chapter)34 b(6.)75 b(Chapter)34
b(6)p -128 77 3544 4 v 0 TeXcolorgray 894 3101 a Ff(This)29
b(page)i(w)m(as)g(in)m(ten)m(tionally)i(left)e(blank)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 29 29
TeXDict begin 29 28 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 3035 1105 a Fe(Chapter)64 b(7)p 1488 1458
2400 9 v 0 TeXcolorgray 0 TeXcolorgray 2864 1931 a Fa(Chapter)78
b(7)p 0 TeXcolorgray 0 TeXcolorgray 2979 2532 a Fb(QUOTE)32
b(GOES)g(HERE)3483 2871 y Ff(A)m(UTHOR)345 3140 y(FIRST)d(P)-8
b(ARA)m(GRAPH)486 3309 y(THE)30 b(REST)f(F)m(OLLO)m(W)i(HERE.)p
0 TeXcolorgray 2071 6005 a(29)p 0 TeXcolorgray eop end
%%Page: 30 30
TeXDict begin 30 29 bop 0 TeXcolorgray 0 TeXcolorgray
-128 15 a Ff(30)2564 b Fb(Chapter)34 b(7.)75 b(Chapter)34
b(7)p -128 77 3544 4 v 0 TeXcolorgray 894 3101 a Ff(This)29
b(page)i(w)m(as)g(in)m(ten)m(tionally)i(left)e(blank)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 31 31
TeXDict begin 31 30 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 3035 1105 a Fe(Chapter)64 b(8)p 1488 1458
2400 9 v 0 TeXcolorgray 0 TeXcolorgray 2864 1931 a Fa(Chapter)78
b(8)p 0 TeXcolorgray 0 TeXcolorgray 2979 2532 a Fb(QUOTE)32
b(GOES)g(HERE)3483 2871 y Ff(A)m(UTHOR)345 3140 y(FIRST)d(P)-8
b(ARA)m(GRAPH)486 3309 y(THE)30 b(REST)f(F)m(OLLO)m(W)i(HERE.)p
0 TeXcolorgray 2071 6005 a(31)p 0 TeXcolorgray eop end
%%Page: 32 32
TeXDict begin 32 31 bop 0 TeXcolorgray 0 TeXcolorgray
-128 15 a Ff(32)2564 b Fb(Chapter)34 b(8.)75 b(Chapter)34
b(8)p -128 77 3544 4 v 0 TeXcolorgray 894 3101 a Ff(This)29
b(page)i(w)m(as)g(in)m(ten)m(tionally)i(left)e(blank)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 33 33
TeXDict begin 33 32 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 2851 1105 a Fe(App)5 b(endix)64 b(A)p
1488 1458 2400 9 v 0 TeXcolorgray 0 TeXcolorgray 2644
1931 a Fa(App)6 b(endix)78 b(A)p 0 TeXcolorgray 2071
6005 a Ff(33)p 0 TeXcolorgray eop end
%%Page: 34 34
TeXDict begin 34 33 bop 0 TeXcolorgray 0 TeXcolorgray
-128 15 a Ff(34)2430 b Fb(App)-5 b(endix)34 b(A.)64 b(App)-5
b(endix)34 b(A)p -128 77 3544 4 v 0 TeXcolorgray 894
3101 a Ff(This)29 b(page)i(w)m(as)g(in)m(ten)m(tionally)i(left)e(blank)
p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 35 35
TeXDict begin 35 34 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 2859 1105 a Fe(App)5 b(endix)64 b(B)p
1488 1458 2400 9 v 0 TeXcolorgray 0 TeXcolorgray 2654
1931 a Fa(App)6 b(endix)78 b(B)p 0 TeXcolorgray 2071
6005 a Ff(35)p 0 TeXcolorgray eop end
%%Page: 36 36
TeXDict begin 36 35 bop 0 TeXcolorgray 0 TeXcolorgray
-128 15 a Ff(36)2437 b Fb(App)-5 b(endix)34 b(B.)65 b(App)-5
b(endix)34 b(B)p -128 77 3544 4 v 0 TeXcolorgray 894
3101 a Ff(This)29 b(page)i(w)m(as)g(in)m(ten)m(tionally)i(left)e(blank)
p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 37 37
TeXDict begin 37 36 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 2857 1105 a Fe(App)5 b(endix)64 b(C)p
1488 1458 2400 9 v 0 TeXcolorgray 0 TeXcolorgray 2651
1931 a Fa(App)6 b(endix)78 b(C)p 0 TeXcolorgray 2071
6005 a Ff(37)p 0 TeXcolorgray eop end
%%Page: 38 38
TeXDict begin 38 37 bop 0 TeXcolorgray 0 TeXcolorgray
-128 15 a Ff(38)2435 b Fb(App)-5 b(endix)34 b(C.)65 b(App)-5
b(endix)34 b(C)p -128 77 3544 4 v 0 TeXcolorgray 894
3101 a Ff(This)29 b(page)i(w)m(as)g(in)m(ten)m(tionally)i(left)e(blank)
p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 39 39
TeXDict begin 39 38 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 2802 1022 a Fe(Bibliograph)-5 b(y)p 1488
1333 2400 9 v 0 TeXcolorgray 2071 6005 a Ff(39)p 0 TeXcolorgray
eop end
%%Page: 40 40
TeXDict begin 40 39 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 41 41
TeXDict begin 41 40 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 2489 1751
a Fd(\\YOUR)35 b(QUOTE)g(GOES)g(HERE")2955 2095 y Ff(A)m(UTHOR)c(OF)f
(QUOTE)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 42 42
TeXDict begin 42 41 bop 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
